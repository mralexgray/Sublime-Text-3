{
	"folder_history":
	[
		"/dl/BeamSyncDropperSource",
		"/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino.orig",
		"/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino",
		"/Volumes/5T/_dl/src-2",
		"/Volumes/5T/ServiceData/GoogleDrive/_Unsaved",
		"/node",
		"/Volumes/5T/ServiceData/git/tuntaposx",
		"/Volumes/5T/_dl/tuntap_20150118.tar Folder",
		"/dotfiles",
		"/Volumes/5T/ServiceData/xdev/xcode-gcc",
		"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers",
		"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ESPWebFramework",
		"/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort",
		"/Volumes/5T/ServiceData/GoogleDrive/_IoT/AVR Tools",
		"/Volumes/5T/ServiceData/git/clang-format-configurator",
		"/Volumes/5T/ServiceData/AtoZ_framework/Frameworks",
		"/Volumes/5T/ServiceData/GoogleDrive/_IoT/avrdude-scp",
		"/Volumes/5T/ServiceData/GoogleDrive/_IoT/hid-serial",
		"/sketch",
		"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/TinyISP",
		"/iot/v-usb",
		"/Volumes/5T/ServiceData/GoogleDrive/_IoT/avr-cdc/cdc232.2011-06-24",
		"/Volumes/5T/_dl/usbcdcacm-2",
		"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa",
		"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII",
		"/sketch/hardware",
		"/sketch/hardware/megax4",
		"/Volumes/5T/ServiceData/git/resume",
		"/Volumes/5T/ServiceData/localadmin/Library/Arduino15/packages/ATTinyCore",
		"/Volumes/5T/ServiceData/localadmin/Library/Arduino15/packages/tiny",
		"/Volumes/5T/ServiceData/localadmin/Library/Arduino15/packages/attiny/hardware/avr",
		"/Volumes/5T/ServiceData/GoogleDrive/_IoT/attiny_pixel_switch",
		"/Volumes/5T/ServiceData/localadmin/Library/Arduino15/packages",
		"/node/atoz",
		"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries",
		"/sketch/UnicornHat",
		"/iot/unicorn-hat",
		"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries",
		"/Volumes/5T/ServiceData/node/atoz",
		"/opt/sming",
		"/iot/ArduinoLibraries/hardware/Cosa",
		"/Volumes/5T/ServiceData/GoogleDrive/_IoT/USBaspLoader",
		"/iot/vusbtiny",
		"/Volumes/5T/ServiceData/GoogleDrive/_IoT/v-usb",
		"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016",
		"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lib",
		"/Users/localadmin/.config/inkscape/extensions",
		"/Volumes/5T/_dl/inkscape-table-1.0",
		"/Volumes/5T/ServiceData/node/mrgray.com",
		"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming"
	],
	"last_version": 3101,
	"last_window_id": 109,
	"log_indexing": false,
	"settings":
	{
		"new_window_height": 719.0,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ui",
						"uint16_t"
					],
					[
						"setOutput",
						"setOutputLow"
					],
					[
						"rand",
						"randVal"
					],
					[
						"PWM",
						"PWMRANGE"
					],
					[
						"_C",
						"_CLEAR_Pin"
					],
					[
						"_l",
						"_level"
					],
					[
						"ga",
						"gasLight"
					],
					[
						"off",
						"offset"
					],
					[
						"Color",
						"colorCycle"
					],
					[
						"uint",
						"uint16_t"
					],
					[
						"NMe",
						"Adafruit_NeoMatrix"
					],
					[
						"S",
						"StackArray"
					],
					[
						"POR",
						"PORT_HIGH"
					],
					[
						"set",
						"setHigh"
					],
					[
						"board",
						"boards"
					],
					[
						"e",
						"endif"
					],
					[
						"DEF",
						"DEF_PWM"
					],
					[
						"be",
						"begin"
					],
					[
						"pri",
						"private"
					],
					[
						"chara",
						"character"
					],
					[
						"DE",
						"DEF_MAX_OUT"
					],
					[
						"THROTTLE_V_M",
						"THROTTLE_V_MAX"
					],
					[
						"OTA",
						"OTA_IP"
					],
					[
						"Up",
						"UPDATE_PIN"
					],
					[
						"ini",
						"initializeUs"
					],
					[
						"uin",
						"uint8_t"
					]
				]
			},
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 329.0,
				"last_filter": "plist",
				"selected_items":
				[
					[
						"plist",
						"Plist Binary: Toggle XML & Binary"
					],
					[
						"bina",
						"Plist Binary: Toggle XML & Binary"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"pat",
						"File: Copy Path"
					],
					[
						"path",
						"File: Copy Path"
					],
					[
						"name",
						"File: Copy Name"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"coff",
						"Set Syntax: CoffeeScript"
					],
					[
						"gith",
						"GitHub Flavored Markdown: Preview"
					],
					[
						"conf",
						"Set Syntax: Generic Config"
					],
					[
						"focu",
						"Focus File on Sidebar"
					],
					[
						"sshc",
						"Set Syntax: SSH Config"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"c++",
						"Set Syntax: C++"
					],
					[
						"move",
						"File: Move"
					],
					[
						"copy",
						"File: Copy Path"
					],
					[
						"focus",
						"Focus File on Sidebar"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"psth",
						"Permute Lines: Shuffle"
					],
					[
						"make",
						"Set Syntax: Makefile"
					],
					[
						"makef",
						"Set Syntax: Makefile"
					],
					[
						"refre",
						"Side Bar: Refresh"
					],
					[
						"refr",
						"Side Bar: Refresh"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"syc+",
						"Set Syntax: C++"
					],
					[
						"",
						"Copy File Path"
					],
					[
						"focud",
						"Focus File on Sidebar"
					],
					[
						"syn",
						"Set Syntax: C++"
					],
					[
						"sublime",
						"Colorsublime: Install Theme"
					],
					[
						"foc",
						"Focus File on Sidebar"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"cop",
						"Copy File Path"
					],
					[
						"ref",
						"Side Bar: Refresh"
					],
					[
						"color",
						"Colorsublime: Install Theme"
					],
					[
						"read",
						"ReadmePlease"
					],
					[
						"package",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"instl",
						"Package Control: Install Package"
					]
				],
				"width": 449.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/dotfiles/dotme/gitconfig",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino/.git/MERGE_MSG",
				"/Library/Preferences/com.apple.windowserver.plist",
				"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/IOKit/usb/IOUSBHostDevice.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/rsub/rsub.sublime-settings",
				"/sketch/libraries/ADC/doxygen/html/search/typedefs_73.html",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/sketch/libraries/Alexduino/src/Alexduino.cpp",
				"/sketch/libraries.off/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/Pin.h",
				"/sketch/libraries/Pin/src/Pin.cpp",
				"/sketch/libraries/OneButton/OneButton.cpp",
				"/sketch/libraries/OneButton/OneButton.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
				"/Volumes/5T/_dl/ShiftRegister.h",
				"/sketch/libraries/Talkie/talkie.cpp",
				"/sketch/libraries/Talkie/README.md",
				"/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/Arduino.h",
				"/sketch/libraries/Alexduino/src/Alexduino.h",
				"/sketch/My7Seg/My7Seg.ino",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.h",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.cpp",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
				"/sketch/libraries/SevenSegment/SevenSegment.h",
				"/sketch/libraries/SevenSegment/SevenSegment.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/My7Seg/My7Seg.ino",
				"/sketch/libraries/ICs/4511.h",
				"/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
				"/sketch/libraries/ICs/4511.cpp",
				"/sketch/libraries.off/BCDTo7Seg/examples/b4511_counter/b4511_counter.ino",
				"/sketch/libraries/BCDTo7Seg.virgin/BCDTo7Seg.h",
				"/sketch/libraries/Talkie/examples/_2_Voltmeter/_2_Voltmeter.ino",
				"/sketch/libraries/Talkie/talkie.h",
				"/sketch/libraries/Potentiometer/Potentiometer.h",
				"/sketch/libraries/Potentiometer/Potentiometer.cpp",
				"/sketch/libraries/ansiterm/readme.md",
				"/sketch/libraries/AsyncDelay/src/AsyncDelay.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/WString.h",
				"/sketch/libraries.off/ArduinoJson/third-party/gtest-1.7.0/xcode/Config/FrameworkTarget.xcconfig",
				"/sketch/hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBoldOblique12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBold12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp",
				"/sketch/libraries/LED/LED.cpp",
				"/sketch/libraries/Color/Color.h",
				"/sketch/libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h",
				"/sketch/libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/LUFA/Drivers/Board/Board.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII/makefile",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/AlexAVR/avr/programmers.txt",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.no.h",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.h",
				"/sketch/hardware/AlexAVR/avr/platform.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/SimpleThrottle/SimpleThrottle.ino",
				"/sketch/libraries/Handler/Handler.cpp",
				"/sketch/libraries/Handler/examples/CanYouHandleIt/CanYouHandleIt.ino",
				"/sketch/libraries/Handler/Handler.h",
				"/sketch/libraries/LED/LED.h",
				"/sketch/libraries/Throttle/examples/GoGoGoTiny/GoGoGoTiny.ino",
				"/sketch/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/libraries/Throttle/Throttle.cpp",
				"/sketch/libraries/GPIO/src/PinGroup.h",
				"/sketch/libraries/TimerLib/PinEffector.h",
				"/sketch/libraries/TimerLib/utility/FastDelegate.h",
				"/sketch/LEDme/LED.h",
				"/sketch/libraries/Segment7/Segment7.pdf",
				"/sketch/libraries/StackArray/StackArray.h",
				"/sketch/hardware/AlexAVR/avr/boards.txt",
				"/sketch/libraries/TimerLib/SimpleTimer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/LED/library.properties",
				"/sketch/pinguino.bootloader.c",
				"/sketch/hardware/avr-openhardware/avr/avrdude.conf",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.cpp",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.h",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.cpp",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.h",
				"/sketch/hardware/Cosa/avr/platform.txt",
				"/sketch/hardware/Cosa/avr/sub-modules",
				"/sketch/libraries/Adafruit_GFX_Library/gfxfont.h",
				"/sketch/libraries/Pin/src/boards/attinyX5.h",
				"/sketch/ACS712/xACS712/xACS712/Configurations/Adafruit Trinket 5V-16MHz.xcconfig",
				"/sketch/hardware/AlexAVR/avr/programmers.txt",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/sketch/libraries/GPIO/src/GPIO.h",
				"/sketch/libraries/Pin/library.properties",
				"/sketch/libraries/Pin/src/boards/others.h",
				"/sketch/libraries/GPIO/library.properties",
				"/sketch/libraries/GPIO/src/GPIO.cpp",
				"/sketch/hardware/google-tiny/avr/cores/tiny/WProgram.h",
				"/sketch/Classy/.pioenvs/nodemcu/FrameworkArduino/Arduino.h",
				"/sketch/hardware/google-tiny/avr/cores/tiny/Arduino.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/neomatrix-serial-input/neomatrixserial/neomatrixserial.ino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/breadboard/avr/boards.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/FastLED/FastLED.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Chrono/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Delegate.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/WiringFrameworkDependencies.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Interrupts.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Timer.h",
				"/opt/smi8ng",
				"/opt/sping",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/examples/GoGoGo/GoGoGo.ino",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.cpp",
				"/Users/localadmin/.macosz/modules/alex/functions/gzipit",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Periodic/Periodic.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/UdpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/TcpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/DriverPWM.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/LICENSE",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Makefile-rboot.mk",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/.travis.yml",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/samples/Basic_Runloop/app/application.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/SmingCore.h"
			],
			"find":
			{
				"height": 35.0
			},
			"find_in_files":
			{
				"height": 96.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"editor",
					"Quartz2DExtremeEnabled",
					"com.apple.windowserver.plist",
					"(",
					");",
					"inde",
					"DeviceRequest",
					"tty",
					"runtime",
					"runtim",
					"byte",
					"open",
					"UInt",
					"UInt ",
					"UInt",
					"inha",
					"unsigned int8_t",
					"UInt",
					"smile_bmp",
					"UInt",
					"my_4511",
					"on",
					",",
					"my_4511",
					"IC_4511",
					"&sp",
					"const uint8_t \\*(.*)\\s*PROGMEM",
					"const uint8_t (.*)\\[\\]",
					"(sp",
					"uint8_t s",
					";\nuint8_t ",
					"7129",
					"Button 2",
					"analog",
					"ANALOg_MAX",
					"PWM",
					"speed",
					"button2",
					"button",
					"button2",
					"button1",
					"0x.., \\/\\* (.).*",
					"0x5B, /* 2 */",
					"*/\n",
					"0x.., \\/\\* (.).*",
					"0x7C, /* b */",
					"cursor",
					"setTextColor",
					"expi",
					"handl",
					"test",
					"begin",
					"matrix.",
					"matr",
					"());",
					"fillScreen",
					"Adafruit_NeoMatrix",
					"avrdude",
					"USBKEY",
					"BOARD",
					"digital_pin_to_bit_mask_PGM",
					"m1284p",
					"uni",
					"m1284p",
					"ing",
					"PULSE",
					"LEDClass",
					"enum",
					"#",
					"0x05",
					"0x054",
					"0x06",
					"1284",
					"05",
					"sig",
					"__cxa_pure_virtual",
					"__AVR_ATTiny",
					"__AVR_ATmega32U4__",
					"recipe.preproc.macros",
					"__cxa_pure_virtual",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"pioenvs/",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"GFX",
					"pure",
					"effe",
					"toggle\\(",
					"on\\(\\)",
					"on()",
					"on",
					"off",
					"#define.*PWM.*\\w[0-9]*",
					"#define.*ANALOG.*\\w[0-9]*",
					"#define.*255",
					"#define.*ANALOG.*255",
					"#define.*PWM.*255",
					"#define.*PWM.*",
					"PWM_RANGE",
					"PWM",
					"REGD",
					"DEF_",
					"DEF_THR",
					"FAST",
					"                           ",
					"FAST",
					"PWM",
					"sap",
					"line",
					"move",
					"up\"",
					"time",
					"className",
					"rightn",
					"Print",
					"print",
					"DEB",
					"\nDEBO",
					"DEBO",
					"\nDEBO",
					"DEBO",
					"rest",
					"define.*\\sON\\s",
					"rest",
					"digitalWrite",
					"define.*\\sON\\s",
					"define.*\\sON"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"",
					"uint8_t",
					"unsigned int",
					"int8_t",
					"unsigned int",
					"sp",
					"const PROGMEM uint8_t $1[]",
					"const uint8_t * $1",
					"(&sp",
					"const uint8_t s",
					",\n              ",
					"Button 2 (gas)",
					"brake",
					"gas",
					"\"$1\",",
					"",
					"LED"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 25.0
			},
			"input":
			{
				"height": 36.0
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"replace":
			{
				"height": 46.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"my",
						"My7Seg/My7Seg.ino"
					],
					[
						"my7",
						"libraries/ADC/doxygen/html/search/typedefs_73.html"
					],
					[
						"orig",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"4511",
						"libraries/ICs/4511.h"
					],
					[
						"my7se",
						"My7Seg/My7Seg.ino"
					],
					[
						"matrixt",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"cancom",
						"libraries/Alexduino/examples/CanCompile/CanCompile.ino"
					],
					[
						"led",
						"libraries/LED/LED.h"
					],
					[
						"sim",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"simpl",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"mys",
						"My7Seg/My7Seg.ino"
					],
					[
						"aledxdu",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"async",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"matrixtest",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde"
					],
					[
						"alexdui",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"wstrin",
						"hardware/AlexAVR/avr/cores/arduino/WString.h"
					],
					[
						"gfx",
						"libraries/Adafruit_GFX_Library/Adafruit_GFX.h"
					],
					[
						"gfxc",
						"hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h"
					],
					[
						"color",
						"libraries/Color/Color.h"
					],
					[
						"matri",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"pixel",
						"libraries/NeoPixelBus_by_Makuna/src/NeoPixelAnimator.h"
					],
					[
						"adaf",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"asyn",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"neopix",
						"libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h"
					],
					[
						"matrix",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"alexd",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"pingro",
						"libraries/GPIO/src/PinGroup.h"
					],
					[
						"pin",
						"libraries/Pin/src/Pin.h"
					],
					[
						"",
						"libraries/LED/LED.h"
					],
					[
						"stack",
						"libraries/StackArray/StackArray.h"
					],
					[
						"stackarray",
						"libraries/StackArray/StackArray.h"
					],
					[
						"pin.h",
						"libraries/Pin/src/Pin.h"
					],
					[
						"asyncd",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"led.",
						"LEDme/LED.h"
					],
					[
						"wpro",
						"hardware/google-tiny/avr/cores/tiny/WProgram.h"
					],
					[
						"arduino.h",
						"hardware/google-tiny/avr/cores/tiny/Arduino.h"
					],
					[
						"gogo",
						"Throttle/examples/GoGoGo/GoGoGo.ino"
					],
					[
						"throttl",
						"Throttle/Throttle.cpp"
					],
					[
						"throttle2016",
						"Throttle2016.h"
					],
					[
						"throttle",
						"Throttle2016.h"
					],
					[
						"dele",
						"Sming/SmingCore/Delegate.h"
					],
					[
						"timer",
						"Sming/SmingCore/Timer.h"
					],
					[
						"smingco",
						"Sming/SmingCore/SmingCore.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"show_minimap": false,
			"show_open_files": true,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 319.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 1360.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ui",
						"uint16_t"
					],
					[
						"setOutput",
						"setOutputLow"
					],
					[
						"rand",
						"randVal"
					],
					[
						"PWM",
						"PWMRANGE"
					],
					[
						"_C",
						"_CLEAR_Pin"
					],
					[
						"_l",
						"_level"
					],
					[
						"ga",
						"gasLight"
					],
					[
						"off",
						"offset"
					],
					[
						"Color",
						"colorCycle"
					],
					[
						"uint",
						"uint16_t"
					],
					[
						"NMe",
						"Adafruit_NeoMatrix"
					],
					[
						"S",
						"StackArray"
					],
					[
						"POR",
						"PORT_HIGH"
					],
					[
						"set",
						"setHigh"
					],
					[
						"board",
						"boards"
					],
					[
						"e",
						"endif"
					],
					[
						"DEF",
						"DEF_PWM"
					],
					[
						"be",
						"begin"
					],
					[
						"pri",
						"private"
					],
					[
						"chara",
						"character"
					],
					[
						"DE",
						"DEF_MAX_OUT"
					],
					[
						"THROTTLE_V_M",
						"THROTTLE_V_MAX"
					],
					[
						"OTA",
						"OTA_IP"
					],
					[
						"Up",
						"UPDATE_PIN"
					],
					[
						"ini",
						"initializeUs"
					],
					[
						"uin",
						"uint8_t"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/avrdude-scp/avrssh.sh",
					"settings":
					{
						"buffer_size": 4010,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 349.0,
				"last_filter": "copy",
				"selected_items":
				[
					[
						"copy",
						"File: Copy Path"
					],
					[
						"focus",
						"Focus File on Sidebar"
					],
					[
						"path",
						"File: Copy Path"
					],
					[
						"c++",
						"Set Syntax: C++"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"psth",
						"Permute Lines: Shuffle"
					],
					[
						"make",
						"Set Syntax: Makefile"
					],
					[
						"makef",
						"Set Syntax: Makefile"
					],
					[
						"focu",
						"Focus File on Sidebar"
					],
					[
						"refre",
						"Side Bar: Refresh"
					],
					[
						"refr",
						"Side Bar: Refresh"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"pat",
						"File: Copy Path"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"syc+",
						"Set Syntax: C++"
					],
					[
						"",
						"Copy File Path"
					],
					[
						"focud",
						"Focus File on Sidebar"
					],
					[
						"syn",
						"Set Syntax: C++"
					],
					[
						"sublime",
						"Colorsublime: Install Theme"
					],
					[
						"foc",
						"Focus File on Sidebar"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"cop",
						"Copy File Path"
					],
					[
						"ref",
						"Side Bar: Refresh"
					],
					[
						"color",
						"Colorsublime: Install Theme"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"read",
						"ReadmePlease"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"package",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"instl",
						"Package Control: Install Package"
					]
				],
				"width": 449.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/avrdude-scp"
			],
			"file_history":
			[
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/sketch/libraries/Alexduino/src/Alexduino.cpp",
				"/sketch/libraries.off/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/Pin.h",
				"/sketch/libraries/Pin/src/Pin.cpp",
				"/sketch/libraries/OneButton/OneButton.cpp",
				"/sketch/libraries/OneButton/OneButton.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
				"/Volumes/5T/_dl/ShiftRegister.h",
				"/sketch/libraries/Talkie/talkie.cpp",
				"/sketch/libraries/Talkie/README.md",
				"/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/Arduino.h",
				"/sketch/libraries/Alexduino/src/Alexduino.h",
				"/sketch/My7Seg/My7Seg.ino",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.h",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.cpp",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
				"/sketch/libraries/SevenSegment/SevenSegment.h",
				"/sketch/libraries/SevenSegment/SevenSegment.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/My7Seg/My7Seg.ino",
				"/sketch/libraries/ICs/4511.h",
				"/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
				"/sketch/libraries/ICs/4511.cpp",
				"/sketch/libraries.off/BCDTo7Seg/examples/b4511_counter/b4511_counter.ino",
				"/sketch/libraries/BCDTo7Seg.virgin/BCDTo7Seg.h",
				"/sketch/libraries/Talkie/examples/_2_Voltmeter/_2_Voltmeter.ino",
				"/sketch/libraries/Talkie/talkie.h",
				"/sketch/libraries/Potentiometer/Potentiometer.h",
				"/sketch/libraries/Potentiometer/Potentiometer.cpp",
				"/sketch/libraries/ansiterm/readme.md",
				"/sketch/libraries/AsyncDelay/src/AsyncDelay.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/WString.h",
				"/sketch/libraries.off/ArduinoJson/third-party/gtest-1.7.0/xcode/Config/FrameworkTarget.xcconfig",
				"/sketch/hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBoldOblique12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBold12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp",
				"/sketch/libraries/LED/LED.cpp",
				"/sketch/libraries/Color/Color.h",
				"/sketch/libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h",
				"/sketch/libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/LUFA/Drivers/Board/Board.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII/makefile",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/AlexAVR/avr/programmers.txt",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.no.h",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.h",
				"/sketch/hardware/AlexAVR/avr/platform.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/SimpleThrottle/SimpleThrottle.ino",
				"/sketch/libraries/Handler/Handler.cpp",
				"/sketch/libraries/Handler/examples/CanYouHandleIt/CanYouHandleIt.ino",
				"/sketch/libraries/Handler/Handler.h",
				"/sketch/libraries/LED/LED.h",
				"/sketch/libraries/Throttle/examples/GoGoGoTiny/GoGoGoTiny.ino",
				"/sketch/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/libraries/Throttle/Throttle.cpp",
				"/sketch/libraries/GPIO/src/PinGroup.h",
				"/sketch/libraries/TimerLib/PinEffector.h",
				"/sketch/libraries/TimerLib/utility/FastDelegate.h",
				"/sketch/LEDme/LED.h",
				"/sketch/libraries/Segment7/Segment7.pdf",
				"/sketch/libraries/StackArray/StackArray.h",
				"/sketch/hardware/AlexAVR/avr/boards.txt",
				"/sketch/libraries/TimerLib/SimpleTimer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/LED/library.properties",
				"/sketch/pinguino.bootloader.c",
				"/sketch/hardware/avr-openhardware/avr/avrdude.conf",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.cpp",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.h",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.cpp",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.h",
				"/sketch/hardware/Cosa/avr/platform.txt",
				"/sketch/hardware/Cosa/avr/sub-modules",
				"/sketch/libraries/Adafruit_GFX_Library/gfxfont.h",
				"/sketch/libraries/Pin/src/boards/attinyX5.h",
				"/sketch/ACS712/xACS712/xACS712/Configurations/Adafruit Trinket 5V-16MHz.xcconfig",
				"/sketch/hardware/AlexAVR/avr/programmers.txt",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/sketch/libraries/GPIO/src/GPIO.h",
				"/sketch/libraries/Pin/library.properties",
				"/sketch/libraries/Pin/src/boards/others.h",
				"/sketch/libraries/GPIO/library.properties",
				"/sketch/libraries/GPIO/src/GPIO.cpp",
				"/sketch/hardware/google-tiny/avr/cores/tiny/WProgram.h",
				"/sketch/Classy/.pioenvs/nodemcu/FrameworkArduino/Arduino.h",
				"/sketch/hardware/google-tiny/avr/cores/tiny/Arduino.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/neomatrix-serial-input/neomatrixserial/neomatrixserial.ino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/breadboard/avr/boards.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/FastLED/FastLED.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Chrono/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Delegate.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/WiringFrameworkDependencies.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Interrupts.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Timer.h",
				"/opt/smi8ng",
				"/opt/sping",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/examples/GoGoGo/GoGoGo.ino",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.cpp",
				"/Users/localadmin/.macosz/modules/alex/functions/gzipit",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Periodic/Periodic.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/UdpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/TcpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/DriverPWM.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/LICENSE",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Makefile-rboot.mk",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/.travis.yml",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/samples/Basic_Runloop/app/application.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/SmingCore.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Switch File Deluxe/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Timer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Delegate.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/GotoCppInclude/GotoCppInclude.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Runloop/Runloop.h"
			],
			"find":
			{
				"height": 42.0
			},
			"find_in_files":
			{
				"height": 96.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"COM",
					"byte",
					"open",
					"UInt",
					"UInt ",
					"UInt",
					"inha",
					"unsigned int8_t",
					"UInt",
					"smile_bmp",
					"UInt",
					"my_4511",
					"on",
					",",
					"my_4511",
					"IC_4511",
					"&sp",
					"const uint8_t \\*(.*)\\s*PROGMEM",
					"const uint8_t (.*)\\[\\]",
					"(sp",
					"uint8_t s",
					";\nuint8_t ",
					"7129",
					"Button 2",
					"analog",
					"ANALOg_MAX",
					"PWM",
					"speed",
					"button2",
					"button",
					"button2",
					"button1",
					"0x.., \\/\\* (.).*",
					"0x5B, /* 2 */",
					"*/\n",
					"0x.., \\/\\* (.).*",
					"0x7C, /* b */",
					"cursor",
					"setTextColor",
					"expi",
					"handl",
					"test",
					"begin",
					"matrix.",
					"matr",
					"());",
					"fillScreen",
					"Adafruit_NeoMatrix",
					"avrdude",
					"USBKEY",
					"BOARD",
					"digital_pin_to_bit_mask_PGM",
					"m1284p",
					"uni",
					"m1284p",
					"ing",
					"PULSE",
					"LEDClass",
					"enum",
					"#",
					"0x05",
					"0x054",
					"0x06",
					"1284",
					"05",
					"sig",
					"__cxa_pure_virtual",
					"__AVR_ATTiny",
					"__AVR_ATmega32U4__",
					"recipe.preproc.macros",
					"__cxa_pure_virtual",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"pioenvs/",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"GFX",
					"pure",
					"effe",
					"toggle\\(",
					"on\\(\\)",
					"on()",
					"on",
					"off",
					"#define.*PWM.*\\w[0-9]*",
					"#define.*ANALOG.*\\w[0-9]*",
					"#define.*255",
					"#define.*ANALOG.*255",
					"#define.*PWM.*255",
					"#define.*PWM.*",
					"PWM_RANGE",
					"PWM",
					"REGD",
					"DEF_",
					"DEF_THR",
					"FAST",
					"                           ",
					"FAST",
					"PWM",
					"sap",
					"line",
					"move",
					"up\"",
					"time",
					"className",
					"rightn",
					"Print",
					"print",
					"DEB",
					"\nDEBO",
					"DEBO",
					"\nDEBO",
					"DEBO",
					"rest",
					"define.*\\sON\\s",
					"rest",
					"digitalWrite",
					"define.*\\sON\\s",
					"define.*\\sON",
					"define.*ON",
					"\\bD5\\b",
					"D5",
					"ws",
					"isdi",
					"ud",
					"ECHO_PORT",
					"echo",
					"Echoi"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
					"uint8_t",
					"unsigned int",
					"int8_t",
					"unsigned int",
					"sp",
					"const PROGMEM uint8_t $1[]",
					"const uint8_t * $1",
					"(&sp",
					"const uint8_t s",
					",\n              ",
					"Button 2 (gas)",
					"brake",
					"gas",
					"\"$1\",",
					"",
					"LED"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/avrdude-scp"
				}
			],
			"groups":
			[
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/avrdude-scp/avrssh.sh",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 4010,
								"regions":
								{
								},
								"selection":
								[
									[
										3202,
										3202
									]
								],
								"settings":
								{
									"syntax": "Packages/ShellScript/Shell-Unix-Generic.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 1721.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 34.0
			},
			"input":
			{
				"height": 36.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1360 741 0 0 1360 745 ",
			"project": "",
			"replace":
			{
				"height": 64.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"4511",
						"libraries/ICs/4511.h"
					],
					[
						"my7se",
						"My7Seg/My7Seg.ino"
					],
					[
						"matrixt",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"cancom",
						"libraries/Alexduino/examples/CanCompile/CanCompile.ino"
					],
					[
						"led",
						"libraries/LED/LED.h"
					],
					[
						"sim",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"simpl",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"mys",
						"My7Seg/My7Seg.ino"
					],
					[
						"aledxdu",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"async",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"matrixtest",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde"
					],
					[
						"alexdui",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"wstrin",
						"hardware/AlexAVR/avr/cores/arduino/WString.h"
					],
					[
						"gfx",
						"libraries/Adafruit_GFX_Library/Adafruit_GFX.h"
					],
					[
						"gfxc",
						"hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h"
					],
					[
						"color",
						"libraries/Color/Color.h"
					],
					[
						"matri",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"pixel",
						"libraries/NeoPixelBus_by_Makuna/src/NeoPixelAnimator.h"
					],
					[
						"adaf",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"asyn",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"neopix",
						"libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h"
					],
					[
						"matrix",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"alexd",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"pingro",
						"libraries/GPIO/src/PinGroup.h"
					],
					[
						"pin",
						"libraries/Pin/src/Pin.h"
					],
					[
						"",
						"libraries/LED/LED.h"
					],
					[
						"stack",
						"libraries/StackArray/StackArray.h"
					],
					[
						"stackarray",
						"libraries/StackArray/StackArray.h"
					],
					[
						"pin.h",
						"libraries/Pin/src/Pin.h"
					],
					[
						"asyncd",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"led.",
						"LEDme/LED.h"
					],
					[
						"wpro",
						"hardware/google-tiny/avr/cores/tiny/WProgram.h"
					],
					[
						"arduino.h",
						"hardware/google-tiny/avr/cores/tiny/Arduino.h"
					],
					[
						"gogo",
						"Throttle/examples/GoGoGo/GoGoGo.ino"
					],
					[
						"throttl",
						"Throttle/Throttle.cpp"
					],
					[
						"throttle2016",
						"Throttle2016.h"
					],
					[
						"throttle",
						"Throttle2016.h"
					],
					[
						"dele",
						"Sming/SmingCore/Delegate.h"
					],
					[
						"timer",
						"Sming/SmingCore/Timer.h"
					],
					[
						"smingco",
						"Sming/SmingCore/SmingCore.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 319.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 83,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ui",
						"uint16_t"
					],
					[
						"setOutput",
						"setOutputLow"
					],
					[
						"rand",
						"randVal"
					],
					[
						"PWM",
						"PWMRANGE"
					],
					[
						"_C",
						"_CLEAR_Pin"
					],
					[
						"_l",
						"_level"
					],
					[
						"ga",
						"gasLight"
					],
					[
						"off",
						"offset"
					],
					[
						"Color",
						"colorCycle"
					],
					[
						"uint",
						"uint16_t"
					],
					[
						"NMe",
						"Adafruit_NeoMatrix"
					],
					[
						"S",
						"StackArray"
					],
					[
						"POR",
						"PORT_HIGH"
					],
					[
						"set",
						"setHigh"
					],
					[
						"board",
						"boards"
					],
					[
						"e",
						"endif"
					],
					[
						"DEF",
						"DEF_PWM"
					],
					[
						"be",
						"begin"
					],
					[
						"pri",
						"private"
					],
					[
						"chara",
						"character"
					],
					[
						"DE",
						"DEF_MAX_OUT"
					],
					[
						"THROTTLE_V_M",
						"THROTTLE_V_MAX"
					],
					[
						"OTA",
						"OTA_IP"
					],
					[
						"Up",
						"UPDATE_PIN"
					],
					[
						"ini",
						"initializeUs"
					],
					[
						"uin",
						"uint8_t"
					]
				]
			},
			"buffers":
			[
				{
					"contents": "Searching 29029 files for \"00087\" (regex, case sensitive)\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/adium/build:\n    ERROR: Unable to open file\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/adium/Plugins/Purple Service/PurpleActionRequestWindow.xib:\n   81  								</object>\n   82  								<string key=\"NSAlternateContents\"/>\n   83: 								<object class=\"NSMutableString\" key=\"NSKeyEquivalent\" id=\"1000878754\">\n   84  									<characters key=\"NS.bytes\"/>\n   85  								</object>\n   ..\n  104  								<reference key=\"NSAlternateImage\" ref=\"266497572\"/>\n  105  								<string key=\"NSAlternateContents\"/>\n  106: 								<reference key=\"NSKeyEquivalent\" ref=\"1000878754\"/>\n  107  								<int key=\"NSPeriodicDelay\">200</int>\n  108  								<int key=\"NSPeriodicInterval\">25</int>\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/adium/Plugins/Purple Service/Resources/ca.lproj/DCPurpleZephyrJoinChatView.xib:\n  109  						<reference key=\"NSSuperview\" ref=\"111655903\"/>\n  110  						<bool key=\"NSEnabled\">YES</bool>\n  111: 						<object class=\"NSTextFieldCell\" key=\"NSCell\" id=\"860008729\">\n  112  							<int key=\"NSCellFlags\">67239424</int>\n  113  							<int key=\"NSCellFlags2\">71303168</int>\n  ...\n  304  						<reference key=\"object\" ref=\"592337588\"/>\n  305  						<array class=\"NSMutableArray\" key=\"children\">\n  306: 							<reference ref=\"860008729\"/>\n  307  						</array>\n  308  						<reference key=\"parent\" ref=\"111655903\"/>\n  ...\n  344  					<object class=\"IBObjectRecord\">\n  345  						<int key=\"objectID\">71</int>\n  346: 						<reference key=\"object\" ref=\"860008729\"/>\n  347  						<reference key=\"parent\" ref=\"592337588\"/>\n  348  					</object>\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/adium/Resources/GlobalEventsPreferences.xib:\n   56  						<int key=\"NSvFlags\">266</int>\n   57  						<array class=\"NSMutableArray\" key=\"NSSubviews\">\n   58: 							<object class=\"NSSegmentedControl\" id=\"700008702\">\n   59  								<reference key=\"NSNextResponder\" ref=\"918353506\"/>\n   60  								<int key=\"NSvFlags\">268</int>\n   ..\n   71  										<int key=\"NSfFlags\">16</int>\n   72  									</object>\n   73: 									<reference key=\"NSControlView\" ref=\"700008702\"/>\n   74  									<array class=\"NSMutableArray\" key=\"NSSegmentImages\">\n   75  										<object class=\"NSSegmentItem\">\n   ..\n  784  						<string key=\"label\">nextKeyView</string>\n  785  						<reference key=\"source\" ref=\"15288933\"/>\n  786: 						<reference key=\"destination\" ref=\"700008702\"/>\n  787  					</object>\n  788  					<int key=\"connectionID\">211</int>\n  ...\n  824  						<string key=\"label\">addOrRemoveAlert:</string>\n  825  						<reference key=\"source\" ref=\"919790391\"/>\n  826: 						<reference key=\"destination\" ref=\"700008702\"/>\n  827  					</object>\n  828  					<int key=\"connectionID\">219</int>\n  ...\n  840  						<string key=\"label\">button_addOrRemoveAlert</string>\n  841  						<reference key=\"source\" ref=\"919790391\"/>\n  842: 						<reference key=\"destination\" ref=\"700008702\"/>\n  843  					</object>\n  844  					<int key=\"connectionID\">221</int>\n  ...\n  887  					<object class=\"IBOutletConnection\" key=\"connection\">\n  888  						<string key=\"label\">nextKeyView</string>\n  889: 						<reference key=\"source\" ref=\"700008702\"/>\n  890  						<reference key=\"destination\" ref=\"107603041\"/>\n  891  					</object>\n  ...\n  929  							<reference ref=\"15288933\"/>\n  930  							<reference ref=\"107603041\"/>\n  931: 							<reference ref=\"700008702\"/>\n  932  						</array>\n  933  						<reference key=\"parent\" ref=\"461422854\"/>\n  ...\n 1220  					<object class=\"IBObjectRecord\">\n 1221  						<int key=\"objectID\">209</int>\n 1222: 						<reference key=\"object\" ref=\"700008702\"/>\n 1223  						<array class=\"NSMutableArray\" key=\"children\">\n 1224  							<reference ref=\"333418297\"/>\n ....\n 1229  						<int key=\"objectID\">210</int>\n 1230  						<reference key=\"object\" ref=\"333418297\"/>\n 1231: 						<reference key=\"parent\" ref=\"700008702\"/>\n 1232  					</object>\n 1233  				</array>\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/Cocotron/NSKeyValueCoding:\n    ERROR: Unable to open file\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/CurlHandle/SFTP/openssl/ssl/tls1.h:\n  431  #define TLS1_CK_DH_DSS_WITH_CAMELLIA_256_CBC_SHA	0x03000085\n  432  #define TLS1_CK_DH_RSA_WITH_CAMELLIA_256_CBC_SHA	0x03000086\n  433: #define TLS1_CK_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA	0x03000087\n  434  #define TLS1_CK_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA	0x03000088\n  435  #define TLS1_CK_ADH_WITH_CAMELLIA_256_CBC_SHA		0x03000089\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/NanoStore/Examples/iPhoneTest/iPhoneTest.xcodeproj/tciuro.pbxuser:\n   40  			7401409712F73CE900F204CF /* NSFNanoStore.m:1076 */,\n   41  			7401409A12F73D7000F204CF /* NSFNanoStore.m:259 */,\n   42: 			747AE9A912F75AE700087B3F /* NSFNanoStore.m:634 */,\n   43  		);\n   44  		codeSenseManager = 74B07DF9122478E600BDD6EE /* Code sense */;\n   ..\n   98  			74618565125CF46E00F66C84 /* PBXTextBookmark */ = 74618565125CF46E00F66C84 /* PBXTextBookmark */;\n   99  			7473B47412492C10002CD58A /* PBXTextBookmark */ = 7473B47412492C10002CD58A /* PBXTextBookmark */;\n  100: 			747AE87F12F750ED00087B3F /* PBXTextBookmark */ = 747AE87F12F750ED00087B3F /* PBXTextBookmark */;\n  101: 			747AE91612F7561A00087B3F /* PBXTextBookmark */ = 747AE91612F7561A00087B3F /* PBXTextBookmark */;\n  102: 			747AE93912F759AA00087B3F /* PBXTextBookmark */ = 747AE93912F759AA00087B3F /* PBXTextBookmark */;\n  103  			74877F0B122831C00054B48B /* PBXTextBookmark */ = 74877F0B122831C00054B48B /* PBXTextBookmark */;\n  104  			748E6C0E122B302000DE7334 /* PBXTextBookmark */ = 748E6C0E122B302000DE7334 /* PBXTextBookmark */;\n  ...\n  282  		vrLoc = 0;\n  283  	};\n  284: 	747AE87F12F750ED00087B3F /* PBXTextBookmark */ = {\n  285  		isa = PBXTextBookmark;\n  286  		fRef = 74B63E40129F26AA00B3B2A7 /* NanoStore.h */;\n  ...\n  292  		vrLoc = 0;\n  293  	};\n  294: 	747AE91612F7561A00087B3F /* PBXTextBookmark */ = {\n  295  		isa = PBXTextBookmark;\n  296  		fRef = 74B63E30129F26AA00B3B2A7 /* NSFNanoEngine.h */;\n  ...\n  302  		vrLoc = 618;\n  303  	};\n  304: 	747AE93912F759AA00087B3F /* PBXTextBookmark */ = {\n  305  		isa = PBXTextBookmark;\n  306  		fRef = 74B63E3E129F26AA00B3B2A7 /* NSFNanoStore_Private.h */;\n  ...\n  312  		vrLoc = 0;\n  313  	};\n  314: 	747AE9A912F75AE700087B3F /* NSFNanoStore.m:634 */ = {\n  315  		isa = PBXFileBreakpoint;\n  316  		actions = (\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/NanoStore/Examples/iPhoneTest/iPhoneTest.xcodeproj/tciuro.perspectivev3:\n  366  											<string>7401412712F7435E00F204CF</string>\n  367  											<string>7401413D12F743F300F204CF</string>\n  368: 											<string>747AE87F12F750ED00087B3F</string>\n  369: 											<string>747AE91612F7561A00087B3F</string>\n  370: 											<string>747AE93912F759AA00087B3F</string>\n  371  											<string>7427E5A912F82E2200BB10D0</string>\n  372  											<string>7427E5AA12F82E2200BB10D0</string>\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/NSLogger-CocoaLumberjack-connector/Example/Example/Example.xcodeproj/steipete.pbxuser:\n   64  		};\n   65  		perUserProjectItems = {\n   66: 			78149C8212A0635000879731 = 78149C8212A0635000879731 /* PBXTextBookmark */;\n   67  			78149C9D12A0676B00879731 /* PBXTextBookmark */ = 78149C9D12A0676B00879731 /* PBXTextBookmark */;\n   68  			78149C9E12A0676B00879731 /* PBXTextBookmark */ = 78149C9E12A0676B00879731 /* PBXTextBookmark */;\n   ..\n   93  		};\n   94  	};\n   95: 	78149C8212A0635000879731 /* PBXTextBookmark */ = {\n   96  		isa = PBXTextBookmark;\n   97  		fRef = 1D3623250D0F684500981E51 /* ExampleAppDelegate.m */;\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/NSLogger-CocoaLumberjack-connector/NSLogger/Desktop Viewer/Resources/LoggerWindow.xib:\n  244  											<string key=\"NSResourceName\">NSMenuCheckmark</string>\n  245  										</object>\n  246: 										<object class=\"NSCustomResource\" key=\"NSMixedImage\" id=\"1054000876\">\n  247  											<string key=\"NSClassName\">NSImage</string>\n  248  											<string key=\"NSResourceName\">NSMenuMixedState</string>\n  ...\n  263  												<int key=\"NSMnemonicLoc\">2147483647</int>\n  264  												<reference key=\"NSOnImage\" ref=\"13266356\"/>\n  265: 												<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n  266  												<string key=\"NSAction\">_popUpItemAction:</string>\n  267  												<reference key=\"NSTarget\" ref=\"938642101\"/>\n  ...\n  274  												<int key=\"NSMnemonicLoc\">2147483647</int>\n  275  												<reference key=\"NSOnImage\" ref=\"13266356\"/>\n  276: 												<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n  277  												<string key=\"NSAction\">_popUpItemAction:</string>\n  278  												<reference key=\"NSTarget\" ref=\"938642101\"/>\n  ...\n  367  								<int key=\"NSMnemonicLoc\">2147483647</int>\n  368  								<reference key=\"NSOnImage\" ref=\"13266356\"/>\n  369: 								<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n  370  							</object>\n  371  						</object>\n  ...\n  394  								<int key=\"NSMnemonicLoc\">2147483647</int>\n  395  								<reference key=\"NSOnImage\" ref=\"13266356\"/>\n  396: 								<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n  397  							</object>\n  398  						</object>\n  ...\n  421  								<int key=\"NSMnemonicLoc\">2147483647</int>\n  422  								<reference key=\"NSOnImage\" ref=\"13266356\"/>\n  423: 								<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n  424  							</object>\n  425  						</object>\n  ...\n  978  															<int key=\"NSMnemonicLoc\">2147483647</int>\n  979  															<reference key=\"NSOnImage\" ref=\"13266356\"/>\n  980: 															<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n  981  															<string key=\"NSAction\">_popUpItemAction:</string>\n  982  															<reference key=\"NSTarget\" ref=\"319025651\"/>\n  ...\n  994  																	<int key=\"NSMnemonicLoc\">2147483647</int>\n  995  																	<reference key=\"NSOnImage\" ref=\"13266356\"/>\n  996: 																	<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n  997  																	<string key=\"NSAction\">_popUpItemAction:</string>\n  998  																	<reference key=\"NSTarget\" ref=\"319025651\"/>\n  ...\n 1006  																	<int key=\"NSMnemonicLoc\">2147483647</int>\n 1007  																	<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1008: 																	<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1009  																	<string key=\"NSAction\">_popUpItemAction:</string>\n 1010  																	<int key=\"NSTag\">1</int>\n ....\n 1019  																	<int key=\"NSMnemonicLoc\">2147483647</int>\n 1020  																	<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1021: 																	<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1022  																	<string key=\"NSAction\">_popUpItemAction:</string>\n 1023  																	<int key=\"NSTag\">2</int>\n ....\n 1032  																	<int key=\"NSMnemonicLoc\">2147483647</int>\n 1033  																	<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1034: 																	<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1035  																	<string key=\"NSAction\">_popUpItemAction:</string>\n 1036  																	<int key=\"NSTag\">3</int>\n ....\n 1045  																	<int key=\"NSMnemonicLoc\">2147483647</int>\n 1046  																	<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1047: 																	<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1048  																	<string key=\"NSAction\">_popUpItemAction:</string>\n 1049  																	<int key=\"NSTag\">4</int>\n ....\n 1058  																	<int key=\"NSMnemonicLoc\">2147483647</int>\n 1059  																	<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1060: 																	<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1061  																	<string key=\"NSAction\">_popUpItemAction:</string>\n 1062  																	<int key=\"NSTag\">5</int>\n ....\n 1071  																	<int key=\"NSMnemonicLoc\">2147483647</int>\n 1072  																	<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1073: 																	<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1074  																	<string key=\"NSAction\">_popUpItemAction:</string>\n 1075  																	<int key=\"NSTag\">-1</int>\n ....\n 1083  																	<int key=\"NSMnemonicLoc\">2147483647</int>\n 1084  																	<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1085: 																	<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1086  																	<string key=\"NSAction\">_popUpItemAction:</string>\n 1087  																	<int key=\"NSTag\">-1</int>\n ....\n 1180  															</object>\n 1181  															<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1182: 															<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1183  															<string key=\"NSAction\">_popUpItemAction:</string>\n 1184  															<reference key=\"NSTarget\" ref=\"672475580\"/>\n ....\n 1196  																	<int key=\"NSMnemonicLoc\">2147483647</int>\n 1197  																	<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1198: 																	<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1199  																	<string key=\"NSAction\">_popUpItemAction:</string>\n 1200  																	<reference key=\"NSTarget\" ref=\"672475580\"/>\n ....\n 1208  																	<int key=\"NSMnemonicLoc\">2147483647</int>\n 1209  																	<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1210: 																	<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1211  																	<string key=\"NSAction\">_popUpItemAction:</string>\n 1212  																	<reference key=\"NSTarget\" ref=\"672475580\"/>\n ....\n 1219  																	<int key=\"NSMnemonicLoc\">2147483647</int>\n 1220  																	<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1221: 																	<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1222  																	<string key=\"NSAction\">_popUpItemAction:</string>\n 1223  																	<reference key=\"NSTarget\" ref=\"672475580\"/>\n ....\n 1230  																	<int key=\"NSMnemonicLoc\">2147483647</int>\n 1231  																	<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1232: 																	<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1233  																	<string key=\"NSAction\">_popUpItemAction:</string>\n 1234  																	<reference key=\"NSTarget\" ref=\"672475580\"/>\n ....\n 1242  																	<int key=\"NSMnemonicLoc\">2147483647</int>\n 1243  																	<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1244: 																	<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1245  																	<string key=\"NSAction\">_popUpItemAction:</string>\n 1246  																	<reference key=\"NSTarget\" ref=\"672475580\"/>\n ....\n 1253  																	<int key=\"NSMnemonicLoc\">2147483647</int>\n 1254  																	<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1255: 																	<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1256  																	<string key=\"NSAction\">_popUpItemAction:</string>\n 1257  																	<reference key=\"NSTarget\" ref=\"672475580\"/>\n ....\n 1264  																	<int key=\"NSMnemonicLoc\">2147483647</int>\n 1265  																	<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1266: 																	<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1267  																	<string key=\"NSAction\">_popUpItemAction:</string>\n 1268  																	<reference key=\"NSTarget\" ref=\"672475580\"/>\n ....\n 1560  																			<int key=\"NSState\">1</int>\n 1561  																			<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1562: 																			<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1563  																			<string key=\"NSAction\">_popUpItemAction:</string>\n 1564  																			<integer value=\"2\" key=\"NSRepObject\"/>\n ....\n 1577  																					<int key=\"NSMnemonicLoc\">2147483647</int>\n 1578  																					<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1579: 																					<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1580  																					<string key=\"NSAction\">_popUpItemAction:</string>\n 1581  																					<integer value=\"1\" key=\"NSRepObject\"/>\n ....\n 1589  																					<int key=\"NSMnemonicLoc\">2147483647</int>\n 1590  																					<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1591: 																					<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1592  																					<string key=\"NSAction\">_popUpItemAction:</string>\n 1593  																					<integer value=\"0\" key=\"NSRepObject\"/>\n ....\n 1630  																			<int key=\"NSState\">1</int>\n 1631  																			<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1632: 																			<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1633  																			<string key=\"NSAction\">_popUpItemAction:</string>\n 1634  																			<reference key=\"NSTarget\" ref=\"959241235\"/>\n ....\n 1798  																			<int key=\"NSState\">1</int>\n 1799  																			<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1800: 																			<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1801  																			<string key=\"NSAction\">_popUpItemAction:</string>\n 1802  																			<reference key=\"NSRepObject\" ref=\"529180575\"/>\n ....\n 1845  																			<int key=\"NSState\">1</int>\n 1846  																			<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1847: 																			<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1848  																			<string key=\"NSAction\">_popUpItemAction:</string>\n 1849  																			<integer value=\"4\" key=\"NSRepObject\"/>\n ....\n 1862  																					<int key=\"NSMnemonicLoc\">2147483647</int>\n 1863  																					<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1864: 																					<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1865  																					<string key=\"NSAction\">_popUpItemAction:</string>\n 1866  																					<integer value=\"5\" key=\"NSRepObject\"/>\n ....\n 1907  																			<int key=\"NSState\">1</int>\n 1908  																			<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1909: 																			<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1910  																			<string key=\"NSAction\">_popUpItemAction:</string>\n 1911  																			<reference key=\"NSRepObject\" ref=\"729869164\"/>\n ....\n 1924  																					<int key=\"NSMnemonicLoc\">2147483647</int>\n 1925  																					<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1926: 																					<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1927  																					<string key=\"NSAction\">_popUpItemAction:</string>\n 1928  																					<object class=\"NSConstantValueExpression\" key=\"NSRepObject\">\n ....\n 1939  																					<int key=\"NSMnemonicLoc\">2147483647</int>\n 1940  																					<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 1941: 																					<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 1942  																					<string key=\"NSAction\">_popUpItemAction:</string>\n 1943  																					<object class=\"NSConstantValueExpression\" key=\"NSRepObject\">\n ....\n 2111  																			<int key=\"NSState\">1</int>\n 2112  																			<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 2113: 																			<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 2114  																			<string key=\"NSAction\">_popUpItemAction:</string>\n 2115  																			<reference key=\"NSRepObject\" ref=\"546626147\"/>\n ....\n 2128  																					<int key=\"NSMnemonicLoc\">2147483647</int>\n 2129  																					<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 2130: 																					<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 2131  																					<string key=\"NSAction\">_popUpItemAction:</string>\n 2132  																					<object class=\"NSKeyPathExpression\" key=\"NSRepObject\">\n ....\n 2150  																					<int key=\"NSMnemonicLoc\">2147483647</int>\n 2151  																					<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 2152: 																					<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 2153  																					<string key=\"NSAction\">_popUpItemAction:</string>\n 2154  																					<object class=\"NSKeyPathExpression\" key=\"NSRepObject\">\n ....\n 2172  																					<int key=\"NSMnemonicLoc\">2147483647</int>\n 2173  																					<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 2174: 																					<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 2175  																					<string key=\"NSAction\">_popUpItemAction:</string>\n 2176  																					<object class=\"NSKeyPathExpression\" key=\"NSRepObject\">\n ....\n 2194  																					<int key=\"NSMnemonicLoc\">2147483647</int>\n 2195  																					<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 2196: 																					<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 2197  																					<string key=\"NSAction\">_popUpItemAction:</string>\n 2198  																					<object class=\"NSKeyPathExpression\" key=\"NSRepObject\">\n ....\n 2245  																			<int key=\"NSState\">1</int>\n 2246  																			<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 2247: 																			<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 2248  																			<string key=\"NSAction\">_popUpItemAction:</string>\n 2249  																			<integer value=\"99\" key=\"NSRepObject\"/>\n ....\n 2262  																					<int key=\"NSMnemonicLoc\">2147483647</int>\n 2263  																					<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 2264: 																					<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 2265  																					<string key=\"NSAction\">_popUpItemAction:</string>\n 2266  																					<integer value=\"8\" key=\"NSRepObject\"/>\n ....\n 2274  																					<int key=\"NSMnemonicLoc\">2147483647</int>\n 2275  																					<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 2276: 																					<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 2277  																					<string key=\"NSAction\">_popUpItemAction:</string>\n 2278  																					<integer value=\"9\" key=\"NSRepObject\"/>\n ....\n 2286  																					<int key=\"NSMnemonicLoc\">2147483647</int>\n 2287  																					<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 2288: 																					<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 2289  																					<string key=\"NSAction\">_popUpItemAction:</string>\n 2290  																					<integer value=\"4\" key=\"NSRepObject\"/>\n ....\n 2298  																					<int key=\"NSMnemonicLoc\">2147483647</int>\n 2299  																					<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 2300: 																					<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 2301  																					<string key=\"NSAction\">_popUpItemAction:</string>\n 2302  																					<integer value=\"5\" key=\"NSRepObject\"/>\n ....\n 2310  																					<int key=\"NSMnemonicLoc\">2147483647</int>\n 2311  																					<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 2312: 																					<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 2313  																					<string key=\"NSAction\">_popUpItemAction:</string>\n 2314  																					<integer value=\"6\" key=\"NSRepObject\"/>\n ....\n 2322  																					<int key=\"NSMnemonicLoc\">2147483647</int>\n 2323  																					<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 2324: 																					<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 2325  																					<string key=\"NSAction\">_popUpItemAction:</string>\n 2326  																					<integer value=\"7\" key=\"NSRepObject\"/>\n ....\n 2509  																			<int key=\"NSState\">1</int>\n 2510  																			<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 2511: 																			<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 2512  																			<string key=\"NSAction\">_popUpItemAction:</string>\n 2513  																			<reference key=\"NSRepObject\" ref=\"241816622\"/>\n ....\n 2526  																					<int key=\"NSMnemonicLoc\">2147483647</int>\n 2527  																					<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 2528: 																					<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 2529  																					<string key=\"NSAction\">_popUpItemAction:</string>\n 2530  																					<object class=\"NSKeyPathExpression\" key=\"NSRepObject\">\n ....\n 2577  																			<int key=\"NSState\">1</int>\n 2578  																			<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 2579: 																			<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 2580  																			<string key=\"NSAction\">_popUpItemAction:</string>\n 2581  																			<integer value=\"4\" key=\"NSRepObject\"/>\n ....\n 2594  																					<int key=\"NSMnemonicLoc\">2147483647</int>\n 2595  																					<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 2596: 																					<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 2597  																					<string key=\"NSAction\">_popUpItemAction:</string>\n 2598  																					<integer value=\"5\" key=\"NSRepObject\"/>\n ....\n 2606  																					<int key=\"NSMnemonicLoc\">2147483647</int>\n 2607  																					<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 2608: 																					<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 2609  																					<string key=\"NSAction\">_popUpItemAction:</string>\n 2610  																					<integer value=\"3\" key=\"NSRepObject\"/>\n ....\n 2618  																					<int key=\"NSMnemonicLoc\">2147483647</int>\n 2619  																					<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 2620: 																					<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 2621  																					<string key=\"NSAction\">_popUpItemAction:</string>\n 2622  																					<integer value=\"1\" key=\"NSRepObject\"/>\n ....\n 2630  																					<int key=\"NSMnemonicLoc\">2147483647</int>\n 2631  																					<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 2632: 																					<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 2633  																					<string key=\"NSAction\">_popUpItemAction:</string>\n 2634  																					<integer value=\"0\" key=\"NSRepObject\"/>\n ....\n 2642  																					<int key=\"NSMnemonicLoc\">2147483647</int>\n 2643  																					<reference key=\"NSOnImage\" ref=\"13266356\"/>\n 2644: 																					<reference key=\"NSMixedImage\" ref=\"1054000876\"/>\n 2645  																					<string key=\"NSAction\">_popUpItemAction:</string>\n 2646  																					<integer value=\"2\" key=\"NSRepObject\"/>\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter/app.js:\n    8  $.import('~/Library/Frameworks/ORSSerial.framework');\n    9  \n   10: // console.error($.MM2200087.getClass().methods())\n   11  \n   12  \n   ..\n   15  console.log(p)\n   16  \n   17: // var multimeter = $.MM2200087('new');\n   18  \n   19  \n   ..\n  153  // console.error($.MultiMeter.methods())\n  154  \n  155: // console.error($.MM2200087)\n  156  \n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter/package.json:\n    1  {\n    2:   \"name\": \"radioshack-2200087\",\n    3    \"version\": \"1.0.0\",\n    4    \"description\": \"\",\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter/pyverion.js:\n  751      if (( ((out instanceof Array) ? out[1] : __get__(out, \"__getitem__\", \"line 170: if out[1] == -1:\")([1], __NULL_OBJECT__)) ) == -1) {\n  752        var __left2,__right3;\n  753:       __left2 = \"Protocol Error: Please start an issue here:                 https://github.com/ddworken/2200087-Serial-Protocol/issues                 and include the following data: '\";\n  754        __right3 = strOfBytes;\n  755        var __left4,__right5;\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter/start.litcoffee:\n   24  	$.import '~/Library/Frameworks/ORSSerial.framework'\n   25  \n   26: 	# console.error($.MM2200087.getClass().methods())\n   27  \n   28  	p = $.ORSSerialPortManager('sharedSerialPortManager')('availablePorts')('firstObject')\n   ..\n   32  	blockDecl = ((self, obj) -> console.log \"#{obj}\")\n   33  \n   34: 	m = $.MM2200087 'meterOnPort', p, 'onChange', $ blockDecl, signature\n   35  \n   36  	# m 'setPort', p\n   ..\n   48  \n   49  \n   50: // console.error($.MM2200087.getClass().methods())\n   51  \n   52  \n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter/2200087-Serial-Protocol/pysimper.py:\n  221          if out[1] == -1:\n  222              print(\"Protocol Error: Please start an issue here: \\\n  223:                 https://github.com/ddworken/2200087-Serial-Protocol/issues \\\n  224                  and include the following data: '\" + strOfBytes + \"'\")\n  225              sys.exit(1)\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter/2200087-Serial-Protocol/README.md:\n    1: #2200087-Serial-Protocol\n    2  \n    3: The 2200087 is an inexpensive DMM sold at radioshack. It supports logging and graphing data on a computer, but the supplied code only supports Windows. This is a python script to allow for connecting to the multimeter over USB on Linux or Mac OSX. Due to radioshack not supplying any serial specifications, the below protocol was reverse engineered from simply observing the output of the DMM. \n    4  \n    5  #Installation and Usage\n    .\n    8  \n    9  ``` bash\n   10: git clone https://github.com/ddworken/2200087-Serial-Protocol.git\n   11  ```\n   12  \n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter/2200087-Serial-Protocol/serialDecoder.py:\n  281          if out[1] == -1:\n  282              print(\"Protocol Error: Please start an issue here: \\\n  283:                 https://github.com/ddworken/2200087-Serial-Protocol/issues \\\n  284                  and include the following data: '\" + strOfBytes + \"'\")\n  285              sys.exit(1)\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter/2200087-Serial-Protocol/serialDecoder.py.bak:\n  316          if out[1] == -1:\n  317              print(\"Protocol Error: Please start an issue here: \\\n  318:                 https://github.com/ddworken/2200087-Serial-Protocol/issues \\\n  319                  and include the following data: '\" + strOfBytes + \"'\")\n  320              exit(1)\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter/Example-darwin-x64/Example.app/Contents/Resources/app/MM2200087.h:\n    3  @import AtoZUniversal; @class SPrt ___ /*! USAGE:\n    4  \n    5:   _meter = [MM2200087 meterOnPort:SERIALPORTS[1] onChange:^{\n    6  \n    7      [_meter log];\n    .\n   26  ￭\n   27  \n   28: 🅺 MM2200087 : NSO <MultiMeter>\n   29  \n   30  + _Kind_  meterOnPort __SPrt_ port onChange: _Blk_ onChange ___\n   ..\n  381          if out[1] == -1:\n  382              print(\"Protocol Error: Please start an issue here: \\\n  383:                 https://github.com/ddworken/2200087-Serial-Protocol/issues \\\n  384                  and include the following data: '\" + strOfBytes + \"'\")\n  385              sys.exit(1)\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter/Example-darwin-x64/Example.app/Contents/Resources/app/MM2200087.m:\n    1  \n    2: #import \"MM2200087.h\"\n    3  #import \"ORSSerialPort.h\"\n    4  \n    .\n   39  //  _RO ORSSerialPort * port;\n   40  \n   41: INTERFACE(MM2200087Packet, NSO <MultiMeter>) packetWithData:(NSData *)data ___\n   42  \n   43  //_RO _SInt decimalPlace ___\n   ..\n   50  \n   51  ￭\n   52: @Plan MM2200087Packet\n   53  \n   54  @synthesize decimalPlace = _decimalPlace __\n   ..\n  148  ￭\n  149  \n  150: @Kind MM2200087 () <ORSSerialPortDelegate>\n  151: _NA MM2200087Packet *lastPacket ___\n  152  _NA mData incomingDataBuffer ___\n  153  ￭\n  154  \n  155: @Plan MM2200087 @synthesize onChange = _onChange, port = _port;\n  156  \n  157  + _Kind_ meterOnPort:(ORSSerialPort*)port onChange: _Blk_ onChange {\n  ...\n  187  \n  188      [_incomingDataBuffer  = _incomingDataBuffer ?: NSMutableData.new appendData:data];\n  189:     _lastPacket = [MM2200087Packet packetWithData:self.incomingDataBuffer];\n  190      if (_lastPacket.updated && self.onChange) _onChange();\n  191  \n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter/Example-darwin-x64/Example.app/Contents/Resources/app/package.json:\n    1  {\n    2:   \"name\": \"radioshack-2200087\",\n    3    \"version\": \"1.0.0\",\n    4    \"description\": \"\",\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter/lib/meter.coffee:\n   15  		signature = ['v',['?', '@']]\n   16  		blockDecl = ((self, obj) -> @callback(obj))\n   17: 		@meter = $.MM2200087 'meterOnPort', p, 'onChange', $ blockDecl, signature\n   18  		evtLoop.start()\n   19  \n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter/MultiMeterFramework/test.js:\n   23  // console.error($.MultiMeter.methods())\n   24  \n   25: // console.error($.MM2200087)\n   26: console.error($.MM2200087.getClass().methods())\n   27  \n   28  \n   ..\n   35  var block = (function(){ console.log(this); });\n   36  \n   37: var x = $.MM2200087('new');\n   38  // x('setOnChange', block)\n   39  x('setPort', p)\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter/scratch/app.junked.js:\n    8  $.import('~/Library/Frameworks/ORSSerial.framework');\n    9  \n   10: // console.error($.MM2200087.getClass().methods())\n   11  \n   12  \n   ..\n   15  console.log(p)\n   16  \n   17: // var multimeter = $.MM2200087('new');\n   18  \n   19  \n   ..\n  153  // console.error($.MultiMeter.methods())\n  154  \n  155: // console.error($.MM2200087)\n  156  \n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/MultiMeter/AppDelegate.m:\n    9  @property (weak) IBOutlet NSWindow *window;\n   10  @property (weak) IBOutlet GaugeView *guage;\n   11: @property									MM2200087 *m;\n   12  \n   13  @end\n   ..\n   32  \n   33  	};\n   34: 	_m = MM2200087.new;\n   35  	_m.port = SERIALPORTS[0];\n   36  	_m.onChange = oc;\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/ORSSerial/MM2200087.h:\n    2  @import AtoZUniversal; @class SPrt ___ /*! USAGE:\n    3  \n    4:   _meter = [MM2200087 meterOnPort:SERIALPORTS[1] onChange:^(id this){\n    5      \n    6  			_display.stringValue = [this display];\n    .\n    9  	or\n   10  	\n   11: 	MM2200087 *m = MM2200087.new;\n   12  	m.port			 = SERIALPORTS[0];\n   13  	m.onChange   = ^(id thing){ [thing log]; };\n   ..\n   64  - initWithID __UInt_ prod onChange ＾ObjC_ onChange ___ ￭\n   65  \n   66: 🅺 MM2200087 : NObj <MultiMeter> ￭\n   67  \n   68  #define kVOLTS      @\"VOLTS\"\n   ..\n  413          if out[1] == -1:\n  414              print(\"Protocol Error: Please start an issue here: \\\n  415:                 https://github.com/ddworken/2200087-Serial-Protocol/issues \\\n  416                  and include the following data: '\" + strOfBytes + \"'\")\n  417              sys.exit(1)\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/ORSSerial/MM2200087.m:\n    1  \n    2: #import \"MM2200087.h\"\n    3  #import \"ORSSerialPort.h\"\n    4  \n    .\n   16  static id segmentD ___\n   17  \n   18: @KIND(MM2200087Packet,<MultiMeter>)\n   19  ￭\n   20: @Plan MM2200087Packet\n   21  \n   22  @synthesize decimalPlace = _decimalPlace __\n   ..\n  147  ￭\n  148  \n  149: @Kind MM2200087 () <ORSSerialPortDelegate>\n  150  \n  151  _NA mData incomingDataBuffer ___\n  152: _NA MM2200087Packet *lastPacket ___\n  153  \n  154  ￭\n  155  \n  156: @Plan MM2200087 \n  157  \n  158  @synthesize onChange = _onChange __ port = _port ___ ///  history = _history ___\n  ...\n  196  	if (![_lastPacket.bits isEqualToArray:bits]) {\n  197  \n  198: 		id newpack = [MM2200087Packet.alloc initWithBits:bits];\n  199  		_lastPacket = newpack;\n  200  \n  ...\n  273  flags __\n  274  \n  275: INTERFACE(MM2200087Packet, NObj <MultiMeter>) packetWithData __Data_ d ___\n  276  _RO NSRunLoop *runloop;\n  277  _RO dispatch_queue_t syncQueue;\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/ORSSerial/ORSSerial.h:\n   30  #import \"ORSSerialPortManager.h\"\n   31  #import \"ORSSerialRequest.h\"\n   32: #import \"MM2200087.h\"\n   33  \n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/ORSSerial.xcodeproj/project.pbxproj:\n    8  \n    9  /* Begin PBXBuildFile section */\n   10: 		7B53B92B1C18B75500540FCE /* MM2200087.h in Headers */ = {isa = PBXBuildFile; fileRef = 7B53B8F91C18B69800540FCE /* MM2200087.h */; settings = {ATTRIBUTES = (Public, ); }; };\n   11: 		7B53B92C1C18B75500540FCE /* MM2200087.m in Sources */ = {isa = PBXBuildFile; fileRef = 7B53B8FA1C18B69800540FCE /* MM2200087.m */; };\n   12  		7B53B92E1C18B87C00540FCE /* ORSSerialPort+Attributes.m in Sources */ = {isa = PBXBuildFile; fileRef = 7B53B92D1C18B87C00540FCE /* ORSSerialPort+Attributes.m */; };\n   13  		7BC4956D1C21E68E008E4416 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 7BC4956C1C21E68E008E4416 /* AppDelegate.m */; };\n   ..\n   72  \n   73  /* Begin PBXFileReference section */\n   74: 		7B53B8F91C18B69800540FCE /* MM2200087.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; name = MM2200087.h; path = ORSSerial/MM2200087.h; sourceTree = SOURCE_ROOT; };\n   75: 		7B53B8FA1C18B69800540FCE /* MM2200087.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; name = MM2200087.m; path = ORSSerial/MM2200087.m; sourceTree = SOURCE_ROOT; };\n   76  		7B53B92D1C18B87C00540FCE /* ORSSerialPort+Attributes.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = \"ORSSerialPort+Attributes.m\"; path = \"ORSSerial/ORSSerialPort+Attributes.m\"; sourceTree = SOURCE_ROOT; };\n   77  		7B856C001C230B0F001E266C /* Mac-Framework.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; name = \"Mac-Framework.xcconfig\"; path = \"../../xcconfigs/Mac/Mac-Framework.xcconfig\"; sourceTree = \"<group>\"; };\n   ..\n   79  		7B89A3501C1F66B2000ADD8D /* index.js */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.javascript; name = index.js; path = ../Examples/JSMultiMeter/index.js; sourceTree = \"<group>\"; };\n   80  		7B89A3511C1F66B2000ADD8D /* start.litcoffee */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; name = start.litcoffee; path = ../Examples/JSMultiMeter/start.litcoffee; sourceTree = \"<group>\"; };\n   81: 		7BC495611C21BB08008E4416 /* 2200087-Serial-Protocol */ = {isa = PBXFileReference; lastKnownFileType = folder; name = \"2200087-Serial-Protocol\"; path = \"../Examples/JSMultiMeter/2200087-Serial-Protocol\"; sourceTree = \"<group>\"; };\n   82  		7BC495691C21E68C008E4416 /* MultiMeter.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = MultiMeter.app; sourceTree = BUILT_PRODUCTS_DIR; };\n   83  		7BC4956C1C21E68E008E4416 /* AppDelegate.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = AppDelegate.m; sourceTree = \"<group>\"; };\n   ..\n  195  				7B89A3501C1F66B2000ADD8D /* index.js */,\n  196  				7B89A3511C1F66B2000ADD8D /* start.litcoffee */,\n  197: 				7BC495611C21BB08008E4416 /* 2200087-Serial-Protocol */,\n  198: 				7B53B8F91C18B69800540FCE /* MM2200087.h */,\n  199: 				7B53B8FA1C18B69800540FCE /* MM2200087.m */,\n  200  				7B53B8FB1C18B69800540FCE /* USBAttributes */,\n  201  				9DCA89311A2BB15A009285EB /* ORSSerial.h */,\n  ...\n  244  				9DCA893A1A2BB1E2009285EB /* ORSSerialPort.h in Headers */,\n  245  				9DCA893E1A2BB1E2009285EB /* ORSSerialRequest.h in Headers */,\n  246: 				7B53B92B1C18B75500540FCE /* MM2200087.h in Headers */,\n  247  				9DD6B1D21B5F4338000AB46E /* ORSSerialPacketDescriptor.h in Headers */,\n  248  				9DCA89321A2BB15A009285EB /* ORSSerial.h in Headers */,\n  ...\n  437  				9DD6B1D31B5F4338000AB46E /* ORSSerialPacketDescriptor.m in Sources */,\n  438  				9DCA893B1A2BB1E2009285EB /* ORSSerialPort.m in Sources */,\n  439: 				7B53B92C1C18B75500540FCE /* MM2200087.m in Sources */,\n  440  				7B53B92E1C18B87C00540FCE /* ORSSerialPort+Attributes.m in Sources */,\n  441  				9DCA893D1A2BB1E2009285EB /* ORSSerialPortManager.m in Sources */,\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/ORSSerial.xcodeproj/project.xcworkspace/xcuserdata/localadmin.xcuserdatad/UserInterfaceState.xcuserstate:\n    <binary>\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/QuickSilver/Quicksilver/Resources/QSSplash.qtz:\n    <binary>\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/RoutingHTTPServerFramework/twitter_bootstrap_admin/assets:\n    ERROR: Unable to open file\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/RoutingHTTPServerFramework/twitter_bootstrap_admin/flatuipro/UI/css/global.css:\n    ERROR: Unable to open file\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/TwUI/TwUI.xcodeproj/project.pbxproj:\n   64  		48A10E8915B778E8007F9EE3 /* TUIView+Layout.m in Sources */ = {isa = PBXBuildFile; fileRef = 48A10E8715B778E8007F9EE3 /* TUIView+Layout.m */; };\n   65  		48A10E8B15B77A46007F9EE3 /* TUIView+Layout.h in Headers */ = {isa = PBXBuildFile; fileRef = 48A10E8A15B77A46007F9EE3 /* TUIView+Layout.h */; settings = {ATTRIBUTES = (Public, ); }; };\n   66: 		5000874016524B1C0067ED42 /* TUINavigationController.h in Headers */ = {isa = PBXBuildFile; fileRef = 5000873F16524B1C0067ED42 /* TUINavigationController.h */; settings = {ATTRIBUTES = (Public, ); }; };\n   67: 		5000874916524B1F0067ED42 /* TUINavigationController.m in Sources */ = {isa = PBXBuildFile; fileRef = 5000874816524B1F0067ED42 /* TUINavigationController.m */; };\n   68: 		5000874A1652C4380067ED42 /* TUINavigationController.m in Sources */ = {isa = PBXBuildFile; fileRef = 5000874816524B1F0067ED42 /* TUINavigationController.m */; };\n   69  		5EE983C013BE7834005F430D /* TUIAccessibility.m in Sources */ = {isa = PBXBuildFile; fileRef = CBB74C3F13BE6E1900C85CB5 /* TUIAccessibility.m */; };\n   70  		5EE983C113BE7834005F430D /* TUIActivityIndicatorView.m in Sources */ = {isa = PBXBuildFile; fileRef = CBB74C4113BE6E1900C85CB5 /* TUIActivityIndicatorView.m */; };\n   ..\n  425  		48A10E8A15B77A46007F9EE3 /* TUIView+Layout.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = \"TUIView+Layout.h\"; sourceTree = \"<group>\"; };\n  426  		48A6234F162C63E900DFA443 /* TUIScrollView+Private.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = \"TUIScrollView+Private.h\"; sourceTree = \"<group>\"; };\n  427: 		5000873F16524B1C0067ED42 /* TUINavigationController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = TUINavigationController.h; sourceTree = \"<group>\"; };\n  428: 		5000874816524B1F0067ED42 /* TUINavigationController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = TUINavigationController.m; sourceTree = \"<group>\"; };\n  429  		5EE983B713BE7809005F430D /* libtwui.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = libtwui.a; sourceTree = BUILT_PRODUCTS_DIR; };\n  430  		7B7AAEDD19CE15BD006DF96F /* TwUI.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; lineEnding = 0; name = TwUI.h; path = lib/UIKit/TwUI.h; sourceTree = \"<group>\"; xcLanguageSpecificationIdentifier = xcode.lang.objcpp; };\n  ...\n  781  				48A10E7F15B7769A007F9EE3 /* TUILayoutManager.h */,\n  782  				48A10E8015B7769A007F9EE3 /* TUILayoutManager.m */,\n  783: 				5000873F16524B1C0067ED42 /* TUINavigationController.h */,\n  784: 				5000874816524B1F0067ED42 /* TUINavigationController.m */,\n  785  				D491661F16FE76AD001A8CFD /* TUICarouselNavigationController.h */,\n  786  				D491662016FE76AD001A8CFD /* TUICarouselNavigationController.m */,\n  ...\n  981  				D0C7654615B626E200E7AC2C /* TUIView+TUIBridgedView.h in Headers */,\n  982  				7BFCD77E178A3FEC00CB9163 /* MTTimingFunctions.h in Headers */,\n  983: 				5000874016524B1C0067ED42 /* TUINavigationController.h in Headers */,\n  984  				D0C7655215B6294400E7AC2C /* TUIScrollView+TUIBridgedScrollView.h in Headers */,\n  985  				D0C7655D15B6297300E7AC2C /* NSClipView+TUIExtensions.h in Headers */,\n  ...\n 1249  				4837401316111B5C00322CA7 /* TUIRefreshControl.m in Sources */,\n 1250  				488A5838162FBE9B006CBF8B /* TUITableViewController.m in Sources */,\n 1251: 				5000874A1652C4380067ED42 /* TUINavigationController.m in Sources */,\n 1252  				48694D7A1658318000BE65BF /* NSAffineTransform+TUIExtensions.m in Sources */,\n 1253  				48694D801658318000BE65BF /* NSShadow+TUIExtensions.m in Sources */,\n ....\n 1333  				D0EA12F415C34FEA00FAA603 /* NSColor+TUIExtensions.m in Sources */,\n 1334  				488A5836162FBE9B006CBF8B /* TUITableViewController.m in Sources */,\n 1335: 				5000874916524B1F0067ED42 /* TUINavigationController.m in Sources */,\n 1336  				48694D781658318000BE65BF /* NSAffineTransform+TUIExtensions.m in Sources */,\n 1337  				48694D7E1658318000BE65BF /* NSShadow+TUIExtensions.m in Sources */,\n\n/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/Zangetsu/External/OHTTPStubs/OHHTTPStubs.framework/Resources:\n    ERROR: Unable to open file\n\n175 matches across 30 files\n",
					"settings":
					{
						"buffer_size": 44914,
						"line_ending": "Unix",
						"name": "Find Results",
						"scratch": true
					}
				},
				{
					"file": "/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter/lib/meter.coffee",
					"settings":
					{
						"buffer_size": 704,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/MultiMeter/AppDelegate.m",
					"settings":
					{
						"buffer_size": 5266,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Users/localadmin/.clang-format",
					"settings":
					{
						"buffer_size": 927,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 149.0,
				"last_filter": "path",
				"selected_items":
				[
					[
						"path",
						"File: Copy Path"
					],
					[
						"focus",
						"Focus File on Sidebar"
					],
					[
						"sshc",
						"Set Syntax: SSH Config"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"c++",
						"Set Syntax: C++"
					],
					[
						"pat",
						"File: Copy Path"
					],
					[
						"move",
						"File: Move"
					],
					[
						"copy",
						"File: Copy Path"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"psth",
						"Permute Lines: Shuffle"
					],
					[
						"make",
						"Set Syntax: Makefile"
					],
					[
						"makef",
						"Set Syntax: Makefile"
					],
					[
						"focu",
						"Focus File on Sidebar"
					],
					[
						"refre",
						"Side Bar: Refresh"
					],
					[
						"refr",
						"Side Bar: Refresh"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"syc+",
						"Set Syntax: C++"
					],
					[
						"",
						"Copy File Path"
					],
					[
						"focud",
						"Focus File on Sidebar"
					],
					[
						"syn",
						"Set Syntax: C++"
					],
					[
						"sublime",
						"Colorsublime: Install Theme"
					],
					[
						"foc",
						"Focus File on Sidebar"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"cop",
						"Copy File Path"
					],
					[
						"ref",
						"Side Bar: Refresh"
					],
					[
						"color",
						"Colorsublime: Install Theme"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"read",
						"ReadmePlease"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"package",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"instl",
						"Package Control: Install Package"
					]
				],
				"width": 449.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/Volumes/5T/ServiceData/AtoZ_framework/Frameworks",
				"/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort",
				"/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples",
				"/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter",
				"/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter/lib",
				"/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter/MultiMeterFramework",
				"/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/MultiMeter",
				"/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/PLWeakCompatibility"
			],
			"file_history":
			[
				"/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/Cocotron/NSKeyValueCoding",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/rsub/rsub.sublime-settings",
				"/sketch/libraries/ADC/doxygen/html/search/typedefs_73.html",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/sketch/libraries/Alexduino/src/Alexduino.cpp",
				"/sketch/libraries.off/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/Pin.h",
				"/sketch/libraries/Pin/src/Pin.cpp",
				"/sketch/libraries/OneButton/OneButton.cpp",
				"/sketch/libraries/OneButton/OneButton.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
				"/Volumes/5T/_dl/ShiftRegister.h",
				"/sketch/libraries/Talkie/talkie.cpp",
				"/sketch/libraries/Talkie/README.md",
				"/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/Arduino.h",
				"/sketch/libraries/Alexduino/src/Alexduino.h",
				"/sketch/My7Seg/My7Seg.ino",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.h",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.cpp",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
				"/sketch/libraries/SevenSegment/SevenSegment.h",
				"/sketch/libraries/SevenSegment/SevenSegment.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/My7Seg/My7Seg.ino",
				"/sketch/libraries/ICs/4511.h",
				"/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
				"/sketch/libraries/ICs/4511.cpp",
				"/sketch/libraries.off/BCDTo7Seg/examples/b4511_counter/b4511_counter.ino",
				"/sketch/libraries/BCDTo7Seg.virgin/BCDTo7Seg.h",
				"/sketch/libraries/Talkie/examples/_2_Voltmeter/_2_Voltmeter.ino",
				"/sketch/libraries/Talkie/talkie.h",
				"/sketch/libraries/Potentiometer/Potentiometer.h",
				"/sketch/libraries/Potentiometer/Potentiometer.cpp",
				"/sketch/libraries/ansiterm/readme.md",
				"/sketch/libraries/AsyncDelay/src/AsyncDelay.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/WString.h",
				"/sketch/libraries.off/ArduinoJson/third-party/gtest-1.7.0/xcode/Config/FrameworkTarget.xcconfig",
				"/sketch/hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBoldOblique12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBold12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp",
				"/sketch/libraries/LED/LED.cpp",
				"/sketch/libraries/Color/Color.h",
				"/sketch/libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h",
				"/sketch/libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/LUFA/Drivers/Board/Board.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII/makefile",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/AlexAVR/avr/programmers.txt",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.no.h",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.h",
				"/sketch/hardware/AlexAVR/avr/platform.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/SimpleThrottle/SimpleThrottle.ino",
				"/sketch/libraries/Handler/Handler.cpp",
				"/sketch/libraries/Handler/examples/CanYouHandleIt/CanYouHandleIt.ino",
				"/sketch/libraries/Handler/Handler.h",
				"/sketch/libraries/LED/LED.h",
				"/sketch/libraries/Throttle/examples/GoGoGoTiny/GoGoGoTiny.ino",
				"/sketch/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/libraries/Throttle/Throttle.cpp",
				"/sketch/libraries/GPIO/src/PinGroup.h",
				"/sketch/libraries/TimerLib/PinEffector.h",
				"/sketch/libraries/TimerLib/utility/FastDelegate.h",
				"/sketch/LEDme/LED.h",
				"/sketch/libraries/Segment7/Segment7.pdf",
				"/sketch/libraries/StackArray/StackArray.h",
				"/sketch/hardware/AlexAVR/avr/boards.txt",
				"/sketch/libraries/TimerLib/SimpleTimer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/LED/library.properties",
				"/sketch/pinguino.bootloader.c",
				"/sketch/hardware/avr-openhardware/avr/avrdude.conf",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.cpp",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.h",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.cpp",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.h",
				"/sketch/hardware/Cosa/avr/platform.txt",
				"/sketch/hardware/Cosa/avr/sub-modules",
				"/sketch/libraries/Adafruit_GFX_Library/gfxfont.h",
				"/sketch/libraries/Pin/src/boards/attinyX5.h",
				"/sketch/ACS712/xACS712/xACS712/Configurations/Adafruit Trinket 5V-16MHz.xcconfig",
				"/sketch/hardware/AlexAVR/avr/programmers.txt",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/sketch/libraries/GPIO/src/GPIO.h",
				"/sketch/libraries/Pin/library.properties",
				"/sketch/libraries/Pin/src/boards/others.h",
				"/sketch/libraries/GPIO/library.properties",
				"/sketch/libraries/GPIO/src/GPIO.cpp",
				"/sketch/hardware/google-tiny/avr/cores/tiny/WProgram.h",
				"/sketch/Classy/.pioenvs/nodemcu/FrameworkArduino/Arduino.h",
				"/sketch/hardware/google-tiny/avr/cores/tiny/Arduino.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/neomatrix-serial-input/neomatrixserial/neomatrixserial.ino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/breadboard/avr/boards.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/FastLED/FastLED.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Chrono/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Delegate.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/WiringFrameworkDependencies.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Interrupts.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Timer.h",
				"/opt/smi8ng",
				"/opt/sping",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/examples/GoGoGo/GoGoGo.ino",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.cpp",
				"/Users/localadmin/.macosz/modules/alex/functions/gzipit",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Periodic/Periodic.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/UdpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/TcpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/DriverPWM.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/LICENSE",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Makefile-rboot.mk",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/.travis.yml",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/samples/Basic_Runloop/app/application.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/SmingCore.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Switch File Deluxe/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Timer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Delegate.h"
			],
			"find":
			{
				"height": 33.0
			},
			"find_in_files":
			{
				"height": 96.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"00087",
					"runtime",
					"runtim",
					"byte",
					"open",
					"UInt",
					"UInt ",
					"UInt",
					"inha",
					"unsigned int8_t",
					"UInt",
					"smile_bmp",
					"UInt",
					"my_4511",
					"on",
					",",
					"my_4511",
					"IC_4511",
					"&sp",
					"const uint8_t \\*(.*)\\s*PROGMEM",
					"const uint8_t (.*)\\[\\]",
					"(sp",
					"uint8_t s",
					";\nuint8_t ",
					"7129",
					"Button 2",
					"analog",
					"ANALOg_MAX",
					"PWM",
					"speed",
					"button2",
					"button",
					"button2",
					"button1",
					"0x.., \\/\\* (.).*",
					"0x5B, /* 2 */",
					"*/\n",
					"0x.., \\/\\* (.).*",
					"0x7C, /* b */",
					"cursor",
					"setTextColor",
					"expi",
					"handl",
					"test",
					"begin",
					"matrix.",
					"matr",
					"());",
					"fillScreen",
					"Adafruit_NeoMatrix",
					"avrdude",
					"USBKEY",
					"BOARD",
					"digital_pin_to_bit_mask_PGM",
					"m1284p",
					"uni",
					"m1284p",
					"ing",
					"PULSE",
					"LEDClass",
					"enum",
					"#",
					"0x05",
					"0x054",
					"0x06",
					"1284",
					"05",
					"sig",
					"__cxa_pure_virtual",
					"__AVR_ATTiny",
					"__AVR_ATmega32U4__",
					"recipe.preproc.macros",
					"__cxa_pure_virtual",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"pioenvs/",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"GFX",
					"pure",
					"effe",
					"toggle\\(",
					"on\\(\\)",
					"on()",
					"on",
					"off",
					"#define.*PWM.*\\w[0-9]*",
					"#define.*ANALOG.*\\w[0-9]*",
					"#define.*255",
					"#define.*ANALOG.*255",
					"#define.*PWM.*255",
					"#define.*PWM.*",
					"PWM_RANGE",
					"PWM",
					"REGD",
					"DEF_",
					"DEF_THR",
					"FAST",
					"                           ",
					"FAST",
					"PWM",
					"sap",
					"line",
					"move",
					"up\"",
					"time",
					"className",
					"rightn",
					"Print",
					"print",
					"DEB",
					"\nDEBO",
					"DEBO",
					"\nDEBO",
					"DEBO",
					"rest",
					"define.*\\sON\\s",
					"rest",
					"digitalWrite",
					"define.*\\sON\\s",
					"define.*\\sON",
					"define.*ON",
					"\\bD5\\b",
					"D5",
					"ws",
					"isdi",
					"ud",
					"ECHO_PORT"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
					"uint8_t",
					"unsigned int",
					"int8_t",
					"unsigned int",
					"sp",
					"const PROGMEM uint8_t $1[]",
					"const uint8_t * $1",
					"(&sp",
					"const uint8_t s",
					",\n              ",
					"Button 2 (gas)",
					"brake",
					"gas",
					"\"$1\",",
					"",
					"LED"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/Volumes/5T/ServiceData/AtoZ_framework/Frameworks"
				}
			],
			"groups":
			[
				{
					"selected": 3,
					"sheets":
					[
						{
							"buffer": 0,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 44914,
								"regions":
								{
									"match":
									{
										"flags": 112,
										"regions":
										[
											[
												414,
												419
											],
											[
												674,
												679
											],
											[
												1094,
												1099
											],
											[
												1361,
												1366
											],
											[
												1585,
												1590
											],
											[
												1928,
												1933
											],
											[
												2181,
												2186
											],
											[
												2472,
												2477
											],
											[
												2721,
												2726
											],
											[
												2976,
												2981
											],
											[
												3224,
												3229
											],
											[
												3440,
												3445
											],
											[
												3665,
												3670
											],
											[
												3926,
												3931
											],
											[
												4371,
												4376
											],
											[
												4777,
												4782
											],
											[
												5141,
												5146
											],
											[
												5190,
												5195
											],
											[
												5248,
												5253
											],
											[
												5297,
												5302
											],
											[
												5355,
												5360
											],
											[
												5404,
												5409
											],
											[
												5711,
												5716
											],
											[
												5899,
												5904
											],
											[
												6093,
												6098
											],
											[
												6292,
												6297
											],
											[
												6671,
												6676
											],
											[
												6731,
												6736
											],
											[
												6791,
												6796
											],
											[
												7137,
												7142
											],
											[
												7164,
												7169
											],
											[
												7463,
												7468
											],
											[
												7914,
												7919
											],
											[
												8245,
												8250
											],
											[
												8575,
												8580
											],
											[
												8893,
												8898
											],
											[
												9126,
												9131
											],
											[
												9359,
												9364
											],
											[
												9613,
												9618
											],
											[
												9964,
												9969
											],
											[
												10319,
												10324
											],
											[
												10655,
												10660
											],
											[
												10991,
												10996
											],
											[
												11327,
												11332
											],
											[
												11663,
												11668
											],
											[
												11999,
												12004
											],
											[
												12336,
												12341
											],
											[
												12635,
												12640
											],
											[
												12986,
												12991
											],
											[
												13341,
												13346
											],
											[
												13696,
												13701
											],
											[
												14051,
												14056
											],
											[
												14406,
												14411
											],
											[
												14761,
												14766
											],
											[
												15116,
												15121
											],
											[
												15462,
												15467
											],
											[
												15828,
												15833
											],
											[
												16198,
												16203
											],
											[
												16547,
												16552
											],
											[
												16897,
												16902
											],
											[
												17250,
												17255
											],
											[
												17616,
												17621
											],
											[
												17965,
												17970
											],
											[
												18339,
												18344
											],
											[
												18731,
												18736
											],
											[
												19102,
												19107
											],
											[
												19476,
												19481
											],
											[
												19862,
												19867
											],
											[
												20248,
												20253
											],
											[
												20634,
												20639
											],
											[
												20999,
												21004
											],
											[
												21366,
												21371
											],
											[
												21736,
												21741
											],
											[
												22106,
												22111
											],
											[
												22476,
												22481
											],
											[
												22846,
												22851
											],
											[
												23216,
												23221
											],
											[
												23565,
												23570
											],
											[
												23939,
												23944
											],
											[
												24304,
												24309
											],
											[
												24670,
												24675
											],
											[
												25040,
												25045
											],
											[
												25410,
												25415
											],
											[
												25780,
												25785
											],
											[
												26150,
												26155
											],
											[
												26499,
												26504
											],
											[
												26612,
												26617
											],
											[
												26734,
												26739
											],
											[
												26890,
												26895
											],
											[
												27348,
												27353
											],
											[
												27702,
												27707
											],
											[
												27923,
												27928
											],
											[
												28067,
												28072
											],
											[
												28392,
												28397
											],
											[
												28664,
												28669
											],
											[
												28707,
												28712
											],
											[
												29212,
												29217
											],
											[
												29543,
												29548
											],
											[
												29973,
												29978
											],
											[
												30351,
												30356
											],
											[
												30467,
												30472
											],
											[
												30737,
												30742
											],
											[
												31054,
												31059
											],
											[
												31176,
												31181
											],
											[
												31327,
												31332
											],
											[
												31440,
												31445
											],
											[
												31488,
												31493
											],
											[
												31592,
												31597
											],
											[
												31868,
												31873
											],
											[
												32184,
												32189
											],
											[
												32469,
												32474
											],
											[
												32763,
												32768
											],
											[
												32797,
												32802
											],
											[
												32931,
												32936
											],
											[
												33211,
												33216
											],
											[
												33324,
												33329
											],
											[
												33446,
												33451
											],
											[
												33692,
												33697
											],
											[
												33764,
												33769
											],
											[
												34011,
												34016
											],
											[
												34164,
												34169
											],
											[
												34179,
												34184
											],
											[
												34373,
												34378
											],
											[
												34613,
												34618
											],
											[
												34860,
												34865
											],
											[
												34971,
												34976
											],
											[
												35025,
												35030
											],
											[
												35138,
												35143
											],
											[
												35234,
												35239
											],
											[
												35306,
												35311
											],
											[
												35505,
												35510
											],
											[
												35634,
												35639
											],
											[
												35943,
												35948
											],
											[
												36151,
												36156
											],
											[
												36238,
												36243
											],
											[
												36334,
												36339
											],
											[
												36421,
												36426
											],
											[
												36855,
												36860
											],
											[
												36940,
												36945
											],
											[
												36970,
												36975
											],
											[
												37049,
												37054
											],
											[
												37137,
												37142
											],
											[
												37167,
												37172
											],
											[
												38202,
												38207
											],
											[
												38292,
												38297
											],
											[
												38351,
												38356
											],
											[
												38930,
												38935
											],
											[
												38999,
												39004
											],
											[
												39054,
												39059
											],
											[
												39370,
												39375
											],
											[
												39742,
												39747
											],
											[
												40966,
												40971
											],
											[
												41067,
												41072
											],
											[
												41177,
												41182
											],
											[
												41278,
												41283
											],
											[
												41348,
												41353
											],
											[
												41449,
												41454
											],
											[
												42235,
												42240
											],
											[
												42443,
												42448
											],
											[
												43234,
												43239
											],
											[
												43303,
												43308
											],
											[
												43685,
												43690
											],
											[
												44096,
												44101
											],
											[
												44506,
												44511
											]
										],
										"scope": ""
									}
								},
								"selection":
								[
									[
										32299,
										32299
									]
								],
								"settings":
								{
									"default_dir": "/Volumes/5T/ServiceData/AtoZ_framework/Frameworks",
									"detect_indentation": false,
									"line_numbers": false,
									"output_tag": 1,
									"result_base_dir": "",
									"result_file_regex": "^([^ 	].*):$",
									"result_line_regex": "^ +([0-9]+):",
									"scroll_past_end": true,
									"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 12726.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter/lib/meter.coffee",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 704,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/MultiMeter/AppDelegate.m",
							"semi_transient": true,
							"settings":
							{
								"buffer_size": 5266,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/Objective-C/Objective-C.sublime-syntax",
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 2976.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "/Users/localadmin/.clang-format",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 927,
								"regions":
								{
								},
								"selection":
								[
									[
										125,
										126
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 33.0
			},
			"input":
			{
				"height": 36.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1360 741 0 0 1360 745 ",
			"project": "",
			"replace":
			{
				"height": 62.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"my",
						"My7Seg/My7Seg.ino"
					],
					[
						"my7",
						"libraries/ADC/doxygen/html/search/typedefs_73.html"
					],
					[
						"orig",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"4511",
						"libraries/ICs/4511.h"
					],
					[
						"my7se",
						"My7Seg/My7Seg.ino"
					],
					[
						"matrixt",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"cancom",
						"libraries/Alexduino/examples/CanCompile/CanCompile.ino"
					],
					[
						"led",
						"libraries/LED/LED.h"
					],
					[
						"sim",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"simpl",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"mys",
						"My7Seg/My7Seg.ino"
					],
					[
						"aledxdu",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"async",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"matrixtest",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde"
					],
					[
						"alexdui",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"wstrin",
						"hardware/AlexAVR/avr/cores/arduino/WString.h"
					],
					[
						"gfx",
						"libraries/Adafruit_GFX_Library/Adafruit_GFX.h"
					],
					[
						"gfxc",
						"hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h"
					],
					[
						"color",
						"libraries/Color/Color.h"
					],
					[
						"matri",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"pixel",
						"libraries/NeoPixelBus_by_Makuna/src/NeoPixelAnimator.h"
					],
					[
						"adaf",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"asyn",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"neopix",
						"libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h"
					],
					[
						"matrix",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"alexd",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"pingro",
						"libraries/GPIO/src/PinGroup.h"
					],
					[
						"pin",
						"libraries/Pin/src/Pin.h"
					],
					[
						"",
						"libraries/LED/LED.h"
					],
					[
						"stack",
						"libraries/StackArray/StackArray.h"
					],
					[
						"stackarray",
						"libraries/StackArray/StackArray.h"
					],
					[
						"pin.h",
						"libraries/Pin/src/Pin.h"
					],
					[
						"asyncd",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"led.",
						"LEDme/LED.h"
					],
					[
						"wpro",
						"hardware/google-tiny/avr/cores/tiny/WProgram.h"
					],
					[
						"arduino.h",
						"hardware/google-tiny/avr/cores/tiny/Arduino.h"
					],
					[
						"gogo",
						"Throttle/examples/GoGoGo/GoGoGo.ino"
					],
					[
						"throttl",
						"Throttle/Throttle.cpp"
					],
					[
						"throttle2016",
						"Throttle2016.h"
					],
					[
						"throttle",
						"Throttle2016.h"
					],
					[
						"dele",
						"Sming/SmingCore/Delegate.h"
					],
					[
						"timer",
						"Sming/SmingCore/Timer.h"
					],
					[
						"smingco",
						"Sming/SmingCore/SmingCore.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 319.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 86,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ui",
						"uint16_t"
					],
					[
						"setOutput",
						"setOutputLow"
					],
					[
						"rand",
						"randVal"
					],
					[
						"PWM",
						"PWMRANGE"
					],
					[
						"_C",
						"_CLEAR_Pin"
					],
					[
						"_l",
						"_level"
					],
					[
						"ga",
						"gasLight"
					],
					[
						"off",
						"offset"
					],
					[
						"Color",
						"colorCycle"
					],
					[
						"uint",
						"uint16_t"
					],
					[
						"NMe",
						"Adafruit_NeoMatrix"
					],
					[
						"S",
						"StackArray"
					],
					[
						"POR",
						"PORT_HIGH"
					],
					[
						"set",
						"setHigh"
					],
					[
						"board",
						"boards"
					],
					[
						"e",
						"endif"
					],
					[
						"DEF",
						"DEF_PWM"
					],
					[
						"be",
						"begin"
					],
					[
						"pri",
						"private"
					],
					[
						"chara",
						"character"
					],
					[
						"DE",
						"DEF_MAX_OUT"
					],
					[
						"THROTTLE_V_M",
						"THROTTLE_V_MAX"
					],
					[
						"OTA",
						"OTA_IP"
					],
					[
						"Up",
						"UPDATE_PIN"
					],
					[
						"ini",
						"initializeUs"
					],
					[
						"uin",
						"uint8_t"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/Volumes/5T/ServiceData/git/clang-format-configurator/client/index.html",
					"settings":
					{
						"buffer_size": 3321,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Volumes/5T/ServiceData/git/clang-format-configurator/server/js/settings.js",
					"settings":
					{
						"buffer_size": 232,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "Searching 840 files for \"cirlce\" (regex, case sensitive)\n\n0 matches\n\nSearching 840 files for \"circle\" (regex, case sensitive)\n\n/Volumes/5T/ServiceData/git/clang-format-configurator/client/configurator.js:\n  221  		'<div class=\"form-group\">' +\n  222  		'	<label class=\"col-sm-8\">' +\n  223: 		'		<a href=\"#<%= option_name %>_collapse\" data-toggle=\"collapse\"><i class=\"fa fa-info-circle\"></i></a>' +\n  224  		'		<%= option_name %>:' +\n  225  		'	</label>' +\n\n/Volumes/5T/ServiceData/git/clang-format-configurator/server/js/node_modules/userid/node_modules/mocha/mocha.js:\n  303      ctx.clearRect(0, 0, size, size);\n  304  \n  305:     // outer circle\n  306      ctx.strokeStyle = '#9f9f9f';\n  307      ctx.beginPath();\n  ...\n  309      ctx.stroke();\n  310  \n  311:     // inner circle\n  312      ctx.strokeStyle = '#eee';\n  313      ctx.beginPath();\n\n/Volumes/5T/ServiceData/git/clang-format-configurator/server/js/node_modules/userid/node_modules/mocha/lib/browser/progress.js:\n   94      ctx.clearRect(0, 0, size, size);\n   95  \n   96:     // outer circle\n   97      ctx.strokeStyle = '#9f9f9f';\n   98      ctx.beginPath();\n   ..\n  100      ctx.stroke();\n  101  \n  102:     // inner circle\n  103      ctx.strokeStyle = '#eee';\n  104      ctx.beginPath();\n\n/Volumes/5T/ServiceData/git/clang-format-configurator/server/js/node_modules/userid/node_modules/should/node_modules/should-format/tests/browser/mocha.js:\n  725      ctx.clearRect(0, 0, size, size);\n  726  \n  727:     // outer circle\n  728      ctx.strokeStyle = '#9f9f9f';\n  729      ctx.beginPath();\n  ...\n  731      ctx.stroke();\n  732  \n  733:     // inner circle\n  734      ctx.strokeStyle = '#eee';\n  735      ctx.beginPath();\n\n7 matches across 4 files\n",
					"settings":
					{
						"buffer_size": 1714,
						"line_ending": "Unix",
						"name": "Find Results",
						"scratch": true
					}
				},
				{
					"file": "/Volumes/5T/ServiceData/git/clang-format-configurator/client/configurator.js",
					"settings":
					{
						"buffer_size": 7393,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 149.0,
				"last_filter": "path",
				"selected_items":
				[
					[
						"path",
						"File: Copy Path"
					],
					[
						"focus",
						"Focus File on Sidebar"
					],
					[
						"sshc",
						"Set Syntax: SSH Config"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"c++",
						"Set Syntax: C++"
					],
					[
						"pat",
						"File: Copy Path"
					],
					[
						"move",
						"File: Move"
					],
					[
						"copy",
						"File: Copy Path"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"psth",
						"Permute Lines: Shuffle"
					],
					[
						"make",
						"Set Syntax: Makefile"
					],
					[
						"makef",
						"Set Syntax: Makefile"
					],
					[
						"focu",
						"Focus File on Sidebar"
					],
					[
						"refre",
						"Side Bar: Refresh"
					],
					[
						"refr",
						"Side Bar: Refresh"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"syc+",
						"Set Syntax: C++"
					],
					[
						"",
						"Copy File Path"
					],
					[
						"focud",
						"Focus File on Sidebar"
					],
					[
						"syn",
						"Set Syntax: C++"
					],
					[
						"sublime",
						"Colorsublime: Install Theme"
					],
					[
						"foc",
						"Focus File on Sidebar"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"cop",
						"Copy File Path"
					],
					[
						"ref",
						"Side Bar: Refresh"
					],
					[
						"color",
						"Colorsublime: Install Theme"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"read",
						"ReadmePlease"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"package",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"instl",
						"Package Control: Install Package"
					]
				],
				"width": 449.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/Volumes/5T/ServiceData/git/clang-format-configurator",
				"/Volumes/5T/ServiceData/git/clang-format-configurator/client",
				"/Volumes/5T/ServiceData/git/clang-format-configurator/server",
				"/Volumes/5T/ServiceData/git/clang-format-configurator/server/js"
			],
			"file_history":
			[
				"/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/Cocotron/NSKeyValueCoding",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/rsub/rsub.sublime-settings",
				"/sketch/libraries/ADC/doxygen/html/search/typedefs_73.html",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/sketch/libraries/Alexduino/src/Alexduino.cpp",
				"/sketch/libraries.off/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/Pin.h",
				"/sketch/libraries/Pin/src/Pin.cpp",
				"/sketch/libraries/OneButton/OneButton.cpp",
				"/sketch/libraries/OneButton/OneButton.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
				"/Volumes/5T/_dl/ShiftRegister.h",
				"/sketch/libraries/Talkie/talkie.cpp",
				"/sketch/libraries/Talkie/README.md",
				"/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/Arduino.h",
				"/sketch/libraries/Alexduino/src/Alexduino.h",
				"/sketch/My7Seg/My7Seg.ino",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.h",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.cpp",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
				"/sketch/libraries/SevenSegment/SevenSegment.h",
				"/sketch/libraries/SevenSegment/SevenSegment.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/My7Seg/My7Seg.ino",
				"/sketch/libraries/ICs/4511.h",
				"/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
				"/sketch/libraries/ICs/4511.cpp",
				"/sketch/libraries.off/BCDTo7Seg/examples/b4511_counter/b4511_counter.ino",
				"/sketch/libraries/BCDTo7Seg.virgin/BCDTo7Seg.h",
				"/sketch/libraries/Talkie/examples/_2_Voltmeter/_2_Voltmeter.ino",
				"/sketch/libraries/Talkie/talkie.h",
				"/sketch/libraries/Potentiometer/Potentiometer.h",
				"/sketch/libraries/Potentiometer/Potentiometer.cpp",
				"/sketch/libraries/ansiterm/readme.md",
				"/sketch/libraries/AsyncDelay/src/AsyncDelay.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/WString.h",
				"/sketch/libraries.off/ArduinoJson/third-party/gtest-1.7.0/xcode/Config/FrameworkTarget.xcconfig",
				"/sketch/hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBoldOblique12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBold12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp",
				"/sketch/libraries/LED/LED.cpp",
				"/sketch/libraries/Color/Color.h",
				"/sketch/libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h",
				"/sketch/libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/LUFA/Drivers/Board/Board.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII/makefile",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/AlexAVR/avr/programmers.txt",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.no.h",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.h",
				"/sketch/hardware/AlexAVR/avr/platform.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/SimpleThrottle/SimpleThrottle.ino",
				"/sketch/libraries/Handler/Handler.cpp",
				"/sketch/libraries/Handler/examples/CanYouHandleIt/CanYouHandleIt.ino",
				"/sketch/libraries/Handler/Handler.h",
				"/sketch/libraries/LED/LED.h",
				"/sketch/libraries/Throttle/examples/GoGoGoTiny/GoGoGoTiny.ino",
				"/sketch/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/libraries/Throttle/Throttle.cpp",
				"/sketch/libraries/GPIO/src/PinGroup.h",
				"/sketch/libraries/TimerLib/PinEffector.h",
				"/sketch/libraries/TimerLib/utility/FastDelegate.h",
				"/sketch/LEDme/LED.h",
				"/sketch/libraries/Segment7/Segment7.pdf",
				"/sketch/libraries/StackArray/StackArray.h",
				"/sketch/hardware/AlexAVR/avr/boards.txt",
				"/sketch/libraries/TimerLib/SimpleTimer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/LED/library.properties",
				"/sketch/pinguino.bootloader.c",
				"/sketch/hardware/avr-openhardware/avr/avrdude.conf",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.cpp",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.h",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.cpp",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.h",
				"/sketch/hardware/Cosa/avr/platform.txt",
				"/sketch/hardware/Cosa/avr/sub-modules",
				"/sketch/libraries/Adafruit_GFX_Library/gfxfont.h",
				"/sketch/libraries/Pin/src/boards/attinyX5.h",
				"/sketch/ACS712/xACS712/xACS712/Configurations/Adafruit Trinket 5V-16MHz.xcconfig",
				"/sketch/hardware/AlexAVR/avr/programmers.txt",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/sketch/libraries/GPIO/src/GPIO.h",
				"/sketch/libraries/Pin/library.properties",
				"/sketch/libraries/Pin/src/boards/others.h",
				"/sketch/libraries/GPIO/library.properties",
				"/sketch/libraries/GPIO/src/GPIO.cpp",
				"/sketch/hardware/google-tiny/avr/cores/tiny/WProgram.h",
				"/sketch/Classy/.pioenvs/nodemcu/FrameworkArduino/Arduino.h",
				"/sketch/hardware/google-tiny/avr/cores/tiny/Arduino.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/neomatrix-serial-input/neomatrixserial/neomatrixserial.ino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/breadboard/avr/boards.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/FastLED/FastLED.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Chrono/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Delegate.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/WiringFrameworkDependencies.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Interrupts.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Timer.h",
				"/opt/smi8ng",
				"/opt/sping",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/examples/GoGoGo/GoGoGo.ino",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.cpp",
				"/Users/localadmin/.macosz/modules/alex/functions/gzipit",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Periodic/Periodic.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/UdpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/TcpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/DriverPWM.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/LICENSE",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Makefile-rboot.mk",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/.travis.yml",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/samples/Basic_Runloop/app/application.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/SmingCore.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Switch File Deluxe/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Timer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Delegate.h"
			],
			"find":
			{
				"height": 41.0
			},
			"find_in_files":
			{
				"height": 96.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"click",
					"data",
					"colla",
					"doc",
					"colla",
					"toggle",
					"circl",
					"circle",
					"cirlce",
					"00087",
					"runtime",
					"runtim",
					"byte",
					"open",
					"UInt",
					"UInt ",
					"UInt",
					"inha",
					"unsigned int8_t",
					"UInt",
					"smile_bmp",
					"UInt",
					"my_4511",
					"on",
					",",
					"my_4511",
					"IC_4511",
					"&sp",
					"const uint8_t \\*(.*)\\s*PROGMEM",
					"const uint8_t (.*)\\[\\]",
					"(sp",
					"uint8_t s",
					";\nuint8_t ",
					"7129",
					"Button 2",
					"analog",
					"ANALOg_MAX",
					"PWM",
					"speed",
					"button2",
					"button",
					"button2",
					"button1",
					"0x.., \\/\\* (.).*",
					"0x5B, /* 2 */",
					"*/\n",
					"0x.., \\/\\* (.).*",
					"0x7C, /* b */",
					"cursor",
					"setTextColor",
					"expi",
					"handl",
					"test",
					"begin",
					"matrix.",
					"matr",
					"());",
					"fillScreen",
					"Adafruit_NeoMatrix",
					"avrdude",
					"USBKEY",
					"BOARD",
					"digital_pin_to_bit_mask_PGM",
					"m1284p",
					"uni",
					"m1284p",
					"ing",
					"PULSE",
					"LEDClass",
					"enum",
					"#",
					"0x05",
					"0x054",
					"0x06",
					"1284",
					"05",
					"sig",
					"__cxa_pure_virtual",
					"__AVR_ATTiny",
					"__AVR_ATmega32U4__",
					"recipe.preproc.macros",
					"__cxa_pure_virtual",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"pioenvs/",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"GFX",
					"pure",
					"effe",
					"toggle\\(",
					"on\\(\\)",
					"on()",
					"on",
					"off",
					"#define.*PWM.*\\w[0-9]*",
					"#define.*ANALOG.*\\w[0-9]*",
					"#define.*255",
					"#define.*ANALOG.*255",
					"#define.*PWM.*255",
					"#define.*PWM.*",
					"PWM_RANGE",
					"PWM",
					"REGD",
					"DEF_",
					"DEF_THR",
					"FAST",
					"                           ",
					"FAST",
					"PWM",
					"sap",
					"line",
					"move",
					"up\"",
					"time",
					"className",
					"rightn",
					"Print",
					"print",
					"DEB",
					"\nDEBO",
					"DEBO",
					"\nDEBO",
					"DEBO",
					"rest",
					"define.*\\sON\\s",
					"rest",
					"digitalWrite"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
					"uint8_t",
					"unsigned int",
					"int8_t",
					"unsigned int",
					"sp",
					"const PROGMEM uint8_t $1[]",
					"const uint8_t * $1",
					"(&sp",
					"const uint8_t s",
					",\n              ",
					"Button 2 (gas)",
					"brake",
					"gas",
					"\"$1\",",
					"",
					"LED"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/Volumes/5T/ServiceData/git/clang-format-configurator"
				}
			],
			"groups":
			[
				{
					"selected": 1,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Volumes/5T/ServiceData/git/clang-format-configurator/client/index.html",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 3321,
								"regions":
								{
								},
								"selection":
								[
									[
										1883,
										1883
									]
								],
								"settings":
								{
									"syntax": "Packages/HTML/HTML.sublime-syntax",
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 552.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/Volumes/5T/ServiceData/git/clang-format-configurator/server/js/settings.js",
							"semi_transient": true,
							"settings":
							{
								"buffer_size": 232,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						},
						{
							"buffer": 2,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1714,
								"regions":
								{
									"match":
									{
										"flags": 112,
										"regions":
										[
											[
												377,
												383
											],
											[
												641,
												647
											],
											[
												775,
												781
											],
											[
												1048,
												1054
											],
											[
												1182,
												1188
											],
											[
												1482,
												1488
											],
											[
												1616,
												1622
											]
										],
										"scope": ""
									}
								},
								"selection":
								[
									[
										146,
										146
									]
								],
								"settings":
								{
									"default_dir": "/Volumes/5T/ServiceData/git/clang-format-configurator",
									"detect_indentation": false,
									"line_numbers": false,
									"output_tag": 2,
									"result_base_dir": "",
									"result_file_regex": "^([^ 	].*):$",
									"result_line_regex": "^ +([0-9]+):",
									"scroll_past_end": true,
									"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 75.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "/Volumes/5T/ServiceData/git/clang-format-configurator/client/configurator.js",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 7393,
								"regions":
								{
								},
								"selection":
								[
									[
										2272,
										2277
									]
								],
								"settings":
								{
									"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 316.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 33.0
			},
			"input":
			{
				"height": 36.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1360 741 0 0 1360 745 ",
			"project": "",
			"replace":
			{
				"height": 62.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"my",
						"My7Seg/My7Seg.ino"
					],
					[
						"my7",
						"libraries/ADC/doxygen/html/search/typedefs_73.html"
					],
					[
						"orig",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"4511",
						"libraries/ICs/4511.h"
					],
					[
						"my7se",
						"My7Seg/My7Seg.ino"
					],
					[
						"matrixt",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"cancom",
						"libraries/Alexduino/examples/CanCompile/CanCompile.ino"
					],
					[
						"led",
						"libraries/LED/LED.h"
					],
					[
						"sim",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"simpl",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"mys",
						"My7Seg/My7Seg.ino"
					],
					[
						"aledxdu",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"async",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"matrixtest",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde"
					],
					[
						"alexdui",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"wstrin",
						"hardware/AlexAVR/avr/cores/arduino/WString.h"
					],
					[
						"gfx",
						"libraries/Adafruit_GFX_Library/Adafruit_GFX.h"
					],
					[
						"gfxc",
						"hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h"
					],
					[
						"color",
						"libraries/Color/Color.h"
					],
					[
						"matri",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"pixel",
						"libraries/NeoPixelBus_by_Makuna/src/NeoPixelAnimator.h"
					],
					[
						"adaf",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"asyn",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"neopix",
						"libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h"
					],
					[
						"matrix",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"alexd",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"pingro",
						"libraries/GPIO/src/PinGroup.h"
					],
					[
						"pin",
						"libraries/Pin/src/Pin.h"
					],
					[
						"",
						"libraries/LED/LED.h"
					],
					[
						"stack",
						"libraries/StackArray/StackArray.h"
					],
					[
						"stackarray",
						"libraries/StackArray/StackArray.h"
					],
					[
						"pin.h",
						"libraries/Pin/src/Pin.h"
					],
					[
						"asyncd",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"led.",
						"LEDme/LED.h"
					],
					[
						"wpro",
						"hardware/google-tiny/avr/cores/tiny/WProgram.h"
					],
					[
						"arduino.h",
						"hardware/google-tiny/avr/cores/tiny/Arduino.h"
					],
					[
						"gogo",
						"Throttle/examples/GoGoGo/GoGoGo.ino"
					],
					[
						"throttl",
						"Throttle/Throttle.cpp"
					],
					[
						"throttle2016",
						"Throttle2016.h"
					],
					[
						"throttle",
						"Throttle2016.h"
					],
					[
						"dele",
						"Sming/SmingCore/Delegate.h"
					],
					[
						"timer",
						"Sming/SmingCore/Timer.h"
					],
					[
						"smingco",
						"Sming/SmingCore/SmingCore.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 319.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 87,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ui",
						"uint16_t"
					],
					[
						"setOutput",
						"setOutputLow"
					],
					[
						"rand",
						"randVal"
					],
					[
						"PWM",
						"PWMRANGE"
					],
					[
						"_C",
						"_CLEAR_Pin"
					],
					[
						"_l",
						"_level"
					],
					[
						"ga",
						"gasLight"
					],
					[
						"off",
						"offset"
					],
					[
						"Color",
						"colorCycle"
					],
					[
						"uint",
						"uint16_t"
					],
					[
						"NMe",
						"Adafruit_NeoMatrix"
					],
					[
						"S",
						"StackArray"
					],
					[
						"POR",
						"PORT_HIGH"
					],
					[
						"set",
						"setHigh"
					],
					[
						"board",
						"boards"
					],
					[
						"e",
						"endif"
					],
					[
						"DEF",
						"DEF_PWM"
					],
					[
						"be",
						"begin"
					],
					[
						"pri",
						"private"
					],
					[
						"chara",
						"character"
					],
					[
						"DE",
						"DEF_MAX_OUT"
					],
					[
						"THROTTLE_V_M",
						"THROTTLE_V_MAX"
					],
					[
						"OTA",
						"OTA_IP"
					],
					[
						"Up",
						"UPDATE_PIN"
					],
					[
						"ini",
						"initializeUs"
					],
					[
						"uin",
						"uint8_t"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter/nodobjc.example.js",
					"settings":
					{
						"buffer_size": 1987,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 149.0,
				"last_filter": "path",
				"selected_items":
				[
					[
						"path",
						"File: Copy Path"
					],
					[
						"focus",
						"Focus File on Sidebar"
					],
					[
						"sshc",
						"Set Syntax: SSH Config"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"c++",
						"Set Syntax: C++"
					],
					[
						"pat",
						"File: Copy Path"
					],
					[
						"move",
						"File: Move"
					],
					[
						"copy",
						"File: Copy Path"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"psth",
						"Permute Lines: Shuffle"
					],
					[
						"make",
						"Set Syntax: Makefile"
					],
					[
						"makef",
						"Set Syntax: Makefile"
					],
					[
						"focu",
						"Focus File on Sidebar"
					],
					[
						"refre",
						"Side Bar: Refresh"
					],
					[
						"refr",
						"Side Bar: Refresh"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"syc+",
						"Set Syntax: C++"
					],
					[
						"",
						"Copy File Path"
					],
					[
						"focud",
						"Focus File on Sidebar"
					],
					[
						"syn",
						"Set Syntax: C++"
					],
					[
						"sublime",
						"Colorsublime: Install Theme"
					],
					[
						"foc",
						"Focus File on Sidebar"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"cop",
						"Copy File Path"
					],
					[
						"ref",
						"Side Bar: Refresh"
					],
					[
						"color",
						"Colorsublime: Install Theme"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"read",
						"ReadmePlease"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"package",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"instl",
						"Package Control: Install Package"
					]
				],
				"width": 449.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort",
				"/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples",
				"/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter",
				"/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter/canv-gauge",
				"/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter/MultiMeterFramework",
				"/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/WebControls"
			],
			"file_history":
			[
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/AVR Tools/Sources/serial.c",
				"/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/Cocotron/NSKeyValueCoding",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/rsub/rsub.sublime-settings",
				"/sketch/libraries/ADC/doxygen/html/search/typedefs_73.html",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/sketch/libraries/Alexduino/src/Alexduino.cpp",
				"/sketch/libraries.off/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/Pin.h",
				"/sketch/libraries/Pin/src/Pin.cpp",
				"/sketch/libraries/OneButton/OneButton.cpp",
				"/sketch/libraries/OneButton/OneButton.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
				"/Volumes/5T/_dl/ShiftRegister.h",
				"/sketch/libraries/Talkie/talkie.cpp",
				"/sketch/libraries/Talkie/README.md",
				"/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/Arduino.h",
				"/sketch/libraries/Alexduino/src/Alexduino.h",
				"/sketch/My7Seg/My7Seg.ino",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.h",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.cpp",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
				"/sketch/libraries/SevenSegment/SevenSegment.h",
				"/sketch/libraries/SevenSegment/SevenSegment.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/My7Seg/My7Seg.ino",
				"/sketch/libraries/ICs/4511.h",
				"/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
				"/sketch/libraries/ICs/4511.cpp",
				"/sketch/libraries.off/BCDTo7Seg/examples/b4511_counter/b4511_counter.ino",
				"/sketch/libraries/BCDTo7Seg.virgin/BCDTo7Seg.h",
				"/sketch/libraries/Talkie/examples/_2_Voltmeter/_2_Voltmeter.ino",
				"/sketch/libraries/Talkie/talkie.h",
				"/sketch/libraries/Potentiometer/Potentiometer.h",
				"/sketch/libraries/Potentiometer/Potentiometer.cpp",
				"/sketch/libraries/ansiterm/readme.md",
				"/sketch/libraries/AsyncDelay/src/AsyncDelay.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/WString.h",
				"/sketch/libraries.off/ArduinoJson/third-party/gtest-1.7.0/xcode/Config/FrameworkTarget.xcconfig",
				"/sketch/hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBoldOblique12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBold12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp",
				"/sketch/libraries/LED/LED.cpp",
				"/sketch/libraries/Color/Color.h",
				"/sketch/libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h",
				"/sketch/libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/LUFA/Drivers/Board/Board.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII/makefile",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/AlexAVR/avr/programmers.txt",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.no.h",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.h",
				"/sketch/hardware/AlexAVR/avr/platform.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/SimpleThrottle/SimpleThrottle.ino",
				"/sketch/libraries/Handler/Handler.cpp",
				"/sketch/libraries/Handler/examples/CanYouHandleIt/CanYouHandleIt.ino",
				"/sketch/libraries/Handler/Handler.h",
				"/sketch/libraries/LED/LED.h",
				"/sketch/libraries/Throttle/examples/GoGoGoTiny/GoGoGoTiny.ino",
				"/sketch/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/libraries/Throttle/Throttle.cpp",
				"/sketch/libraries/GPIO/src/PinGroup.h",
				"/sketch/libraries/TimerLib/PinEffector.h",
				"/sketch/libraries/TimerLib/utility/FastDelegate.h",
				"/sketch/LEDme/LED.h",
				"/sketch/libraries/Segment7/Segment7.pdf",
				"/sketch/libraries/StackArray/StackArray.h",
				"/sketch/hardware/AlexAVR/avr/boards.txt",
				"/sketch/libraries/TimerLib/SimpleTimer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/LED/library.properties",
				"/sketch/pinguino.bootloader.c",
				"/sketch/hardware/avr-openhardware/avr/avrdude.conf",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.cpp",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.h",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.cpp",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.h",
				"/sketch/hardware/Cosa/avr/platform.txt",
				"/sketch/hardware/Cosa/avr/sub-modules",
				"/sketch/libraries/Adafruit_GFX_Library/gfxfont.h",
				"/sketch/libraries/Pin/src/boards/attinyX5.h",
				"/sketch/ACS712/xACS712/xACS712/Configurations/Adafruit Trinket 5V-16MHz.xcconfig",
				"/sketch/hardware/AlexAVR/avr/programmers.txt",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/sketch/libraries/GPIO/src/GPIO.h",
				"/sketch/libraries/Pin/library.properties",
				"/sketch/libraries/Pin/src/boards/others.h",
				"/sketch/libraries/GPIO/library.properties",
				"/sketch/libraries/GPIO/src/GPIO.cpp",
				"/sketch/hardware/google-tiny/avr/cores/tiny/WProgram.h",
				"/sketch/Classy/.pioenvs/nodemcu/FrameworkArduino/Arduino.h",
				"/sketch/hardware/google-tiny/avr/cores/tiny/Arduino.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/neomatrix-serial-input/neomatrixserial/neomatrixserial.ino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/breadboard/avr/boards.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/FastLED/FastLED.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Chrono/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Delegate.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/WiringFrameworkDependencies.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Interrupts.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Timer.h",
				"/opt/smi8ng",
				"/opt/sping",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/examples/GoGoGo/GoGoGo.ino",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.cpp",
				"/Users/localadmin/.macosz/modules/alex/functions/gzipit",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Periodic/Periodic.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/UdpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/TcpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/DriverPWM.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/LICENSE",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Makefile-rboot.mk",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/.travis.yml",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/samples/Basic_Runloop/app/application.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/SmingCore.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Switch File Deluxe/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Timer.h"
			],
			"find":
			{
				"height": 33.0
			},
			"find_in_files":
			{
				"height": 96.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"click",
					"data",
					"colla",
					"doc",
					"colla",
					"toggle",
					"circl",
					"circle",
					"cirlce",
					"00087",
					"runtime",
					"runtim",
					"byte",
					"open",
					"UInt",
					"UInt ",
					"UInt",
					"inha",
					"unsigned int8_t",
					"UInt",
					"smile_bmp",
					"UInt",
					"my_4511",
					"on",
					",",
					"my_4511",
					"IC_4511",
					"&sp",
					"const uint8_t \\*(.*)\\s*PROGMEM",
					"const uint8_t (.*)\\[\\]",
					"(sp",
					"uint8_t s",
					";\nuint8_t ",
					"7129",
					"Button 2",
					"analog",
					"ANALOg_MAX",
					"PWM",
					"speed",
					"button2",
					"button",
					"button2",
					"button1",
					"0x.., \\/\\* (.).*",
					"0x5B, /* 2 */",
					"*/\n",
					"0x.., \\/\\* (.).*",
					"0x7C, /* b */",
					"cursor",
					"setTextColor",
					"expi",
					"handl",
					"test",
					"begin",
					"matrix.",
					"matr",
					"());",
					"fillScreen",
					"Adafruit_NeoMatrix",
					"avrdude",
					"USBKEY",
					"BOARD",
					"digital_pin_to_bit_mask_PGM",
					"m1284p",
					"uni",
					"m1284p",
					"ing",
					"PULSE",
					"LEDClass",
					"enum",
					"#",
					"0x05",
					"0x054",
					"0x06",
					"1284",
					"05",
					"sig",
					"__cxa_pure_virtual",
					"__AVR_ATTiny",
					"__AVR_ATmega32U4__",
					"recipe.preproc.macros",
					"__cxa_pure_virtual",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"pioenvs/",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"GFX",
					"pure",
					"effe",
					"toggle\\(",
					"on\\(\\)",
					"on()",
					"on",
					"off",
					"#define.*PWM.*\\w[0-9]*",
					"#define.*ANALOG.*\\w[0-9]*",
					"#define.*255",
					"#define.*ANALOG.*255",
					"#define.*PWM.*255",
					"#define.*PWM.*",
					"PWM_RANGE",
					"PWM",
					"REGD",
					"DEF_",
					"DEF_THR",
					"FAST",
					"                           ",
					"FAST",
					"PWM",
					"sap",
					"line",
					"move",
					"up\"",
					"time",
					"className",
					"rightn",
					"Print",
					"print",
					"DEB",
					"\nDEBO",
					"DEBO",
					"\nDEBO",
					"DEBO",
					"rest",
					"define.*\\sON\\s",
					"rest",
					"digitalWrite"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
					"uint8_t",
					"unsigned int",
					"int8_t",
					"unsigned int",
					"sp",
					"const PROGMEM uint8_t $1[]",
					"const uint8_t * $1",
					"(&sp",
					"const uint8_t s",
					",\n              ",
					"Button 2 (gas)",
					"brake",
					"gas",
					"\"$1\",",
					"",
					"LED"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort"
				}
			],
			"groups":
			[
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/ORSSerialPort/Examples/JSMultiMeter/nodobjc.example.js",
							"semi_transient": true,
							"settings":
							{
								"buffer_size": 1987,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 33.0
			},
			"input":
			{
				"height": 36.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1360 741 0 0 1360 745 ",
			"project": "",
			"replace":
			{
				"height": 62.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"my",
						"My7Seg/My7Seg.ino"
					],
					[
						"my7",
						"libraries/ADC/doxygen/html/search/typedefs_73.html"
					],
					[
						"orig",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"4511",
						"libraries/ICs/4511.h"
					],
					[
						"my7se",
						"My7Seg/My7Seg.ino"
					],
					[
						"matrixt",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"cancom",
						"libraries/Alexduino/examples/CanCompile/CanCompile.ino"
					],
					[
						"led",
						"libraries/LED/LED.h"
					],
					[
						"sim",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"simpl",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"mys",
						"My7Seg/My7Seg.ino"
					],
					[
						"aledxdu",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"async",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"matrixtest",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde"
					],
					[
						"alexdui",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"wstrin",
						"hardware/AlexAVR/avr/cores/arduino/WString.h"
					],
					[
						"gfx",
						"libraries/Adafruit_GFX_Library/Adafruit_GFX.h"
					],
					[
						"gfxc",
						"hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h"
					],
					[
						"color",
						"libraries/Color/Color.h"
					],
					[
						"matri",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"pixel",
						"libraries/NeoPixelBus_by_Makuna/src/NeoPixelAnimator.h"
					],
					[
						"adaf",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"asyn",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"neopix",
						"libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h"
					],
					[
						"matrix",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"alexd",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"pingro",
						"libraries/GPIO/src/PinGroup.h"
					],
					[
						"pin",
						"libraries/Pin/src/Pin.h"
					],
					[
						"",
						"libraries/LED/LED.h"
					],
					[
						"stack",
						"libraries/StackArray/StackArray.h"
					],
					[
						"stackarray",
						"libraries/StackArray/StackArray.h"
					],
					[
						"pin.h",
						"libraries/Pin/src/Pin.h"
					],
					[
						"asyncd",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"led.",
						"LEDme/LED.h"
					],
					[
						"wpro",
						"hardware/google-tiny/avr/cores/tiny/WProgram.h"
					],
					[
						"arduino.h",
						"hardware/google-tiny/avr/cores/tiny/Arduino.h"
					],
					[
						"gogo",
						"Throttle/examples/GoGoGo/GoGoGo.ino"
					],
					[
						"throttl",
						"Throttle/Throttle.cpp"
					],
					[
						"throttle2016",
						"Throttle2016.h"
					],
					[
						"throttle",
						"Throttle2016.h"
					],
					[
						"dele",
						"Sming/SmingCore/Delegate.h"
					],
					[
						"timer",
						"Sming/SmingCore/Timer.h"
					],
					[
						"smingco",
						"Sming/SmingCore/SmingCore.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 319.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 90,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ui",
						"uint16_t"
					],
					[
						"setOutput",
						"setOutputLow"
					],
					[
						"rand",
						"randVal"
					],
					[
						"PWM",
						"PWMRANGE"
					],
					[
						"_C",
						"_CLEAR_Pin"
					],
					[
						"_l",
						"_level"
					],
					[
						"ga",
						"gasLight"
					],
					[
						"off",
						"offset"
					],
					[
						"Color",
						"colorCycle"
					],
					[
						"uint",
						"uint16_t"
					],
					[
						"NMe",
						"Adafruit_NeoMatrix"
					],
					[
						"S",
						"StackArray"
					],
					[
						"POR",
						"PORT_HIGH"
					],
					[
						"set",
						"setHigh"
					],
					[
						"board",
						"boards"
					],
					[
						"e",
						"endif"
					],
					[
						"DEF",
						"DEF_PWM"
					],
					[
						"be",
						"begin"
					],
					[
						"pri",
						"private"
					],
					[
						"chara",
						"character"
					],
					[
						"DE",
						"DEF_MAX_OUT"
					],
					[
						"THROTTLE_V_M",
						"THROTTLE_V_MAX"
					],
					[
						"OTA",
						"OTA_IP"
					],
					[
						"Up",
						"UPDATE_PIN"
					],
					[
						"ini",
						"initializeUs"
					],
					[
						"uin",
						"uint8_t"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/AVR Tools/Sources/ApplicationDelegate.m",
					"settings":
					{
						"buffer_size": 9347,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/AVR Tools/Sources/serial.h",
					"settings":
					{
						"buffer_size": 280,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/AVR Tools/Sources/ApplicationDelegate.h",
					"settings":
					{
						"buffer_size": 1256,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 149.0,
				"last_filter": "path",
				"selected_items":
				[
					[
						"path",
						"File: Copy Path"
					],
					[
						"focus",
						"Focus File on Sidebar"
					],
					[
						"sshc",
						"Set Syntax: SSH Config"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"c++",
						"Set Syntax: C++"
					],
					[
						"pat",
						"File: Copy Path"
					],
					[
						"move",
						"File: Move"
					],
					[
						"copy",
						"File: Copy Path"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"psth",
						"Permute Lines: Shuffle"
					],
					[
						"make",
						"Set Syntax: Makefile"
					],
					[
						"makef",
						"Set Syntax: Makefile"
					],
					[
						"focu",
						"Focus File on Sidebar"
					],
					[
						"refre",
						"Side Bar: Refresh"
					],
					[
						"refr",
						"Side Bar: Refresh"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"syc+",
						"Set Syntax: C++"
					],
					[
						"",
						"Copy File Path"
					],
					[
						"focud",
						"Focus File on Sidebar"
					],
					[
						"syn",
						"Set Syntax: C++"
					],
					[
						"sublime",
						"Colorsublime: Install Theme"
					],
					[
						"foc",
						"Focus File on Sidebar"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"cop",
						"Copy File Path"
					],
					[
						"ref",
						"Side Bar: Refresh"
					],
					[
						"color",
						"Colorsublime: Install Theme"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"read",
						"ReadmePlease"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"package",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"instl",
						"Package Control: Install Package"
					]
				],
				"width": 449.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/AVR Tools",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/AVR Tools/Sources"
			],
			"file_history":
			[
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/AVR Tools/Sources/serial.c",
				"/Volumes/5T/ServiceData/AtoZ_framework/Frameworks/Cocotron/NSKeyValueCoding",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/rsub/rsub.sublime-settings",
				"/sketch/libraries/ADC/doxygen/html/search/typedefs_73.html",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/sketch/libraries/Alexduino/src/Alexduino.cpp",
				"/sketch/libraries.off/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/Pin.h",
				"/sketch/libraries/Pin/src/Pin.cpp",
				"/sketch/libraries/OneButton/OneButton.cpp",
				"/sketch/libraries/OneButton/OneButton.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
				"/Volumes/5T/_dl/ShiftRegister.h",
				"/sketch/libraries/Talkie/talkie.cpp",
				"/sketch/libraries/Talkie/README.md",
				"/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/Arduino.h",
				"/sketch/libraries/Alexduino/src/Alexduino.h",
				"/sketch/My7Seg/My7Seg.ino",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.h",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.cpp",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
				"/sketch/libraries/SevenSegment/SevenSegment.h",
				"/sketch/libraries/SevenSegment/SevenSegment.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/My7Seg/My7Seg.ino",
				"/sketch/libraries/ICs/4511.h",
				"/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
				"/sketch/libraries/ICs/4511.cpp",
				"/sketch/libraries.off/BCDTo7Seg/examples/b4511_counter/b4511_counter.ino",
				"/sketch/libraries/BCDTo7Seg.virgin/BCDTo7Seg.h",
				"/sketch/libraries/Talkie/examples/_2_Voltmeter/_2_Voltmeter.ino",
				"/sketch/libraries/Talkie/talkie.h",
				"/sketch/libraries/Potentiometer/Potentiometer.h",
				"/sketch/libraries/Potentiometer/Potentiometer.cpp",
				"/sketch/libraries/ansiterm/readme.md",
				"/sketch/libraries/AsyncDelay/src/AsyncDelay.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/WString.h",
				"/sketch/libraries.off/ArduinoJson/third-party/gtest-1.7.0/xcode/Config/FrameworkTarget.xcconfig",
				"/sketch/hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBoldOblique12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBold12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp",
				"/sketch/libraries/LED/LED.cpp",
				"/sketch/libraries/Color/Color.h",
				"/sketch/libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h",
				"/sketch/libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/LUFA/Drivers/Board/Board.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII/makefile",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/AlexAVR/avr/programmers.txt",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.no.h",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.h",
				"/sketch/hardware/AlexAVR/avr/platform.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/SimpleThrottle/SimpleThrottle.ino",
				"/sketch/libraries/Handler/Handler.cpp",
				"/sketch/libraries/Handler/examples/CanYouHandleIt/CanYouHandleIt.ino",
				"/sketch/libraries/Handler/Handler.h",
				"/sketch/libraries/LED/LED.h",
				"/sketch/libraries/Throttle/examples/GoGoGoTiny/GoGoGoTiny.ino",
				"/sketch/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/libraries/Throttle/Throttle.cpp",
				"/sketch/libraries/GPIO/src/PinGroup.h",
				"/sketch/libraries/TimerLib/PinEffector.h",
				"/sketch/libraries/TimerLib/utility/FastDelegate.h",
				"/sketch/LEDme/LED.h",
				"/sketch/libraries/Segment7/Segment7.pdf",
				"/sketch/libraries/StackArray/StackArray.h",
				"/sketch/hardware/AlexAVR/avr/boards.txt",
				"/sketch/libraries/TimerLib/SimpleTimer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/LED/library.properties",
				"/sketch/pinguino.bootloader.c",
				"/sketch/hardware/avr-openhardware/avr/avrdude.conf",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.cpp",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.h",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.cpp",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.h",
				"/sketch/hardware/Cosa/avr/platform.txt",
				"/sketch/hardware/Cosa/avr/sub-modules",
				"/sketch/libraries/Adafruit_GFX_Library/gfxfont.h",
				"/sketch/libraries/Pin/src/boards/attinyX5.h",
				"/sketch/ACS712/xACS712/xACS712/Configurations/Adafruit Trinket 5V-16MHz.xcconfig",
				"/sketch/hardware/AlexAVR/avr/programmers.txt",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/sketch/libraries/GPIO/src/GPIO.h",
				"/sketch/libraries/Pin/library.properties",
				"/sketch/libraries/Pin/src/boards/others.h",
				"/sketch/libraries/GPIO/library.properties",
				"/sketch/libraries/GPIO/src/GPIO.cpp",
				"/sketch/hardware/google-tiny/avr/cores/tiny/WProgram.h",
				"/sketch/Classy/.pioenvs/nodemcu/FrameworkArduino/Arduino.h",
				"/sketch/hardware/google-tiny/avr/cores/tiny/Arduino.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/neomatrix-serial-input/neomatrixserial/neomatrixserial.ino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/breadboard/avr/boards.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/FastLED/FastLED.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Chrono/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Delegate.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/WiringFrameworkDependencies.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Interrupts.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Timer.h",
				"/opt/smi8ng",
				"/opt/sping",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/examples/GoGoGo/GoGoGo.ino",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.cpp",
				"/Users/localadmin/.macosz/modules/alex/functions/gzipit",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Periodic/Periodic.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/UdpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/TcpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/DriverPWM.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/LICENSE",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Makefile-rboot.mk",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/.travis.yml",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/samples/Basic_Runloop/app/application.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/SmingCore.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Switch File Deluxe/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Timer.h"
			],
			"find":
			{
				"height": 41.0
			},
			"find_in_files":
			{
				"height": 96.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"click",
					"data",
					"colla",
					"doc",
					"colla",
					"toggle",
					"circl",
					"circle",
					"cirlce",
					"00087",
					"runtime",
					"runtim",
					"byte",
					"open",
					"UInt",
					"UInt ",
					"UInt",
					"inha",
					"unsigned int8_t",
					"UInt",
					"smile_bmp",
					"UInt",
					"my_4511",
					"on",
					",",
					"my_4511",
					"IC_4511",
					"&sp",
					"const uint8_t \\*(.*)\\s*PROGMEM",
					"const uint8_t (.*)\\[\\]",
					"(sp",
					"uint8_t s",
					";\nuint8_t ",
					"7129",
					"Button 2",
					"analog",
					"ANALOg_MAX",
					"PWM",
					"speed",
					"button2",
					"button",
					"button2",
					"button1",
					"0x.., \\/\\* (.).*",
					"0x5B, /* 2 */",
					"*/\n",
					"0x.., \\/\\* (.).*",
					"0x7C, /* b */",
					"cursor",
					"setTextColor",
					"expi",
					"handl",
					"test",
					"begin",
					"matrix.",
					"matr",
					"());",
					"fillScreen",
					"Adafruit_NeoMatrix",
					"avrdude",
					"USBKEY",
					"BOARD",
					"digital_pin_to_bit_mask_PGM",
					"m1284p",
					"uni",
					"m1284p",
					"ing",
					"PULSE",
					"LEDClass",
					"enum",
					"#",
					"0x05",
					"0x054",
					"0x06",
					"1284",
					"05",
					"sig",
					"__cxa_pure_virtual",
					"__AVR_ATTiny",
					"__AVR_ATmega32U4__",
					"recipe.preproc.macros",
					"__cxa_pure_virtual",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"pioenvs/",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"GFX",
					"pure",
					"effe",
					"toggle\\(",
					"on\\(\\)",
					"on()",
					"on",
					"off",
					"#define.*PWM.*\\w[0-9]*",
					"#define.*ANALOG.*\\w[0-9]*",
					"#define.*255",
					"#define.*ANALOG.*255",
					"#define.*PWM.*255",
					"#define.*PWM.*",
					"PWM_RANGE",
					"PWM",
					"REGD",
					"DEF_",
					"DEF_THR",
					"FAST",
					"                           ",
					"FAST",
					"PWM",
					"sap",
					"line",
					"move",
					"up\"",
					"time",
					"className",
					"rightn",
					"Print",
					"print",
					"DEB",
					"\nDEBO",
					"DEBO",
					"\nDEBO",
					"DEBO",
					"rest",
					"define.*\\sON\\s",
					"rest",
					"digitalWrite"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
					"uint8_t",
					"unsigned int",
					"int8_t",
					"unsigned int",
					"sp",
					"const PROGMEM uint8_t $1[]",
					"const uint8_t * $1",
					"(&sp",
					"const uint8_t s",
					",\n              ",
					"Button 2 (gas)",
					"brake",
					"gas",
					"\"$1\",",
					"",
					"LED"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/AVR Tools"
				}
			],
			"groups":
			[
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/AVR Tools/Sources/ApplicationDelegate.m",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 9347,
								"regions":
								{
								},
								"selection":
								[
									[
										4017,
										4352
									]
								],
								"settings":
								{
									"syntax": "Packages/Objective-C/Objective-C.sublime-syntax",
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 2322.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/AVR Tools/Sources/serial.h",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 280,
								"regions":
								{
								},
								"selection":
								[
									[
										138,
										280
									]
								],
								"settings":
								{
									"syntax": "Packages/C++/C++.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/AVR Tools/Sources/ApplicationDelegate.h",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1256,
								"regions":
								{
								},
								"selection":
								[
									[
										272,
										272
									]
								],
								"settings":
								{
									"syntax": "Packages/C++/C++.sublime-syntax",
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 52.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 33.0
			},
			"input":
			{
				"height": 36.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1360 741 0 0 1360 745 ",
			"project": "",
			"replace":
			{
				"height": 62.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"my",
						"My7Seg/My7Seg.ino"
					],
					[
						"my7",
						"libraries/ADC/doxygen/html/search/typedefs_73.html"
					],
					[
						"orig",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"4511",
						"libraries/ICs/4511.h"
					],
					[
						"my7se",
						"My7Seg/My7Seg.ino"
					],
					[
						"matrixt",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"cancom",
						"libraries/Alexduino/examples/CanCompile/CanCompile.ino"
					],
					[
						"led",
						"libraries/LED/LED.h"
					],
					[
						"sim",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"simpl",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"mys",
						"My7Seg/My7Seg.ino"
					],
					[
						"aledxdu",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"async",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"matrixtest",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde"
					],
					[
						"alexdui",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"wstrin",
						"hardware/AlexAVR/avr/cores/arduino/WString.h"
					],
					[
						"gfx",
						"libraries/Adafruit_GFX_Library/Adafruit_GFX.h"
					],
					[
						"gfxc",
						"hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h"
					],
					[
						"color",
						"libraries/Color/Color.h"
					],
					[
						"matri",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"pixel",
						"libraries/NeoPixelBus_by_Makuna/src/NeoPixelAnimator.h"
					],
					[
						"adaf",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"asyn",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"neopix",
						"libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h"
					],
					[
						"matrix",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"alexd",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"pingro",
						"libraries/GPIO/src/PinGroup.h"
					],
					[
						"pin",
						"libraries/Pin/src/Pin.h"
					],
					[
						"",
						"libraries/LED/LED.h"
					],
					[
						"stack",
						"libraries/StackArray/StackArray.h"
					],
					[
						"stackarray",
						"libraries/StackArray/StackArray.h"
					],
					[
						"pin.h",
						"libraries/Pin/src/Pin.h"
					],
					[
						"asyncd",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"led.",
						"LEDme/LED.h"
					],
					[
						"wpro",
						"hardware/google-tiny/avr/cores/tiny/WProgram.h"
					],
					[
						"arduino.h",
						"hardware/google-tiny/avr/cores/tiny/Arduino.h"
					],
					[
						"gogo",
						"Throttle/examples/GoGoGo/GoGoGo.ino"
					],
					[
						"throttl",
						"Throttle/Throttle.cpp"
					],
					[
						"throttle2016",
						"Throttle2016.h"
					],
					[
						"throttle",
						"Throttle2016.h"
					],
					[
						"dele",
						"Sming/SmingCore/Delegate.h"
					],
					[
						"timer",
						"Sming/SmingCore/Timer.h"
					],
					[
						"smingco",
						"Sming/SmingCore/SmingCore.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 319.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 89,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ui",
						"uint16_t"
					],
					[
						"setOutput",
						"setOutputLow"
					],
					[
						"rand",
						"randVal"
					],
					[
						"PWM",
						"PWMRANGE"
					],
					[
						"_C",
						"_CLEAR_Pin"
					],
					[
						"_l",
						"_level"
					],
					[
						"ga",
						"gasLight"
					],
					[
						"off",
						"offset"
					],
					[
						"Color",
						"colorCycle"
					],
					[
						"uint",
						"uint16_t"
					],
					[
						"NMe",
						"Adafruit_NeoMatrix"
					],
					[
						"S",
						"StackArray"
					],
					[
						"POR",
						"PORT_HIGH"
					],
					[
						"set",
						"setHigh"
					],
					[
						"board",
						"boards"
					],
					[
						"e",
						"endif"
					],
					[
						"DEF",
						"DEF_PWM"
					],
					[
						"be",
						"begin"
					],
					[
						"pri",
						"private"
					],
					[
						"chara",
						"character"
					],
					[
						"DE",
						"DEF_MAX_OUT"
					],
					[
						"THROTTLE_V_M",
						"THROTTLE_V_MAX"
					],
					[
						"OTA",
						"OTA_IP"
					],
					[
						"Up",
						"UPDATE_PIN"
					],
					[
						"ini",
						"initializeUs"
					],
					[
						"uin",
						"uint8_t"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
					"settings":
					{
						"buffer_size": 1858,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
					"settings":
					{
						"buffer_size": 373,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/sketch/libraries/Alexduino/src/Matrix.cpp",
					"settings":
					{
						"buffer_size": 7924,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
					"settings":
					{
						"buffer_size": 2643,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/LinkSpriteTest/LinkSpriteTest.ino",
					"settings":
					{
						"buffer_size": 1799,
						"line_ending": "Unix",
						"name": "// http://linksprite.co...eld_for_Arduino"
					}
				},
				{
					"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/LinkSpriteTest/XCTU/XCTU.ino",
					"settings":
					{
						"buffer_size": 390,
						"line_ending": "Unix",
						"name": "#include <SoftwareSerial.h>"
					}
				},
				{
					"file": "/sketch/My7Seg/My7Seg.ino",
					"settings":
					{
						"buffer_size": 3425,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "// Detect which type of boot loader is present, using a fixed built-in table\n// 2012-03-06 <jc@wippler.nl> http://opensource.org/licenses/mit-license.php\n\n#include <avr/pgmspace.h>\n#include <util/crc16.h>\n\n#define VERSION \"2\"\n\n// list of all known boot loaders with their unique signatures\nstruct { word crc; const char* desc; } signatures[] = {\n  0x489C, \"Duemilanove\",\n  0xF1A0, \"Nanode (Duemilanove mod)\",\n  0xFD70, \"OptiBoot 4.4\",\n  0,      0\n};\n\nstatic word CalculateChecksum (word addr, word size) {\n  word crc = ~0;\n  prog_uint8_t* p = (prog_uint8_t*) addr;\n  for (word i = 0; i < size; ++i)\n    crc = _crc16_update(crc, pgm_read_byte(p++));\n  Serial.print(\"  CRC \");\n  Serial.print(size);\n  Serial.print(\"b @ 0x\");\n  Serial.print(addr, HEX);\n  Serial.print(\" = \");\n  Serial.println(crc, HEX);\n  return crc;\n}\n\nstatic const char* IdentifyBootLoader (word addr, word size) {\n  word crc = CalculateChecksum(addr, size);\n  for (byte i = 0; signatures[i].desc != 0; ++i)\n    if (signatures[i].crc == crc)\n      return signatures[i].desc;\n  return 0;\n}\n\nvoid setup () {\n  Serial.begin(57600);\n  Serial.println(\"\\n[bootCheck.\" VERSION \"]\");\n  \n  const char* message = IdentifyBootLoader(0x7800, 2048);\n  if (message == 0)\n    message = IdentifyBootLoader(0x7E00, 512);\n  if (message == 0)\n    message = \"(UNKNOWN)\";\n  \n  Serial.print(\"Boot loader: \");\n  Serial.println(message);\n}\n\nvoid loop () {}",
					"settings":
					{
						"buffer_size": 1398,
						"line_ending": "Unix",
						"name": "// Detect which type of boot loader is present, us"
					}
				},
				{
					"file": "/usr/local/etc/ssh/ssh_config",
					"settings":
					{
						"buffer_size": 7406,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/sketch/a101_ch8_7seg/a101_ch8_7seg.ino",
					"settings":
					{
						"buffer_size": 476,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/sketch/libraries/sevenSegLED/examples/A101_ch8_7seg_message_sign/A101_ch8_7seg_message_sign.ino",
					"settings":
					{
						"buffer_size": 858,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/sketch/libraries/sevenSegLED/sevenSegLED.h",
					"settings":
					{
						"buffer_size": 124,
						"line_ending": "Windows"
					}
				},
				{
					"file": "/sketch/libraries/sevenSegLED/sevenSegLED.cpp",
					"settings":
					{
						"buffer_size": 2018,
						"line_ending": "Windows"
					}
				},
				{
					"file": "/sketch/hardware/Hoodloader/avr/platform.txt",
					"settings":
					{
						"buffer_size": 5684,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/sketch/libraries/ICs/4511.h",
					"settings":
					{
						"buffer_size": 1217,
						"line_ending": "Windows"
					}
				},
				{
					"file": "/sketch/hardware/AlexAVR/avr/platform.txt",
					"settings":
					{
						"buffer_size": 6708,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/sketch/libraries/ICs/4511.cpp",
					"settings":
					{
						"buffer_size": 1563,
						"line_ending": "Windows"
					}
				},
				{
					"file": "/sketch/libraries/Alexduino/src/Matrix.h",
					"settings":
					{
						"buffer_size": 2018,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 109.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"sshc",
						"Set Syntax: SSH Config"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"path",
						"File: Copy Path"
					],
					[
						"c++",
						"Set Syntax: C++"
					],
					[
						"pat",
						"File: Copy Path"
					],
					[
						"move",
						"File: Move"
					],
					[
						"copy",
						"File: Copy Path"
					],
					[
						"focus",
						"Focus File on Sidebar"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"psth",
						"Permute Lines: Shuffle"
					],
					[
						"make",
						"Set Syntax: Makefile"
					],
					[
						"makef",
						"Set Syntax: Makefile"
					],
					[
						"focu",
						"Focus File on Sidebar"
					],
					[
						"refre",
						"Side Bar: Refresh"
					],
					[
						"refr",
						"Side Bar: Refresh"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"syc+",
						"Set Syntax: C++"
					],
					[
						"",
						"Copy File Path"
					],
					[
						"focud",
						"Focus File on Sidebar"
					],
					[
						"syn",
						"Set Syntax: C++"
					],
					[
						"sublime",
						"Colorsublime: Install Theme"
					],
					[
						"foc",
						"Focus File on Sidebar"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"cop",
						"Copy File Path"
					],
					[
						"ref",
						"Side Bar: Refresh"
					],
					[
						"color",
						"Colorsublime: Install Theme"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"read",
						"ReadmePlease"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"package",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"instl",
						"Package Control: Install Package"
					]
				],
				"width": 449.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/sketch",
				"/sketch/a101_ch8_7seg",
				"/sketch/hardware",
				"/sketch/hardware/AlexAVR",
				"/sketch/hardware/AlexAVR/avr",
				"/sketch/hardware/Hoodloader",
				"/sketch/hardware/Hoodloader/avr"
			],
			"file_history":
			[
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/rsub/rsub.sublime-settings",
				"/sketch/libraries/ADC/doxygen/html/search/typedefs_73.html",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/sketch/libraries/Alexduino/src/Alexduino.cpp",
				"/sketch/libraries.off/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/Pin.h",
				"/sketch/libraries/Pin/src/Pin.cpp",
				"/sketch/libraries/OneButton/OneButton.cpp",
				"/sketch/libraries/OneButton/OneButton.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
				"/Volumes/5T/_dl/ShiftRegister.h",
				"/sketch/libraries/Talkie/talkie.cpp",
				"/sketch/libraries/Talkie/README.md",
				"/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/Arduino.h",
				"/sketch/libraries/Alexduino/src/Alexduino.h",
				"/sketch/My7Seg/My7Seg.ino",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.h",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.cpp",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
				"/sketch/libraries/SevenSegment/SevenSegment.h",
				"/sketch/libraries/SevenSegment/SevenSegment.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/My7Seg/My7Seg.ino",
				"/sketch/libraries/ICs/4511.h",
				"/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
				"/sketch/libraries/ICs/4511.cpp",
				"/sketch/libraries.off/BCDTo7Seg/examples/b4511_counter/b4511_counter.ino",
				"/sketch/libraries/BCDTo7Seg.virgin/BCDTo7Seg.h",
				"/sketch/libraries/Talkie/examples/_2_Voltmeter/_2_Voltmeter.ino",
				"/sketch/libraries/Talkie/talkie.h",
				"/sketch/libraries/Potentiometer/Potentiometer.h",
				"/sketch/libraries/Potentiometer/Potentiometer.cpp",
				"/sketch/libraries/ansiterm/readme.md",
				"/sketch/libraries/AsyncDelay/src/AsyncDelay.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/WString.h",
				"/sketch/libraries.off/ArduinoJson/third-party/gtest-1.7.0/xcode/Config/FrameworkTarget.xcconfig",
				"/sketch/hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBoldOblique12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBold12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp",
				"/sketch/libraries/LED/LED.cpp",
				"/sketch/libraries/Color/Color.h",
				"/sketch/libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h",
				"/sketch/libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/LUFA/Drivers/Board/Board.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII/makefile",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/AlexAVR/avr/programmers.txt",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.no.h",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.h",
				"/sketch/hardware/AlexAVR/avr/platform.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/SimpleThrottle/SimpleThrottle.ino",
				"/sketch/libraries/Handler/Handler.cpp",
				"/sketch/libraries/Handler/examples/CanYouHandleIt/CanYouHandleIt.ino",
				"/sketch/libraries/Handler/Handler.h",
				"/sketch/libraries/LED/LED.h",
				"/sketch/libraries/Throttle/examples/GoGoGoTiny/GoGoGoTiny.ino",
				"/sketch/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/libraries/Throttle/Throttle.cpp",
				"/sketch/libraries/GPIO/src/PinGroup.h",
				"/sketch/libraries/TimerLib/PinEffector.h",
				"/sketch/libraries/TimerLib/utility/FastDelegate.h",
				"/sketch/LEDme/LED.h",
				"/sketch/libraries/Segment7/Segment7.pdf",
				"/sketch/libraries/StackArray/StackArray.h",
				"/sketch/hardware/AlexAVR/avr/boards.txt",
				"/sketch/libraries/TimerLib/SimpleTimer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/LED/library.properties",
				"/sketch/pinguino.bootloader.c",
				"/sketch/hardware/avr-openhardware/avr/avrdude.conf",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.cpp",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.h",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.cpp",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.h",
				"/sketch/hardware/Cosa/avr/platform.txt",
				"/sketch/hardware/Cosa/avr/sub-modules",
				"/sketch/libraries/Adafruit_GFX_Library/gfxfont.h",
				"/sketch/libraries/Pin/src/boards/attinyX5.h",
				"/sketch/ACS712/xACS712/xACS712/Configurations/Adafruit Trinket 5V-16MHz.xcconfig",
				"/sketch/hardware/AlexAVR/avr/programmers.txt",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/sketch/libraries/GPIO/src/GPIO.h",
				"/sketch/libraries/Pin/library.properties",
				"/sketch/libraries/Pin/src/boards/others.h",
				"/sketch/libraries/GPIO/library.properties",
				"/sketch/libraries/GPIO/src/GPIO.cpp",
				"/sketch/hardware/google-tiny/avr/cores/tiny/WProgram.h",
				"/sketch/Classy/.pioenvs/nodemcu/FrameworkArduino/Arduino.h",
				"/sketch/hardware/google-tiny/avr/cores/tiny/Arduino.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/neomatrix-serial-input/neomatrixserial/neomatrixserial.ino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/breadboard/avr/boards.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/FastLED/FastLED.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Chrono/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Delegate.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/WiringFrameworkDependencies.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Interrupts.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Timer.h",
				"/opt/smi8ng",
				"/opt/sping",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/examples/GoGoGo/GoGoGo.ino",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.cpp",
				"/Users/localadmin/.macosz/modules/alex/functions/gzipit",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Periodic/Periodic.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/UdpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/TcpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/DriverPWM.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/LICENSE",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Makefile-rboot.mk",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/.travis.yml",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/samples/Basic_Runloop/app/application.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/SmingCore.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Switch File Deluxe/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Timer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Delegate.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/GotoCppInclude/GotoCppInclude.sublime-settings"
			],
			"find":
			{
				"height": 41.0
			},
			"find_in_files":
			{
				"height": 96.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"runtime",
					"runtim",
					"byte",
					"open",
					"UInt",
					"UInt ",
					"UInt",
					"inha",
					"unsigned int8_t",
					"UInt",
					"smile_bmp",
					"UInt",
					"my_4511",
					"on",
					",",
					"my_4511",
					"IC_4511",
					"&sp",
					"const uint8_t \\*(.*)\\s*PROGMEM",
					"const uint8_t (.*)\\[\\]",
					"(sp",
					"uint8_t s",
					";\nuint8_t ",
					"7129",
					"Button 2",
					"analog",
					"ANALOg_MAX",
					"PWM",
					"speed",
					"button2",
					"button",
					"button2",
					"button1",
					"0x.., \\/\\* (.).*",
					"0x5B, /* 2 */",
					"*/\n",
					"0x.., \\/\\* (.).*",
					"0x7C, /* b */",
					"cursor",
					"setTextColor",
					"expi",
					"handl",
					"test",
					"begin",
					"matrix.",
					"matr",
					"());",
					"fillScreen",
					"Adafruit_NeoMatrix",
					"avrdude",
					"USBKEY",
					"BOARD",
					"digital_pin_to_bit_mask_PGM",
					"m1284p",
					"uni",
					"m1284p",
					"ing",
					"PULSE",
					"LEDClass",
					"enum",
					"#",
					"0x05",
					"0x054",
					"0x06",
					"1284",
					"05",
					"sig",
					"__cxa_pure_virtual",
					"__AVR_ATTiny",
					"__AVR_ATmega32U4__",
					"recipe.preproc.macros",
					"__cxa_pure_virtual",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"pioenvs/",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"GFX",
					"pure",
					"effe",
					"toggle\\(",
					"on\\(\\)",
					"on()",
					"on",
					"off",
					"#define.*PWM.*\\w[0-9]*",
					"#define.*ANALOG.*\\w[0-9]*",
					"#define.*255",
					"#define.*ANALOG.*255",
					"#define.*PWM.*255",
					"#define.*PWM.*",
					"PWM_RANGE",
					"PWM",
					"REGD",
					"DEF_",
					"DEF_THR",
					"FAST",
					"                           ",
					"FAST",
					"PWM",
					"sap",
					"line",
					"move",
					"up\"",
					"time",
					"className",
					"rightn",
					"Print",
					"print",
					"DEB",
					"\nDEBO",
					"DEBO",
					"\nDEBO",
					"DEBO",
					"rest",
					"define.*\\sON\\s",
					"rest",
					"digitalWrite",
					"define.*\\sON\\s",
					"define.*\\sON",
					"define.*ON",
					"\\bD5\\b",
					"D5",
					"ws",
					"isdi",
					"ud",
					"ECHO_PORT",
					"echo"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
					"uint8_t",
					"unsigned int",
					"int8_t",
					"unsigned int",
					"sp",
					"const PROGMEM uint8_t $1[]",
					"const uint8_t * $1",
					"(&sp",
					"const uint8_t s",
					",\n              ",
					"Button 2 (gas)",
					"brake",
					"gas",
					"\"$1\",",
					"",
					"LED"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/sketch"
				}
			],
			"groups":
			[
				{
					"selected": 13,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1858,
								"regions":
								{
								},
								"selection":
								[
									[
										1021,
										1021
									]
								],
								"settings":
								{
									"syntax": "Packages/C++/C++.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 609.0,
								"zoom_level": 1.0
							},
							"stack_index": 17,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 373,
								"regions":
								{
								},
								"selection":
								[
									[
										120,
										120
									]
								],
								"settings":
								{
									"syntax": "Packages/arduino-cli/arduino.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 12,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/sketch/libraries/Alexduino/src/Matrix.cpp",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 7924,
								"regions":
								{
								},
								"selection":
								[
									[
										6649,
										6649
									]
								],
								"settings":
								{
									"syntax": "Packages/C++/C++.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 4577.0,
								"zoom_level": 1.0
							},
							"stack_index": 11,
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 2643,
								"regions":
								{
								},
								"selection":
								[
									[
										275,
										275
									]
								],
								"settings":
								{
									"syntax": "Packages/arduino-cli/arduino.tmLanguage",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 16,
							"type": "text"
						},
						{
							"buffer": 4,
							"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/LinkSpriteTest/LinkSpriteTest.ino",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1799,
								"regions":
								{
								},
								"selection":
								[
									[
										3,
										41
									]
								],
								"settings":
								{
									"auto_name": "// http://linksprite.co...eld_for_Arduino",
									"syntax": "Packages/arduino-cli/arduino.tmLanguage",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 14,
							"type": "text"
						},
						{
							"buffer": 5,
							"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/LinkSpriteTest/XCTU/XCTU.ino",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 390,
								"regions":
								{
								},
								"selection":
								[
									[
										390,
										390
									]
								],
								"settings":
								{
									"auto_name": "#include <SoftwareSerial.h>",
									"syntax": "Packages/arduino-cli/arduino.tmLanguage",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 15,
							"type": "text"
						},
						{
							"buffer": 6,
							"file": "/sketch/My7Seg/My7Seg.ino",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 3425,
								"regions":
								{
								},
								"selection":
								[
									[
										3337,
										3337
									]
								],
								"settings":
								{
									"syntax": "Packages/C++/C++.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 1347.0,
								"zoom_level": 1.0
							},
							"stack_index": 8,
							"type": "text"
						},
						{
							"buffer": 7,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1398,
								"regions":
								{
								},
								"selection":
								[
									[
										1398,
										1398
									]
								],
								"settings":
								{
									"auto_name": "// Detect which type of boot loader is present, us",
									"default_dir": "/sketch",
									"syntax": "Packages/Text/Plain text.tmLanguage",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 7,
							"type": "text"
						},
						{
							"buffer": 8,
							"file": "/usr/local/etc/ssh/ssh_config",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 7406,
								"regions":
								{
								},
								"selection":
								[
									[
										630,
										630
									]
								],
								"settings":
								{
									"syntax": "Packages/SSH Config/SSH Config.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 6,
							"type": "text"
						},
						{
							"buffer": 9,
							"file": "/sketch/a101_ch8_7seg/a101_ch8_7seg.ino",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 476,
								"regions":
								{
								},
								"selection":
								[
									[
										476,
										476
									]
								],
								"settings":
								{
									"syntax": "Packages/arduino-cli/arduino.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 65.0,
								"zoom_level": 1.0
							},
							"stack_index": 9,
							"type": "text"
						},
						{
							"buffer": 10,
							"file": "/sketch/libraries/sevenSegLED/examples/A101_ch8_7seg_message_sign/A101_ch8_7seg_message_sign.ino",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 858,
								"regions":
								{
								},
								"selection":
								[
									[
										295,
										295
									]
								],
								"settings":
								{
									"syntax": "Packages/arduino-cli/arduino.tmLanguage",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 137.0,
								"zoom_level": 1.0
							},
							"stack_index": 5,
							"type": "text"
						},
						{
							"buffer": 11,
							"file": "/sketch/libraries/sevenSegLED/sevenSegLED.h",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 124,
								"regions":
								{
								},
								"selection":
								[
									[
										121,
										121
									]
								],
								"settings":
								{
									"syntax": "Packages/C++/C++.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 4,
							"type": "text"
						},
						{
							"buffer": 12,
							"file": "/sketch/libraries/sevenSegLED/sevenSegLED.cpp",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 2018,
								"regions":
								{
								},
								"selection":
								[
									[
										1121,
										1121
									]
								],
								"settings":
								{
									"syntax": "Packages/C++/C++.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 715.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						},
						{
							"buffer": 13,
							"file": "/sketch/hardware/Hoodloader/avr/platform.txt",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 5684,
								"regions":
								{
								},
								"selection":
								[
									[
										4209,
										4209
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 1480.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						},
						{
							"buffer": 14,
							"file": "/sketch/libraries/ICs/4511.h",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1217,
								"regions":
								{
								},
								"selection":
								[
									[
										1060,
										1060
									]
								],
								"settings":
								{
									"syntax": "Packages/C++/C++.sublime-syntax"
								},
								"translation.x": 35.0,
								"translation.y": 191.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 15,
							"file": "/sketch/hardware/AlexAVR/avr/platform.txt",
							"semi_transient": true,
							"settings":
							{
								"buffer_size": 6708,
								"regions":
								{
								},
								"selection":
								[
									[
										5350,
										5357
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 2362.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 16,
							"file": "/sketch/libraries/ICs/4511.cpp",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1563,
								"regions":
								{
								},
								"selection":
								[
									[
										1012,
										1012
									]
								],
								"settings":
								{
									"syntax": "Packages/C++/C++.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 257.0,
								"zoom_level": 1.0
							},
							"stack_index": 10,
							"type": "text"
						},
						{
							"buffer": 17,
							"file": "/sketch/libraries/Alexduino/src/Matrix.h",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 2018,
								"regions":
								{
								},
								"selection":
								[
									[
										1868,
										1868
									]
								],
								"settings":
								{
									"syntax": "Packages/C++/C++.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 786.0,
								"zoom_level": 1.0
							},
							"stack_index": 13,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 33.0
			},
			"input":
			{
				"height": 36.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1360 741 0 0 1360 745 ",
			"project": "",
			"replace":
			{
				"height": 62.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"my",
						"My7Seg/My7Seg.ino"
					],
					[
						"my7",
						"libraries/ADC/doxygen/html/search/typedefs_73.html"
					],
					[
						"orig",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"4511",
						"libraries/ICs/4511.h"
					],
					[
						"my7se",
						"My7Seg/My7Seg.ino"
					],
					[
						"matrixt",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"cancom",
						"libraries/Alexduino/examples/CanCompile/CanCompile.ino"
					],
					[
						"led",
						"libraries/LED/LED.h"
					],
					[
						"sim",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"simpl",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"mys",
						"My7Seg/My7Seg.ino"
					],
					[
						"aledxdu",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"async",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"matrixtest",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde"
					],
					[
						"alexdui",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"wstrin",
						"hardware/AlexAVR/avr/cores/arduino/WString.h"
					],
					[
						"gfx",
						"libraries/Adafruit_GFX_Library/Adafruit_GFX.h"
					],
					[
						"gfxc",
						"hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h"
					],
					[
						"color",
						"libraries/Color/Color.h"
					],
					[
						"matri",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"pixel",
						"libraries/NeoPixelBus_by_Makuna/src/NeoPixelAnimator.h"
					],
					[
						"adaf",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"asyn",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"neopix",
						"libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h"
					],
					[
						"matrix",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"alexd",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"pingro",
						"libraries/GPIO/src/PinGroup.h"
					],
					[
						"pin",
						"libraries/Pin/src/Pin.h"
					],
					[
						"",
						"libraries/LED/LED.h"
					],
					[
						"stack",
						"libraries/StackArray/StackArray.h"
					],
					[
						"stackarray",
						"libraries/StackArray/StackArray.h"
					],
					[
						"pin.h",
						"libraries/Pin/src/Pin.h"
					],
					[
						"asyncd",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"led.",
						"LEDme/LED.h"
					],
					[
						"wpro",
						"hardware/google-tiny/avr/cores/tiny/WProgram.h"
					],
					[
						"arduino.h",
						"hardware/google-tiny/avr/cores/tiny/Arduino.h"
					],
					[
						"gogo",
						"Throttle/examples/GoGoGo/GoGoGo.ino"
					],
					[
						"throttl",
						"Throttle/Throttle.cpp"
					],
					[
						"throttle2016",
						"Throttle2016.h"
					],
					[
						"throttle",
						"Throttle2016.h"
					],
					[
						"dele",
						"Sming/SmingCore/Delegate.h"
					],
					[
						"timer",
						"Sming/SmingCore/Timer.h"
					],
					[
						"smingco",
						"Sming/SmingCore/SmingCore.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 319.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 81,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ui",
						"uint16_t"
					],
					[
						"setOutput",
						"setOutputLow"
					],
					[
						"rand",
						"randVal"
					],
					[
						"PWM",
						"PWMRANGE"
					],
					[
						"_C",
						"_CLEAR_Pin"
					],
					[
						"_l",
						"_level"
					],
					[
						"ga",
						"gasLight"
					],
					[
						"off",
						"offset"
					],
					[
						"Color",
						"colorCycle"
					],
					[
						"uint",
						"uint16_t"
					],
					[
						"NMe",
						"Adafruit_NeoMatrix"
					],
					[
						"S",
						"StackArray"
					],
					[
						"POR",
						"PORT_HIGH"
					],
					[
						"set",
						"setHigh"
					],
					[
						"board",
						"boards"
					],
					[
						"e",
						"endif"
					],
					[
						"DEF",
						"DEF_PWM"
					],
					[
						"be",
						"begin"
					],
					[
						"pri",
						"private"
					],
					[
						"chara",
						"character"
					],
					[
						"DE",
						"DEF_MAX_OUT"
					],
					[
						"THROTTLE_V_M",
						"THROTTLE_V_MAX"
					],
					[
						"OTA",
						"OTA_IP"
					],
					[
						"Up",
						"UPDATE_PIN"
					],
					[
						"ini",
						"initializeUs"
					],
					[
						"uin",
						"uint8_t"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/ESPWebFramework/Makefile",
					"settings":
					{
						"buffer_size": 5119,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 109.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"sshc",
						"Set Syntax: SSH Config"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"path",
						"File: Copy Path"
					],
					[
						"c++",
						"Set Syntax: C++"
					],
					[
						"pat",
						"File: Copy Path"
					],
					[
						"move",
						"File: Move"
					],
					[
						"copy",
						"File: Copy Path"
					],
					[
						"focus",
						"Focus File on Sidebar"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"psth",
						"Permute Lines: Shuffle"
					],
					[
						"make",
						"Set Syntax: Makefile"
					],
					[
						"makef",
						"Set Syntax: Makefile"
					],
					[
						"focu",
						"Focus File on Sidebar"
					],
					[
						"refre",
						"Side Bar: Refresh"
					],
					[
						"refr",
						"Side Bar: Refresh"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"syc+",
						"Set Syntax: C++"
					],
					[
						"",
						"Copy File Path"
					],
					[
						"focud",
						"Focus File on Sidebar"
					],
					[
						"syn",
						"Set Syntax: C++"
					],
					[
						"sublime",
						"Colorsublime: Install Theme"
					],
					[
						"foc",
						"Focus File on Sidebar"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"cop",
						"Copy File Path"
					],
					[
						"ref",
						"Side Bar: Refresh"
					],
					[
						"color",
						"Colorsublime: Install Theme"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"read",
						"ReadmePlease"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"package",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"instl",
						"Package Control: Install Package"
					]
				],
				"width": 449.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ESPWebFramework"
			],
			"file_history":
			[
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/rsub/rsub.sublime-settings",
				"/sketch/libraries/ADC/doxygen/html/search/typedefs_73.html",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/sketch/libraries/Alexduino/src/Alexduino.cpp",
				"/sketch/libraries.off/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/Pin.h",
				"/sketch/libraries/Pin/src/Pin.cpp",
				"/sketch/libraries/OneButton/OneButton.cpp",
				"/sketch/libraries/OneButton/OneButton.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
				"/Volumes/5T/_dl/ShiftRegister.h",
				"/sketch/libraries/Talkie/talkie.cpp",
				"/sketch/libraries/Talkie/README.md",
				"/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/Arduino.h",
				"/sketch/libraries/Alexduino/src/Alexduino.h",
				"/sketch/My7Seg/My7Seg.ino",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.h",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.cpp",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
				"/sketch/libraries/SevenSegment/SevenSegment.h",
				"/sketch/libraries/SevenSegment/SevenSegment.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/My7Seg/My7Seg.ino",
				"/sketch/libraries/ICs/4511.h",
				"/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
				"/sketch/libraries/ICs/4511.cpp",
				"/sketch/libraries.off/BCDTo7Seg/examples/b4511_counter/b4511_counter.ino",
				"/sketch/libraries/BCDTo7Seg.virgin/BCDTo7Seg.h",
				"/sketch/libraries/Talkie/examples/_2_Voltmeter/_2_Voltmeter.ino",
				"/sketch/libraries/Talkie/talkie.h",
				"/sketch/libraries/Potentiometer/Potentiometer.h",
				"/sketch/libraries/Potentiometer/Potentiometer.cpp",
				"/sketch/libraries/ansiterm/readme.md",
				"/sketch/libraries/AsyncDelay/src/AsyncDelay.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/WString.h",
				"/sketch/libraries.off/ArduinoJson/third-party/gtest-1.7.0/xcode/Config/FrameworkTarget.xcconfig",
				"/sketch/hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBoldOblique12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBold12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp",
				"/sketch/libraries/LED/LED.cpp",
				"/sketch/libraries/Color/Color.h",
				"/sketch/libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h",
				"/sketch/libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/LUFA/Drivers/Board/Board.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII/makefile",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/AlexAVR/avr/programmers.txt",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.no.h",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.h",
				"/sketch/hardware/AlexAVR/avr/platform.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/SimpleThrottle/SimpleThrottle.ino",
				"/sketch/libraries/Handler/Handler.cpp",
				"/sketch/libraries/Handler/examples/CanYouHandleIt/CanYouHandleIt.ino",
				"/sketch/libraries/Handler/Handler.h",
				"/sketch/libraries/LED/LED.h",
				"/sketch/libraries/Throttle/examples/GoGoGoTiny/GoGoGoTiny.ino",
				"/sketch/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/libraries/Throttle/Throttle.cpp",
				"/sketch/libraries/GPIO/src/PinGroup.h",
				"/sketch/libraries/TimerLib/PinEffector.h",
				"/sketch/libraries/TimerLib/utility/FastDelegate.h",
				"/sketch/LEDme/LED.h",
				"/sketch/libraries/Segment7/Segment7.pdf",
				"/sketch/libraries/StackArray/StackArray.h",
				"/sketch/hardware/AlexAVR/avr/boards.txt",
				"/sketch/libraries/TimerLib/SimpleTimer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/LED/library.properties",
				"/sketch/pinguino.bootloader.c",
				"/sketch/hardware/avr-openhardware/avr/avrdude.conf",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.cpp",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.h",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.cpp",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.h",
				"/sketch/hardware/Cosa/avr/platform.txt",
				"/sketch/hardware/Cosa/avr/sub-modules",
				"/sketch/libraries/Adafruit_GFX_Library/gfxfont.h",
				"/sketch/libraries/Pin/src/boards/attinyX5.h",
				"/sketch/ACS712/xACS712/xACS712/Configurations/Adafruit Trinket 5V-16MHz.xcconfig",
				"/sketch/hardware/AlexAVR/avr/programmers.txt",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/sketch/libraries/GPIO/src/GPIO.h",
				"/sketch/libraries/Pin/library.properties",
				"/sketch/libraries/Pin/src/boards/others.h",
				"/sketch/libraries/GPIO/library.properties",
				"/sketch/libraries/GPIO/src/GPIO.cpp",
				"/sketch/hardware/google-tiny/avr/cores/tiny/WProgram.h",
				"/sketch/Classy/.pioenvs/nodemcu/FrameworkArduino/Arduino.h",
				"/sketch/hardware/google-tiny/avr/cores/tiny/Arduino.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/neomatrix-serial-input/neomatrixserial/neomatrixserial.ino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/breadboard/avr/boards.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/FastLED/FastLED.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Chrono/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Delegate.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/WiringFrameworkDependencies.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Interrupts.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Timer.h",
				"/opt/smi8ng",
				"/opt/sping",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/examples/GoGoGo/GoGoGo.ino",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.cpp",
				"/Users/localadmin/.macosz/modules/alex/functions/gzipit",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Periodic/Periodic.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/UdpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/TcpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/DriverPWM.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/LICENSE",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Makefile-rboot.mk",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/.travis.yml",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/samples/Basic_Runloop/app/application.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/SmingCore.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Switch File Deluxe/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Timer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Delegate.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/GotoCppInclude/GotoCppInclude.sublime-settings"
			],
			"find":
			{
				"height": 33.0
			},
			"find_in_files":
			{
				"height": 96.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"runtime",
					"runtim",
					"byte",
					"open",
					"UInt",
					"UInt ",
					"UInt",
					"inha",
					"unsigned int8_t",
					"UInt",
					"smile_bmp",
					"UInt",
					"my_4511",
					"on",
					",",
					"my_4511",
					"IC_4511",
					"&sp",
					"const uint8_t \\*(.*)\\s*PROGMEM",
					"const uint8_t (.*)\\[\\]",
					"(sp",
					"uint8_t s",
					";\nuint8_t ",
					"7129",
					"Button 2",
					"analog",
					"ANALOg_MAX",
					"PWM",
					"speed",
					"button2",
					"button",
					"button2",
					"button1",
					"0x.., \\/\\* (.).*",
					"0x5B, /* 2 */",
					"*/\n",
					"0x.., \\/\\* (.).*",
					"0x7C, /* b */",
					"cursor",
					"setTextColor",
					"expi",
					"handl",
					"test",
					"begin",
					"matrix.",
					"matr",
					"());",
					"fillScreen",
					"Adafruit_NeoMatrix",
					"avrdude",
					"USBKEY",
					"BOARD",
					"digital_pin_to_bit_mask_PGM",
					"m1284p",
					"uni",
					"m1284p",
					"ing",
					"PULSE",
					"LEDClass",
					"enum",
					"#",
					"0x05",
					"0x054",
					"0x06",
					"1284",
					"05",
					"sig",
					"__cxa_pure_virtual",
					"__AVR_ATTiny",
					"__AVR_ATmega32U4__",
					"recipe.preproc.macros",
					"__cxa_pure_virtual",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"pioenvs/",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"GFX",
					"pure",
					"effe",
					"toggle\\(",
					"on\\(\\)",
					"on()",
					"on",
					"off",
					"#define.*PWM.*\\w[0-9]*",
					"#define.*ANALOG.*\\w[0-9]*",
					"#define.*255",
					"#define.*ANALOG.*255",
					"#define.*PWM.*255",
					"#define.*PWM.*",
					"PWM_RANGE",
					"PWM",
					"REGD",
					"DEF_",
					"DEF_THR",
					"FAST",
					"                           ",
					"FAST",
					"PWM",
					"sap",
					"line",
					"move",
					"up\"",
					"time",
					"className",
					"rightn",
					"Print",
					"print",
					"DEB",
					"\nDEBO",
					"DEBO",
					"\nDEBO",
					"DEBO",
					"rest",
					"define.*\\sON\\s",
					"rest",
					"digitalWrite",
					"define.*\\sON\\s",
					"define.*\\sON",
					"define.*ON",
					"\\bD5\\b",
					"D5",
					"ws",
					"isdi",
					"ud",
					"ECHO_PORT",
					"echo"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
					"uint8_t",
					"unsigned int",
					"int8_t",
					"unsigned int",
					"sp",
					"const PROGMEM uint8_t $1[]",
					"const uint8_t * $1",
					"(&sp",
					"const uint8_t s",
					",\n              ",
					"Button 2 (gas)",
					"brake",
					"gas",
					"\"$1\",",
					"",
					"LED"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/ESPWebFramework"
				}
			],
			"groups":
			[
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/ESPWebFramework/Makefile",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 5119,
								"regions":
								{
								},
								"selection":
								[
									[
										23,
										23
									]
								],
								"settings":
								{
									"syntax": "Packages/Makefile/Makefile.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 33.0
			},
			"input":
			{
				"height": 36.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1360 741 0 0 1360 745 ",
			"project": "",
			"replace":
			{
				"height": 62.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"my",
						"My7Seg/My7Seg.ino"
					],
					[
						"my7",
						"libraries/ADC/doxygen/html/search/typedefs_73.html"
					],
					[
						"orig",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"4511",
						"libraries/ICs/4511.h"
					],
					[
						"my7se",
						"My7Seg/My7Seg.ino"
					],
					[
						"matrixt",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"cancom",
						"libraries/Alexduino/examples/CanCompile/CanCompile.ino"
					],
					[
						"led",
						"libraries/LED/LED.h"
					],
					[
						"sim",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"simpl",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"mys",
						"My7Seg/My7Seg.ino"
					],
					[
						"aledxdu",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"async",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"matrixtest",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde"
					],
					[
						"alexdui",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"wstrin",
						"hardware/AlexAVR/avr/cores/arduino/WString.h"
					],
					[
						"gfx",
						"libraries/Adafruit_GFX_Library/Adafruit_GFX.h"
					],
					[
						"gfxc",
						"hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h"
					],
					[
						"color",
						"libraries/Color/Color.h"
					],
					[
						"matri",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"pixel",
						"libraries/NeoPixelBus_by_Makuna/src/NeoPixelAnimator.h"
					],
					[
						"adaf",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"asyn",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"neopix",
						"libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h"
					],
					[
						"matrix",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"alexd",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"pingro",
						"libraries/GPIO/src/PinGroup.h"
					],
					[
						"pin",
						"libraries/Pin/src/Pin.h"
					],
					[
						"",
						"libraries/LED/LED.h"
					],
					[
						"stack",
						"libraries/StackArray/StackArray.h"
					],
					[
						"stackarray",
						"libraries/StackArray/StackArray.h"
					],
					[
						"pin.h",
						"libraries/Pin/src/Pin.h"
					],
					[
						"asyncd",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"led.",
						"LEDme/LED.h"
					],
					[
						"wpro",
						"hardware/google-tiny/avr/cores/tiny/WProgram.h"
					],
					[
						"arduino.h",
						"hardware/google-tiny/avr/cores/tiny/Arduino.h"
					],
					[
						"gogo",
						"Throttle/examples/GoGoGo/GoGoGo.ino"
					],
					[
						"throttl",
						"Throttle/Throttle.cpp"
					],
					[
						"throttle2016",
						"Throttle2016.h"
					],
					[
						"throttle",
						"Throttle2016.h"
					],
					[
						"dele",
						"Sming/SmingCore/Delegate.h"
					],
					[
						"timer",
						"Sming/SmingCore/Timer.h"
					],
					[
						"smingco",
						"Sming/SmingCore/SmingCore.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 319.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 91,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ui",
						"uint16_t"
					],
					[
						"setOutput",
						"setOutputLow"
					],
					[
						"rand",
						"randVal"
					],
					[
						"PWM",
						"PWMRANGE"
					],
					[
						"_C",
						"_CLEAR_Pin"
					],
					[
						"_l",
						"_level"
					],
					[
						"ga",
						"gasLight"
					],
					[
						"off",
						"offset"
					],
					[
						"Color",
						"colorCycle"
					],
					[
						"uint",
						"uint16_t"
					],
					[
						"NMe",
						"Adafruit_NeoMatrix"
					],
					[
						"S",
						"StackArray"
					],
					[
						"POR",
						"PORT_HIGH"
					],
					[
						"set",
						"setHigh"
					],
					[
						"board",
						"boards"
					],
					[
						"e",
						"endif"
					],
					[
						"DEF",
						"DEF_PWM"
					],
					[
						"be",
						"begin"
					],
					[
						"pri",
						"private"
					],
					[
						"chara",
						"character"
					],
					[
						"DE",
						"DEF_MAX_OUT"
					],
					[
						"THROTTLE_V_M",
						"THROTTLE_V_MAX"
					],
					[
						"OTA",
						"OTA_IP"
					],
					[
						"Up",
						"UPDATE_PIN"
					],
					[
						"ini",
						"initializeUs"
					],
					[
						"uin",
						"uint8_t"
					]
				]
			},
			"buffers":
			[
				{
					"contents": "Searching 873 files for \"DeviceRequest\" (regex, case sensitive)\n\n/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/IOKit/usb/IOUSBHostDevice.h:\n  323       * section 9.4.3 of the USB 2.0 specification.\n  324       *\n  325:      * @param requestType tDeviceRequestType to be used for the GET_DESCRIPTOR control request\n  326       *\n  327:      * @param requestRecipient tDeviceRequestRecipient to be used for the GET_DESCRIPTOR control request\n  328       *\n  329       * @return Pointer to the descriptor if found.\n  ...\n  333                                                           uint8_t index = 0,\n  334                                                           uint16_t languageID = 0,\n  335:                                                          tDeviceRequestType requestType = kRequestTypeStandard,\n  336:                                                          tDeviceRequestRecipient requestRecipient = kRequestRecipientDevice);\n  337      \n  338      // Retrieve and cache the entire length of standard descriptor types\n  ...\n  428          uint8_t                 index;\n  429          uint16_t                languageID;\n  430:         tDeviceRequestType      requestType;\n  431:         tDeviceRequestRecipient requestRecipient;\n  432      };\n  433      virtual IOReturn getDescriptorGated(uint8_t type, uint16_t& length, tDescriptorSelectors& selectors, const StandardUSB::Descriptor*& result);\n  ...\n  488       * The following request types are reserved and cannot be made as generic control requests, the appropriate API call should be used instead.\n  489       *\n  490:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientDevice), kDeviceRequestSetAddress Ñ reserved, this request cannot be sent by drivers.\n  491:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientDevice), kDeviceRequestSetConfiguration Ñ see setConfiguration().\n  492:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientInterface), kDeviceRequestSetInterface Ñ see IOUSBHostInterface::selectAlternateSetting().\n  493       *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientEndpoint), kRequestRecipientEndpoint Ñ see IOUSBHostPipe::clearStall().\n  494       *\n  ...\n  498       * @param forClient The object issuing the request (generally the <code>this</code> pointer).\n  499       *\n  500:      * @param request Reference to a valid StandardUSB::DeviceRequest object.  This will be copied and can therefore be stack-allocated.\n  501       *\n  502       * @param dataBuffer Pointer to the memory to be used for the I/O.\n  ...\n  508       * @return IOReturn result code\n  509       */\n  510:     virtual IOReturn deviceRequest(IOService* forClient, StandardUSB::DeviceRequest& request, void* dataBuffer, IOUSBHostCompletion* completion, uint32_t completionTimeoutMs = kUSBHostDefaultControlCompletionTimeoutMS);\n  511  \n  512      /*!\n  ...\n  518       * The following request types are reserved and cannot be made as generic control requests, the appropriate API call should be used instead.\n  519       *\n  520:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientDevice), kDeviceRequestSetAddress Ñ reserved, this request cannot be sent by drivers.\n  521:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientDevice), kDeviceRequestSetConfiguration Ñ see setConfiguration().\n  522:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientInterface), kDeviceRequestSetInterface Ñ see IOUSBHostInterface::selectAlternateSetting().\n  523       *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientEndpoint), kRequestRecipientEndpoint Ñ see IOUSBHostPipe::clearStall().\n  524       *\n  ...\n  528       * @param forClient The object issuing the request (generally the <code>this</code> pointer).\n  529       *\n  530:      * @param request Reference to a valid StandardUSB::DeviceRequest object.  This will be copied and can therefore be stack-allocated.\n  531       *\n  532       * @param dataBuffer Pointer to an IOMemoryDescriptor for the memory to be used for the I/O.\n  ...\n  538       * @return IOReturn result code\n  539       */\n  540:     virtual IOReturn deviceRequest(IOService* forClient, StandardUSB::DeviceRequest& request, IOMemoryDescriptor* dataBuffer, IOUSBHostCompletion* completion, uint32_t completionTimeoutMs = kUSBHostDefaultControlCompletionTimeoutMS);\n  541      \n  542      /*!\n  ...\n  547       * The following request types are reserved and cannot be made as generic control requests, the appropriate API call should be used instead.\n  548       *\n  549:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientDevice), kDeviceRequestSetAddress Ñ reserved, this request cannot be sent by drivers.\n  550:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientDevice), kDeviceRequestSetConfiguration Ñ see setConfiguration().\n  551:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientInterface), kDeviceRequestSetInterface Ñ see IOUSBHostInterface::selectAlternateSetting().\n  552       *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientEndpoint), kRequestRecipientEndpoint Ñ see IOUSBHostPipe::clearStall().\n  553       *\n  ...\n  557       * @param forClient The object issuing the request (generally the <code>this</code> pointer).\n  558       *\n  559:      * @param request Reference to a valid StandardUSB::DeviceRequest object.  This will be copied and can therefore be stack-allocated.\n  560       *\n  561       * @param dataBuffer Pointer to the memory to be used for the I/O.\n  ...\n  567       * @return IOReturn result code\n  568       */\n  569:     virtual IOReturn deviceRequest(IOService* forClient, StandardUSB::DeviceRequest& request, void* dataBuffer, uint32_t& bytesTransferred, uint32_t completionTimeoutMs = kUSBHostDefaultControlCompletionTimeoutMS);\n  570  \n  571      /*!\n  ...\n  576       * The following request types are reserved and cannot be made as generic control requests, the appropriate API call should be used instead.\n  577       *\n  578:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientDevice), kDeviceRequestSetAddress Ñ reserved, this request cannot be sent by drivers.\n  579:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientDevice), kDeviceRequestSetConfiguration Ñ see setConfiguration().\n  580:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientInterface), kDeviceRequestSetInterface Ñ see IOUSBHostInterface::selectAlternateSetting().\n  581       *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientEndpoint), kRequestRecipientEndpoint Ñ see IOUSBHostPipe::clearStall().\n  582       *\n  ...\n  586       * @param forClient The object issuing the request (generally the <code>this</code> pointer).\n  587       *\n  588:      * @param request Reference to a valid StandardUSB::DeviceRequest object.  This will be copied and can therefore be stack-allocated.\n  589       *\n  590       * @param dataBuffer Pointer to an IOMemoryDescriptor for the memory to be used for the I/O.\n  ...\n  596       * @return IOReturn result code\n  597       */\n  598:     virtual IOReturn deviceRequest(IOService* forClient, StandardUSB::DeviceRequest& request, IOMemoryDescriptor* dataBuffer, uint32_t& bytesTransferred, uint32_t completionTimeoutMs = kUSBHostDefaultControlCompletionTimeoutMS);\n  599  \n  600      /*!\n  ...\n  612       * @return IOReturn result code\n  613       */\n  614:     virtual IOReturn abortDeviceRequests(IOService* forClient = NULL, IOOptionBits options = IOUSBHostIOSource::kAbortAsynchronous, IOReturn withError = kIOReturnAborted);\n  615      \n  616      // Public pad slots for configuration, interface, and pipe management\n  ...\n  631      virtual IOReturn createPipeGated(const StandardUSB::EndpointDescriptor* descriptor, const StandardUSB::SuperSpeedEndpointCompanionDescriptor* companionDescriptor, IOUSBHostInterface* interface, IOUSBHostPipe*& result);\n  632  \n  633:     virtual IOReturn deviceRequest(IOService* forClient, StandardUSB::DeviceRequest& request,\n  634                                     void* rawBuffer, IOMemoryDescriptor* descriptorBuffer,\n  635                                     uint32_t& bytesTransferred, IOUSBHostCompletion* completion,\n  636                                     uint32_t completionTimeoutMs);\n  637  \n  638:     virtual IOReturn internalDeviceRequest(IOService* forClient, StandardUSB::DeviceRequest& request,\n  639                                             void* rawBuffer, IOMemoryDescriptor* descriptorBuffer,\n  640                                             uint32_t& bytesTransferred, IOUSBHostCompletion* completion,\n  641                                             uint32_t completionTimeoutMs);\n  642      \n  643:     virtual IOReturn internalDeviceRequestGated(IOUSBHostPipe::tInternalControlRequestParameters& parameters);\n  644  \n  645:     virtual IOReturn abortDeviceRequestsGated(IOService* forClient, IOOptionBits options, IOReturn withError);\n  646      \n  647      // Protected pad slots for configuration, interface, and pipe management\n  ...\n  843      // virtual UInt32 GetBusPowerAvailable(void) __attribute__((deprecated));\n  844  \n  845:     // virtual IOReturn DeviceRequest(IOUSBDevRequest* request,\n  846      //                                IOUSBCompletion* completion = 0) __attribute__((deprecated));\n  847:     // virtual IOReturn DeviceRequest(IOUSBDevRequestDesc* request,\n  848      //                                IOUSBCompletion*     completion = 0) __attribute__((deprecated));\n  849:     // virtual IOReturn DeviceRequest(IOUSBDevRequest* request,\n  850      //                                UInt32           noDataTimeout,\n  851      //                                UInt32           completionTimeout,\n  852      //                                IOUSBCompletion* completion = 0) __attribute__((deprecated));\n  853:     // virtual IOReturn DeviceRequest(IOUSBDevRequestDesc* request,\n  854      //                                UInt32               noDataTimeout,\n  855      //                                UInt32               completionTimeout,\n  ...\n  861      // Replacment:\n  862      // uint8_t configNumber  = 0;\n  863:     // StandardUSB::DeviceRequest request;\n  864:     // request.bmRequestType = makeDeviceRequestbmRequestType(kRequestDirectionIn, kRequestTypeStandard, kRequestRecipientDevice);\n  865:     // request.bRequest      = kDeviceRequestGetConfiguration;\n  866      // request.wValue        = 0;\n  867      // request.wIndex        = 0;\n  ...\n  875      // Replacement:\n  876      // uint16_t status       = 0;\n  877:     // StandardUSB::DeviceRequest request;\n  878:     // request.bmRequestType = makeDeviceRequestbmRequestType(kRequestDirectionIn, kRequestTypeStandard, kRequestRecipientDevice);\n  879:     // request.bRequest      = kDeviceRequestGetStatus;\n  880      // request.wValue        = 0;\n  881      // request.wIndex        = 0;\n  ...\n  888      // virtual IOUSBHostPipe* GetPipeZero() __attribute__((deprecated));\n  889      // virtual IOUSBHostPipe* getPipeZero() __attribute__((deprecated));\n  890:     // Replacement: none.  Use deviceRequest(...) and abortDeviceRequests(...) interfaces to interact with the default endpoint\n  891  \n  892      // virtual IOReturn GetStringDescriptor(UInt8 index, char* buf, int maxLen, UInt16 lang = 0x409) __attribute__((deprecated));\n\n/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/IOKit/usb/IOUSBHostFamily.h:\n   41  typedef enum tEndpointType tEndpointType;\n   42  \n   43: enum tDeviceRequestDirection\n   44  {\n   45:     kRequestDirectionOut            = (kDeviceRequestDirectionOut >> kDeviceRequestDirectionPhase),\n   46:     kRequestDirectionIn             = (kDeviceRequestDirectionIn >> kDeviceRequestDirectionPhase)\n   47  };\n   48  \n   49: typedef enum tDeviceRequestDirection tDeviceRequestDirection;\n   50  \n   51: enum tDeviceRequestType\n   52  {\n   53:     kRequestTypeStandard            = (kDeviceRequestTypeStandard >> kDeviceRequestTypePhase),\n   54:     kRequestTypeClass               = (kDeviceRequestTypeClass >> kDeviceRequestTypePhase),\n   55:     kRequestTypeVendor              = (kDeviceRequestTypeVendor >> kDeviceRequestTypePhase)\n   56  };\n   57  \n   58: typedef enum tDeviceRequestType tDeviceRequestType;\n   59  \n   60: enum tDeviceRequestRecipient\n   61  {\n   62:     kRequestRecipientDevice         = (kDeviceRequestRecipientDevice >> kDeviceRequestRecipientPhase),\n   63:     kRequestRecipientInterface      = (kDeviceRequestRecipientInterface >> kDeviceRequestRecipientPhase),\n   64:     kRequestRecipientEndpoint       = (kDeviceRequestRecipientEndpoint >> kDeviceRequestRecipientPhase),\n   65:     kRequestRecipientOther          = (kDeviceRequestRecipientOther >> kDeviceRequestRecipientPhase)\n   66  };\n   67  \n   68: typedef enum tDeviceRequestRecipient tDeviceRequestRecipient;\n   69  \n   70: inline uint8_t makeDeviceRequestbmRequestType(tDeviceRequestDirection direction, tDeviceRequestType type, tDeviceRequestRecipient recipient)\n   71  {\n   72:     return   ((direction << kDeviceRequestDirectionPhase) & kDeviceRequestDirectionMask)\n   73:             | ((type << kDeviceRequestTypePhase) & kDeviceRequestTypeMask)\n   74:             | ((recipient << kDeviceRequestRecipientPhase) & kDeviceRequestRecipientMask);\n   75  }\n   76  \n\n/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/IOKit/usb/IOUSBHostInterface.h:\n  253       * The following request types are reserved and cannot be made as generic control requests, the appropriate API call should be used instead.\n  254       *\n  255:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientDevice), kDeviceRequestSetAddress Ñ reserved, this request cannot be sent by drivers.\n  256:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientDevice), kDeviceRequestSetConfiguration Ñ see setConfiguration().\n  257:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientInterface), kDeviceRequestSetInterface Ñ see IOUSBHostInterface::selectAlternateSetting().\n  258       *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientEndpoint), kRequestRecipientEndpoint Ñ see IOUSBHostPipe::clearStall().\n  259       *\n  ...\n  261       * </pre>\n  262       *\n  263:      * @param request Reference to a valid StandardUSB::DeviceRequest object.  This will be copied and can therefore be stack-allocated.\n  264       *\n  265       * @param dataBuffer Pointer to the memory to be used for the I/O.\n  ...\n  271       * @return IOReturn result code\n  272       */\n  273:     virtual IOReturn deviceRequest(StandardUSB::DeviceRequest& request, void* dataBuffer, IOUSBHostCompletion* completion, uint32_t completionTimeoutMs = kUSBHostDefaultControlCompletionTimeoutMS);\n  274      \n  275      /*!\n  ...\n  282       * The following request types are reserved and cannot be made as generic control requests, the appropriate API call should be used instead.\n  283       *\n  284:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientDevice), kDeviceRequestSetAddress Ñ reserved, this request cannot be sent by drivers.\n  285:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientDevice), kDeviceRequestSetConfiguration Ñ see setConfiguration().\n  286:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientInterface), kDeviceRequestSetInterface Ñ see IOUSBHostInterface::selectAlternateSetting().\n  287       *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientEndpoint), kRequestRecipientEndpoint Ñ see IOUSBHostPipe::clearStall().\n  288       *\n  ...\n  290       * </pre>\n  291       *\n  292:      * @param request Reference to a valid StandardUSB::DeviceRequest object.  This will be copied and can therefore be stack-allocated.\n  293       *\n  294       * @param dataBuffer Pointer to an IOMemoryDescriptor for the memory to be used for the I/O.\n  ...\n  300       * @return IOReturn result code\n  301       */\n  302:     virtual IOReturn deviceRequest(StandardUSB::DeviceRequest& request, IOMemoryDescriptor* dataBuffer, IOUSBHostCompletion* completion, uint32_t completionTimeoutMs = kUSBHostDefaultControlCompletionTimeoutMS);\n  303      \n  304      /*!\n  ...\n  309       * The following request types are reserved and cannot be made as generic control requests, the appropriate API call should be used instead.\n  310       *\n  311:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientDevice), kDeviceRequestSetAddress Ñ reserved, this request cannot be sent by drivers.\n  312:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientDevice), kDeviceRequestSetConfiguration Ñ see setConfiguration().\n  313:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientInterface), kDeviceRequestSetInterface Ñ see IOUSBHostInterface::selectAlternateSetting().\n  314       *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientEndpoint), kRequestRecipientEndpoint Ñ see IOUSBHostPipe::clearStall().\n  315       *\n  ...\n  317       * </pre>\n  318       *\n  319:      * @param request Reference to a valid StandardUSB::DeviceRequest object.  This will be copied and can therefore be stack-allocated.\n  320       *\n  321       * @param dataBuffer Pointer to the memory to be used for the I/O.\n  ...\n  327       * @return IOReturn result code\n  328       */\n  329:     virtual IOReturn deviceRequest(StandardUSB::DeviceRequest& request, void* dataBuffer, uint32_t& bytesTransferred, uint32_t completionTimeoutMs = kUSBHostDefaultControlCompletionTimeoutMS);\n  330      \n  331      /*!\n  ...\n  336       * The following request types are reserved and cannot be made as generic control requests, the appropriate API call should be used instead.\n  337       *\n  338:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientDevice), kDeviceRequestSetAddress Ñ reserved, this request cannot be sent by drivers.\n  339:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientDevice), kDeviceRequestSetConfiguration Ñ see setConfiguration().\n  340:      *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientInterface), kDeviceRequestSetInterface Ñ see IOUSBHostInterface::selectAlternateSetting().\n  341       *    (kRequestDirectionOut, kRequestTypeStandard, kRequestRecipientEndpoint), kRequestRecipientEndpoint Ñ see IOUSBHostPipe::clearStall().\n  342       *\n  ...\n  344       * </pre>\n  345       *\n  346:      * @param request Reference to a valid StandardUSB::DeviceRequest object.  This will be copied and can therefore be stack-allocated.\n  347       *\n  348       * @param dataBuffer Pointer to an IOMemoryDescriptor for the memory to be used for the I/O.\n  ...\n  354       * @return IOReturn result code\n  355       */\n  356:     virtual IOReturn deviceRequest(StandardUSB::DeviceRequest& request, IOMemoryDescriptor* dataBuffer, uint32_t& bytesTransferred, uint32_t completionTimeoutMs = kUSBHostDefaultControlCompletionTimeoutMS);\n  357      \n  358      /*!\n  ...\n  368       * @return IOReturn result code\n  369       */\n  370:     IOReturn abortDeviceRequests(IOOptionBits options = IOUSBHostIOSource::kAbortAsynchronous, IOReturn withError = kIOReturnAborted);\n  371      \n  372      // Public pad slots for alternate setting and pipe management\n  ...\n  537      // Replacement: getInterfaceDescriptor\n  538  \n  539:     // virtual IOReturn DeviceRequest(IOUSBDevRequest* request, IOUSBCompletion* completion = 0) __attribute__((deprecated));\n  540:     // virtual IOReturn DeviceRequest(IOUSBDevRequestDesc* request, IOUSBCompletion* completion = 0) __attribute__((deprecated));\n  541      // Replacement: deviceRequest\n  542  \n\n/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/IOKit/usb/IOUSBHostPipe.h:\n  245       * uint8_t                    dataBuffer[4];\n  246       * IOReturn                   result;\n  247:      * StandardUSB::DeviceRequest request;\n  248       * IOUSBHostCompletion        completion;\n  249       *\n  250:      * request.bmRequestType = makeDeviceRequestbmRequestType(kRequestDirectionIn, kRequestTypeClass, kRequestRecipientInterface);\n  251       * request.bRequest      = 0x12;\n  252       * request.wValue        = 0x3456;\n  ...\n  274       * @param forClient The object issuing the request (generally the <code>this</code> pointer).\n  275       *\n  276:      * @param request Reference to a valid StandardUSB::DeviceRequest object.  This will be copied and can therefore be stack-allocated.\n  277       *\n  278       * @param dataBuffer Pointer to the memory to be used for the I/O.\n  ...\n  284       * @return IOReturn result code\n  285       */\n  286:     virtual IOReturn controlRequest(IOService* forClient, StandardUSB::DeviceRequest& request, void* dataBuffer, IOUSBHostCompletion* completion, uint32_t completionTimeoutMs);\n  287      \n  288      /*!\n  ...\n  290       *\n  291       * @discussion This method will issue an asynchronous control request on the pipe.  This method differs from\n  292:      * @link //apple_ref/cpp/instm/IOUSBHostPipe/controlRequest/IOReturn/(IOService*,StandardUSB::DeviceRequest%26,void*,IOUSBHostCompletion*,uint32_t) @/link\n  293       * in that it takes an IOMemoryDescriptor instead of a void * for <code>dataBuffer</code>.\n  294       *\n  295       * @param forClient The object issuing the request (generally the <code>this</code> pointer).\n  296       *\n  297:      * @param request Reference to a valid StandardUSB::DeviceRequest object.  This will be copied and can therefore be stack-allocated.\n  298       *\n  299       * @param dataBuffer Pointer to an IOMemoryDescriptor for the memory to be used for the I/O.\n  ...\n  305       * @return IOReturn result code\n  306       */\n  307:     virtual IOReturn controlRequest(IOService* forClient, StandardUSB::DeviceRequest& request, IOMemoryDescriptor* dataBuffer, IOUSBHostCompletion* completion, uint32_t completionTimeoutMs);\n  308      \n  309      /*!\n  ...\n  317       * uint32_t                   bytesTransferred;\n  318       * IOReturn                   result;\n  319:      * StandardUSB::DeviceRequest request;\n  320       *\n  321:      * request.bmRequestType = makeDeviceRequestbmRequestType(kRequestDirectionIn, kRequestTypeClass, kRequestRecipientInterface);\n  322       * request.bRequest      = 0x12;\n  323       * request.wValue        = 0x3456;\n  ...\n  335       * @param forClient The object issuing the request (generally the <code>this</code> pointer).\n  336       *\n  337:      * @param request Reference to a valid StandardUSB::DeviceRequest object.  This will be copied and can therefore be stack-allocated.\n  338       *\n  339       * @param dataBuffer Pointer to the memory to be used for the I/O.\n  ...\n  345       * @return IOReturn result code\n  346       */\n  347:     virtual IOReturn controlRequest(IOService* forClient, StandardUSB::DeviceRequest& request, void* dataBuffer, uint32_t& bytesTransferred, uint32_t completionTimeoutMs);\n  348      \n  349      /*!\n  ...\n  351       *\n  352       * @discussion This method will issue a synchronous control request on the pipe.  This method differs from\n  353:      * @link //apple_ref/cpp/instm/IOUSBHostPipe/controlRequest/IOReturn/(IOService*,StandardUSB::DeviceRequest%26,void*,uint32_t%26,uint32_t) @/link\n  354       * in that it takes an IOMemoryDescriptor instead of a void * for <code>dataBuffer</code>.\n  355       *\n  356       * @param forClient The object issuing the request (generally the <code>this</code> pointer).\n  357       *\n  358:      * @param request Reference to a valid StandardUSB::DeviceRequest object.  This will be copied and can therefore be stack-allocated.\n  359       *\n  360       * @param dataBuffer Pointer to an IOMemoryDescriptor for the memory to be used for the I/O.\n  ...\n  366       * @return IOReturn result code\n  367       */\n  368:     virtual IOReturn controlRequest(IOService* forClient, StandardUSB::DeviceRequest& request, IOMemoryDescriptor* dataBuffer, uint32_t& bytesTransferred, uint32_t completionTimeoutMs);\n  369  \n  370      // Public pad slots for control requests\n  ...\n  384      {\n  385          IOService*                  forClient;\n  386:         StandardUSB::DeviceRequest* request;\n  387          void*                       rawBuffer;\n  388          IOMemoryDescriptor*         descriptorBuffer;\n  ...\n  632      // Replacement: clearStall(false)\n  633  \n  634:     // virtual IOReturn ClearPipeStall(bool withDeviceRequest = false) __attribute__((deprecated));\n  635      // Replacement: clearStall\n  636  \n\n/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/IOKit/usb/IOUSBMassStorageClass.h:\n  151      IOUSBPipe *					fInterruptPipe;\n  152      \n  153: 	IOUSBDevRequest				fUSBDeviceRequest;\n  154  	UInt8						fPreferredSubclass;\n  155  	UInt8						fPreferredProtocol;\n\n/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/IOKit/usb/IOUSBUserClient.h:\n   32      kUSBDeviceUserClientGetConfigDescriptor,\n   33      kUSBDeviceUserClientGetFrameNumber,\n   34:     kUSBDeviceUserClientDeviceRequestOut,\n   35:     kUSBDeviceUserClientDeviceRequestIn,\n   36      kUSBDeviceUserClientCreateInterfaceIterator,\n   37      kUSBDeviceUserClientResetDevice,\n   ..\n  222      bool            _authorized;\n  223      bool            _privileged;\n  224:     uint64_t        _pivilegedDeviceRequests[kMaxExtendedDataEntriesSupported];\n  225      uint32_t		_numPrivilegedRequests;\n  226      \n\n/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/IOKit/usb/StandardUSB.h:\n  573  #pragma mark Device requests\n  574      // USB 2.0 9.3: USB Device Requests\n  575:     struct DeviceRequest\n  576      {\n  577          uint8_t     bmRequestType;\n  ...\n  582      } __attribute__((packed));\n  583          \n  584:     typedef struct DeviceRequest DeviceRequest;\n  585      \n  586      enum\n  587      {\n  588:         kDeviceRequestSize              = 8,\n  589:         kDeviceRequestDirectionMask     = StandardUSBBit(7),\n  590:         kDeviceRequestDirectionPhase    = StandardUSBBitRangePhase(7, 7),\n  591:         kDeviceRequestDirectionOut      = (0 << kDeviceRequestDirectionPhase),\n  592:         kDeviceRequestDirectionIn       = (1 << kDeviceRequestDirectionPhase),\n  593:         kDeviceRequestTypeMask          = StandardUSBBitRange(5, 6),\n  594:         kDeviceRequestTypePhase         = StandardUSBBitRangePhase(5, 6),\n  595:         kDeviceRequestTypeStandard      = (0 << kDeviceRequestTypePhase),\n  596:         kDeviceRequestTypeClass         = (1 << kDeviceRequestTypePhase),\n  597:         kDeviceRequestTypeVendor        = (2 << kDeviceRequestTypePhase),\n  598:         kDeviceRequestRecipientMask     = StandardUSBBitRange(0, 4),\n  599:         kDeviceRequestRecipientPhase    = StandardUSBBitRangePhase(0, 4),\n  600:         kDeviceRequestRecipientDevice   = (0 << kDeviceRequestRecipientPhase),\n  601:         kDeviceRequestRecipientInterface= (1 << kDeviceRequestRecipientPhase),\n  602:         kDeviceRequestRecipientEndpoint = (2 << kDeviceRequestRecipientPhase),\n  603:         kDeviceRequestRecipientOther    = (3 << kDeviceRequestRecipientPhase),\n  604      };\n  605      \n  ...\n  608      enum\n  609      {\n  610:         kDeviceRequestGetStatus             = 0,\n  611:         kDeviceRequestClearFeature          = 1,\n  612:         kDeviceRequestGetState              = 2,\n  613:         kDeviceRequestSetFeature            = 3,\n  614:         kDeviceRequestSetAddress            = 5,\n  615:         kDeviceRequestGetDescriptor         = 6,\n  616:         kDeviceRequestSetDescriptor         = 7,\n  617:         kDeviceRequestGetConfiguration      = 8,\n  618:         kDeviceRequestSetConfiguration      = 9,\n  619:         kDeviceRequestGetInterface          = 10,\n  620:         kDeviceRequestSetInterface          = 11,\n  621:         kDeviceRequestSynchFrame            = 12,\n  622:         kDeviceRequestSetSel                = 48,\n  623:         kDeviceRequestSetIsochronousDelay   = 49\n  624      };\n  625      \n\n/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/IOKit/usb/USB.h:\n  939      UInt32      wLenDone;\n  940  } IOUSBDevRequest;\n  941: typedef IOUSBDevRequest * IOUSBDeviceRequestPtr;\n  942  \n  943  /*!\n\n166 matches across 8 files\n",
					"settings":
					{
						"buffer_size": 29215,
						"line_ending": "Unix",
						"name": "Find Results",
						"scratch": true
					}
				},
				{
					"file": "/Volumes/5T/ServiceData/xdev/xcode-gcc/README.md",
					"settings":
					{
						"buffer_size": 480,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 189.0,
				"last_filter": "focu",
				"selected_items":
				[
					[
						"focu",
						"Focus File on Sidebar"
					],
					[
						"sshc",
						"Set Syntax: SSH Config"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"path",
						"File: Copy Path"
					],
					[
						"c++",
						"Set Syntax: C++"
					],
					[
						"pat",
						"File: Copy Path"
					],
					[
						"move",
						"File: Move"
					],
					[
						"copy",
						"File: Copy Path"
					],
					[
						"focus",
						"Focus File on Sidebar"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"psth",
						"Permute Lines: Shuffle"
					],
					[
						"make",
						"Set Syntax: Makefile"
					],
					[
						"makef",
						"Set Syntax: Makefile"
					],
					[
						"refre",
						"Side Bar: Refresh"
					],
					[
						"refr",
						"Side Bar: Refresh"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"syc+",
						"Set Syntax: C++"
					],
					[
						"",
						"Copy File Path"
					],
					[
						"focud",
						"Focus File on Sidebar"
					],
					[
						"syn",
						"Set Syntax: C++"
					],
					[
						"sublime",
						"Colorsublime: Install Theme"
					],
					[
						"foc",
						"Focus File on Sidebar"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"cop",
						"Copy File Path"
					],
					[
						"ref",
						"Side Bar: Refresh"
					],
					[
						"color",
						"Colorsublime: Install Theme"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"read",
						"ReadmePlease"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"package",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"instl",
						"Package Control: Install Package"
					]
				],
				"width": 449.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers"
			],
			"file_history":
			[
				"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/IOKit/usb/IOUSBHostDevice.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/rsub/rsub.sublime-settings",
				"/sketch/libraries/ADC/doxygen/html/search/typedefs_73.html",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/sketch/libraries/Alexduino/src/Alexduino.cpp",
				"/sketch/libraries.off/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/Pin.h",
				"/sketch/libraries/Pin/src/Pin.cpp",
				"/sketch/libraries/OneButton/OneButton.cpp",
				"/sketch/libraries/OneButton/OneButton.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
				"/Volumes/5T/_dl/ShiftRegister.h",
				"/sketch/libraries/Talkie/talkie.cpp",
				"/sketch/libraries/Talkie/README.md",
				"/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/Arduino.h",
				"/sketch/libraries/Alexduino/src/Alexduino.h",
				"/sketch/My7Seg/My7Seg.ino",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.h",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.cpp",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
				"/sketch/libraries/SevenSegment/SevenSegment.h",
				"/sketch/libraries/SevenSegment/SevenSegment.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/My7Seg/My7Seg.ino",
				"/sketch/libraries/ICs/4511.h",
				"/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
				"/sketch/libraries/ICs/4511.cpp",
				"/sketch/libraries.off/BCDTo7Seg/examples/b4511_counter/b4511_counter.ino",
				"/sketch/libraries/BCDTo7Seg.virgin/BCDTo7Seg.h",
				"/sketch/libraries/Talkie/examples/_2_Voltmeter/_2_Voltmeter.ino",
				"/sketch/libraries/Talkie/talkie.h",
				"/sketch/libraries/Potentiometer/Potentiometer.h",
				"/sketch/libraries/Potentiometer/Potentiometer.cpp",
				"/sketch/libraries/ansiterm/readme.md",
				"/sketch/libraries/AsyncDelay/src/AsyncDelay.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/WString.h",
				"/sketch/libraries.off/ArduinoJson/third-party/gtest-1.7.0/xcode/Config/FrameworkTarget.xcconfig",
				"/sketch/hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBoldOblique12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBold12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp",
				"/sketch/libraries/LED/LED.cpp",
				"/sketch/libraries/Color/Color.h",
				"/sketch/libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h",
				"/sketch/libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/LUFA/Drivers/Board/Board.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII/makefile",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/AlexAVR/avr/programmers.txt",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.no.h",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.h",
				"/sketch/hardware/AlexAVR/avr/platform.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/SimpleThrottle/SimpleThrottle.ino",
				"/sketch/libraries/Handler/Handler.cpp",
				"/sketch/libraries/Handler/examples/CanYouHandleIt/CanYouHandleIt.ino",
				"/sketch/libraries/Handler/Handler.h",
				"/sketch/libraries/LED/LED.h",
				"/sketch/libraries/Throttle/examples/GoGoGoTiny/GoGoGoTiny.ino",
				"/sketch/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/libraries/Throttle/Throttle.cpp",
				"/sketch/libraries/GPIO/src/PinGroup.h",
				"/sketch/libraries/TimerLib/PinEffector.h",
				"/sketch/libraries/TimerLib/utility/FastDelegate.h",
				"/sketch/LEDme/LED.h",
				"/sketch/libraries/Segment7/Segment7.pdf",
				"/sketch/libraries/StackArray/StackArray.h",
				"/sketch/hardware/AlexAVR/avr/boards.txt",
				"/sketch/libraries/TimerLib/SimpleTimer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/LED/library.properties",
				"/sketch/pinguino.bootloader.c",
				"/sketch/hardware/avr-openhardware/avr/avrdude.conf",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.cpp",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.h",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.cpp",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.h",
				"/sketch/hardware/Cosa/avr/platform.txt",
				"/sketch/hardware/Cosa/avr/sub-modules",
				"/sketch/libraries/Adafruit_GFX_Library/gfxfont.h",
				"/sketch/libraries/Pin/src/boards/attinyX5.h",
				"/sketch/ACS712/xACS712/xACS712/Configurations/Adafruit Trinket 5V-16MHz.xcconfig",
				"/sketch/hardware/AlexAVR/avr/programmers.txt",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/sketch/libraries/GPIO/src/GPIO.h",
				"/sketch/libraries/Pin/library.properties",
				"/sketch/libraries/Pin/src/boards/others.h",
				"/sketch/libraries/GPIO/library.properties",
				"/sketch/libraries/GPIO/src/GPIO.cpp",
				"/sketch/hardware/google-tiny/avr/cores/tiny/WProgram.h",
				"/sketch/Classy/.pioenvs/nodemcu/FrameworkArduino/Arduino.h",
				"/sketch/hardware/google-tiny/avr/cores/tiny/Arduino.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/neomatrix-serial-input/neomatrixserial/neomatrixserial.ino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/breadboard/avr/boards.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/FastLED/FastLED.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Chrono/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Delegate.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/WiringFrameworkDependencies.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Interrupts.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Timer.h",
				"/opt/smi8ng",
				"/opt/sping",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/examples/GoGoGo/GoGoGo.ino",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.cpp",
				"/Users/localadmin/.macosz/modules/alex/functions/gzipit",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Periodic/Periodic.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/UdpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/TcpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/DriverPWM.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/LICENSE",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Makefile-rboot.mk",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/.travis.yml",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/samples/Basic_Runloop/app/application.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/SmingCore.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Switch File Deluxe/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Timer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Delegate.h"
			],
			"find":
			{
				"height": 33.0
			},
			"find_in_files":
			{
				"height": 96.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"DeviceRequest",
					"tty",
					"runtime",
					"runtim",
					"byte",
					"open",
					"UInt",
					"UInt ",
					"UInt",
					"inha",
					"unsigned int8_t",
					"UInt",
					"smile_bmp",
					"UInt",
					"my_4511",
					"on",
					",",
					"my_4511",
					"IC_4511",
					"&sp",
					"const uint8_t \\*(.*)\\s*PROGMEM",
					"const uint8_t (.*)\\[\\]",
					"(sp",
					"uint8_t s",
					";\nuint8_t ",
					"7129",
					"Button 2",
					"analog",
					"ANALOg_MAX",
					"PWM",
					"speed",
					"button2",
					"button",
					"button2",
					"button1",
					"0x.., \\/\\* (.).*",
					"0x5B, /* 2 */",
					"*/\n",
					"0x.., \\/\\* (.).*",
					"0x7C, /* b */",
					"cursor",
					"setTextColor",
					"expi",
					"handl",
					"test",
					"begin",
					"matrix.",
					"matr",
					"());",
					"fillScreen",
					"Adafruit_NeoMatrix",
					"avrdude",
					"USBKEY",
					"BOARD",
					"digital_pin_to_bit_mask_PGM",
					"m1284p",
					"uni",
					"m1284p",
					"ing",
					"PULSE",
					"LEDClass",
					"enum",
					"#",
					"0x05",
					"0x054",
					"0x06",
					"1284",
					"05",
					"sig",
					"__cxa_pure_virtual",
					"__AVR_ATTiny",
					"__AVR_ATmega32U4__",
					"recipe.preproc.macros",
					"__cxa_pure_virtual",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"pioenvs/",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"GFX",
					"pure",
					"effe",
					"toggle\\(",
					"on\\(\\)",
					"on()",
					"on",
					"off",
					"#define.*PWM.*\\w[0-9]*",
					"#define.*ANALOG.*\\w[0-9]*",
					"#define.*255",
					"#define.*ANALOG.*255",
					"#define.*PWM.*255",
					"#define.*PWM.*",
					"PWM_RANGE",
					"PWM",
					"REGD",
					"DEF_",
					"DEF_THR",
					"FAST",
					"                           ",
					"FAST",
					"PWM",
					"sap",
					"line",
					"move",
					"up\"",
					"time",
					"className",
					"rightn",
					"Print",
					"print",
					"DEB",
					"\nDEBO",
					"DEBO",
					"\nDEBO",
					"DEBO",
					"rest",
					"define.*\\sON\\s",
					"rest",
					"digitalWrite",
					"define.*\\sON\\s",
					"define.*\\sON",
					"define.*ON",
					"\\bD5\\b",
					"D5",
					"ws",
					"isdi",
					"ud"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
					"uint8_t",
					"unsigned int",
					"int8_t",
					"unsigned int",
					"sp",
					"const PROGMEM uint8_t $1[]",
					"const uint8_t * $1",
					"(&sp",
					"const uint8_t s",
					",\n              ",
					"Button 2 (gas)",
					"brake",
					"gas",
					"\"$1\",",
					"",
					"LED"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers"
				}
			],
			"groups":
			[
				{
					"selected": 1,
					"sheets":
					[
						{
							"buffer": 0,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 29215,
								"regions":
								{
									"match":
									{
										"flags": 112,
										"regions":
										[
											[
												362,
												375
											],
											[
												483,
												496
											],
											[
												871,
												884
											],
											[
												990,
												1003
											],
											[
												1269,
												1282
											],
											[
												1321,
												1334
											],
											[
												1790,
												1803
											],
											[
												1956,
												1969
											],
											[
												2105,
												2118
											],
											[
												2538,
												2551
											],
											[
												2852,
												2865
											],
											[
												3286,
												3299
											],
											[
												3452,
												3465
											],
											[
												3601,
												3614
											],
											[
												4034,
												4047
											],
											[
												4374,
												4387
											],
											[
												4826,
												4839
											],
											[
												4992,
												5005
											],
											[
												5141,
												5154
											],
											[
												5574,
												5587
											],
											[
												5888,
												5901
											],
											[
												6317,
												6330
											],
											[
												6483,
												6496
											],
											[
												6632,
												6645
											],
											[
												7065,
												7078
											],
											[
												7405,
												7418
											],
											[
												7684,
												7697
											],
											[
												8244,
												8257
											],
											[
												8585,
												8598
											],
											[
												8634,
												8647
											],
											[
												9003,
												9016
											],
											[
												9126,
												9139
											],
											[
												9437,
												9450
											],
											[
												9615,
												9628
											],
											[
												9801,
												9814
											],
											[
												10137,
												10150
											],
											[
												10447,
												10460
											],
											[
												10512,
												10525
											],
											[
												10647,
												10660
											],
											[
												10861,
												10874
											],
											[
												10926,
												10939
											],
											[
												11061,
												11074
											],
											[
												11399,
												11412
											],
											[
												11859,
												11872
											],
											[
												11938,
												11951
											],
											[
												11968,
												11981
											],
											[
												12045,
												12058
											],
											[
												12074,
												12087
											],
											[
												12142,
												12155
											],
											[
												12166,
												12179
											],
											[
												12211,
												12224
											],
											[
												12285,
												12298
											],
											[
												12315,
												12328
											],
											[
												12387,
												12400
											],
											[
												12414,
												12427
											],
											[
												12486,
												12499
											],
											[
												12514,
												12527
											],
											[
												12577,
												12590
											],
											[
												12596,
												12609
											],
											[
												12636,
												12649
											],
											[
												12715,
												12728
											],
											[
												12748,
												12761
											],
											[
												12825,
												12838
											],
											[
												12861,
												12874
											],
											[
												12938,
												12951
											],
											[
												12973,
												12986
											],
											[
												13050,
												13063
											],
											[
												13082,
												13095
											],
											[
												13150,
												13163
											],
											[
												13174,
												13187
											],
											[
												13232,
												13245
											],
											[
												13260,
												13273
											],
											[
												13295,
												13308
											],
											[
												13320,
												13333
											],
											[
												13399,
												13412
											],
											[
												13431,
												13444
											],
											[
												13491,
												13504
											],
											[
												13518,
												13531
											],
											[
												13578,
												13591
											],
											[
												13610,
												13623
											],
											[
												14106,
												14119
											],
											[
												14272,
												14285
											],
											[
												14421,
												14434
											],
											[
												14770,
												14783
											],
											[
												15062,
												15075
											],
											[
												15500,
												15513
											],
											[
												15666,
												15679
											],
											[
												15815,
												15828
											],
											[
												16164,
												16177
											],
											[
												16482,
												16495
											],
											[
												16934,
												16947
											],
											[
												17100,
												17113
											],
											[
												17249,
												17262
											],
											[
												17598,
												17611
											],
											[
												17890,
												17903
											],
											[
												18323,
												18336
											],
											[
												18489,
												18502
											],
											[
												18638,
												18651
											],
											[
												18987,
												19000
											],
											[
												19305,
												19318
											],
											[
												19580,
												19593
											],
											[
												19877,
												19890
											],
											[
												20010,
												20023
											],
											[
												20471,
												20484
											],
											[
												20603,
												20616
											],
											[
												20977,
												20990
											],
											[
												21292,
												21305
											],
											[
												21670,
												21683
											],
											[
												22029,
												22042
											],
											[
												22370,
												22383
											],
											[
												22658,
												22671
											],
											[
												22737,
												22750
											],
											[
												23111,
												23124
											],
											[
												23426,
												23439
											],
											[
												23797,
												23810
											],
											[
												24147,
												24160
											],
											[
												24488,
												24501
											],
											[
												24764,
												24777
											],
											[
												25017,
												25030
											],
											[
												25399,
												25412
											],
											[
												25814,
												25827
											],
											[
												25863,
												25876
											],
											[
												26103,
												26116
											],
											[
												26499,
												26512
											],
											[
												26654,
												26667
											],
											[
												26668,
												26681
											],
											[
												26740,
												26753
											],
											[
												26792,
												26805
											],
											[
												26860,
												26873
											],
											[
												26941,
												26954
											],
											[
												26981,
												26994
											],
											[
												27027,
												27040
											],
											[
												27067,
												27080
											],
											[
												27113,
												27126
											],
											[
												27189,
												27202
											],
											[
												27270,
												27283
											],
											[
												27310,
												27323
											],
											[
												27351,
												27364
											],
											[
												27391,
												27404
											],
											[
												27432,
												27445
											],
											[
												27472,
												27485
											],
											[
												27513,
												27526
											],
											[
												27589,
												27602
											],
											[
												27670,
												27683
											],
											[
												27710,
												27723
											],
											[
												27756,
												27769
											],
											[
												27796,
												27809
											],
											[
												27842,
												27855
											],
											[
												27882,
												27895
											],
											[
												27928,
												27941
											],
											[
												27968,
												27981
											],
											[
												28075,
												28088
											],
											[
												28131,
												28144
											],
											[
												28187,
												28200
											],
											[
												28243,
												28256
											],
											[
												28299,
												28312
											],
											[
												28355,
												28368
											],
											[
												28411,
												28424
											],
											[
												28467,
												28480
											],
											[
												28523,
												28536
											],
											[
												28579,
												28592
											],
											[
												28636,
												28649
											],
											[
												28693,
												28706
											],
											[
												28750,
												28763
											],
											[
												28807,
												28820
											],
											[
												29150,
												29163
											]
										],
										"scope": ""
									}
								},
								"selection":
								[
									[
										14688,
										14688
									]
								],
								"settings":
								{
									"default_dir": "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers",
									"detect_indentation": false,
									"line_numbers": false,
									"output_tag": 1,
									"result_base_dir": "",
									"result_file_regex": "^([^ 	].*):$",
									"result_line_regex": "^ +([0-9]+):",
									"scroll_past_end": true,
									"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 3989.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/Volumes/5T/ServiceData/xdev/xcode-gcc/README.md",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 480,
								"regions":
								{
								},
								"selection":
								[
									[
										358,
										358
									]
								],
								"settings":
								{
									"syntax": "Packages/Markdown/Markdown.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 33.0
			},
			"input":
			{
				"height": 36.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1360 741 0 0 1360 745 ",
			"project": "",
			"replace":
			{
				"height": 62.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"my",
						"My7Seg/My7Seg.ino"
					],
					[
						"my7",
						"libraries/ADC/doxygen/html/search/typedefs_73.html"
					],
					[
						"orig",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"4511",
						"libraries/ICs/4511.h"
					],
					[
						"my7se",
						"My7Seg/My7Seg.ino"
					],
					[
						"matrixt",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"cancom",
						"libraries/Alexduino/examples/CanCompile/CanCompile.ino"
					],
					[
						"led",
						"libraries/LED/LED.h"
					],
					[
						"sim",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"simpl",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"mys",
						"My7Seg/My7Seg.ino"
					],
					[
						"aledxdu",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"async",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"matrixtest",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde"
					],
					[
						"alexdui",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"wstrin",
						"hardware/AlexAVR/avr/cores/arduino/WString.h"
					],
					[
						"gfx",
						"libraries/Adafruit_GFX_Library/Adafruit_GFX.h"
					],
					[
						"gfxc",
						"hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h"
					],
					[
						"color",
						"libraries/Color/Color.h"
					],
					[
						"matri",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"pixel",
						"libraries/NeoPixelBus_by_Makuna/src/NeoPixelAnimator.h"
					],
					[
						"adaf",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"asyn",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"neopix",
						"libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h"
					],
					[
						"matrix",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"alexd",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"pingro",
						"libraries/GPIO/src/PinGroup.h"
					],
					[
						"pin",
						"libraries/Pin/src/Pin.h"
					],
					[
						"",
						"libraries/LED/LED.h"
					],
					[
						"stack",
						"libraries/StackArray/StackArray.h"
					],
					[
						"stackarray",
						"libraries/StackArray/StackArray.h"
					],
					[
						"pin.h",
						"libraries/Pin/src/Pin.h"
					],
					[
						"asyncd",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"led.",
						"LEDme/LED.h"
					],
					[
						"wpro",
						"hardware/google-tiny/avr/cores/tiny/WProgram.h"
					],
					[
						"arduino.h",
						"hardware/google-tiny/avr/cores/tiny/Arduino.h"
					],
					[
						"gogo",
						"Throttle/examples/GoGoGo/GoGoGo.ino"
					],
					[
						"throttl",
						"Throttle/Throttle.cpp"
					],
					[
						"throttle2016",
						"Throttle2016.h"
					],
					[
						"throttle",
						"Throttle2016.h"
					],
					[
						"dele",
						"Sming/SmingCore/Delegate.h"
					],
					[
						"timer",
						"Sming/SmingCore/Timer.h"
					],
					[
						"smingco",
						"Sming/SmingCore/SmingCore.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 319.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 94,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ui",
						"uint16_t"
					],
					[
						"setOutput",
						"setOutputLow"
					],
					[
						"rand",
						"randVal"
					],
					[
						"PWM",
						"PWMRANGE"
					],
					[
						"_C",
						"_CLEAR_Pin"
					],
					[
						"_l",
						"_level"
					],
					[
						"ga",
						"gasLight"
					],
					[
						"off",
						"offset"
					],
					[
						"Color",
						"colorCycle"
					],
					[
						"uint",
						"uint16_t"
					],
					[
						"NMe",
						"Adafruit_NeoMatrix"
					],
					[
						"S",
						"StackArray"
					],
					[
						"POR",
						"PORT_HIGH"
					],
					[
						"set",
						"setHigh"
					],
					[
						"board",
						"boards"
					],
					[
						"e",
						"endif"
					],
					[
						"DEF",
						"DEF_PWM"
					],
					[
						"be",
						"begin"
					],
					[
						"pri",
						"private"
					],
					[
						"chara",
						"character"
					],
					[
						"DE",
						"DEF_MAX_OUT"
					],
					[
						"THROTTLE_V_M",
						"THROTTLE_V_MAX"
					],
					[
						"OTA",
						"OTA_IP"
					],
					[
						"Up",
						"UPDATE_PIN"
					],
					[
						"ini",
						"initializeUs"
					],
					[
						"uin",
						"uint8_t"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/Volumes/5T/ServiceData/xdev/xcode-gcc/GCC 5.2.xcplugin/Contents/version.plist",
					"settings":
					{
						"buffer_size": 456,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "/* Definitions for GNU multiple precision functions.   -*- mode: c -*-\n\nCopyright 1991, 1993, 1994, 1995, 1996, 1997, 1999, 2000, 2001, 2002,\n2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012 Free\nSoftware Foundation, Inc.\n\nThis file is part of the GNU MP Library.\n\nThe GNU MP Library is free software; you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation; either version 3 of the License, or (at your\noption) any later version.\n\nThe GNU MP Library is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\nor FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public\nLicense for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the GNU MP Library.  If not, see http://www.gnu.org/licenses/.  */\n\n#ifndef __GMP_H__\n\n#if defined (__cplusplus)\n#include <iosfwd>   /* for std::istream, std::ostream, std::string */\n#include <cstdio>\n#endif\n\n\n/* Instantiated by configure. */\n#if ! defined (__GMP_WITHIN_CONFIGURE)\n#define __GMP_HAVE_HOST_CPU_FAMILY_power   @HAVE_HOST_CPU_FAMILY_power@\n#define __GMP_HAVE_HOST_CPU_FAMILY_powerpc @HAVE_HOST_CPU_FAMILY_powerpc@\n#define GMP_LIMB_BITS                      @GMP_LIMB_BITS@\n#define GMP_NAIL_BITS                      @GMP_NAIL_BITS@\n#endif\n#define GMP_NUMB_BITS     (GMP_LIMB_BITS - GMP_NAIL_BITS)\n#define GMP_NUMB_MASK     ((~ __GMP_CAST (mp_limb_t, 0)) >> GMP_NAIL_BITS)\n#define GMP_NUMB_MAX      GMP_NUMB_MASK\n#define GMP_NAIL_MASK     (~ GMP_NUMB_MASK)\n\n\n/* The following (everything under ifndef __GNU_MP__) must be identical in\n   gmp.h and mp.h to allow both to be included in an application or during\n   the library build.  */\n#ifndef __GNU_MP__\n#define __GNU_MP__ 5\n\n// #define __need_size_t  /* tell gcc stddef.h we only want size_t */\n#if defined (__cplusplus)\n#include <cstddef>     /* for size_t */\n#else\n#include <stddef.h>    /* for size_t */\n#endif\n// #undef __need_size_t\n\n/* Instantiated by configure. */\n#if ! defined (__GMP_WITHIN_CONFIGURE)\n@DEFN_LONG_LONG_LIMB@\n#define __GMP_LIBGMP_DLL  @LIBGMP_DLL@\n#endif\n\n\n/* __GMP_DECLSPEC supports Windows DLL versions of libgmp, and is empty in\n   all other circumstances.\n\n   When compiling objects for libgmp, __GMP_DECLSPEC is an export directive,\n   or when compiling for an application it's an import directive.  The two\n   cases are differentiated by __GMP_WITHIN_GMP defined by the GMP Makefiles\n   (and not defined from an application).\n\n   __GMP_DECLSPEC_XX is similarly used for libgmpxx.  __GMP_WITHIN_GMPXX\n   indicates when building libgmpxx, and in that case libgmpxx functions are\n   exports, but libgmp functions which might get called are imports.\n\n   Libtool DLL_EXPORT define is not used.\n\n   There's no attempt to support GMP built both static and DLL.  Doing so\n   would mean applications would have to tell us which of the two is going\n   to be used when linking, and that seems very tedious and error prone if\n   using GMP by hand, and equally tedious from a package since autoconf and\n   automake don't give much help.\n\n   __GMP_DECLSPEC is required on all documented global functions and\n   variables, the various internals in gmp-impl.h etc can be left unadorned.\n   But internals used by the test programs or speed measuring programs\n   should have __GMP_DECLSPEC, and certainly constants or variables must\n   have it or the wrong address will be resolved.\n\n   In gcc __declspec can go at either the start or end of a prototype.\n\n   In Microsoft C __declspec must go at the start, or after the type like\n   void __declspec(...) *foo()\".  There's no __dllexport or anything to\n   guard against someone foolish #defining dllexport.  _export used to be\n   available, but no longer.\n\n   In Borland C _export still exists, but needs to go after the type, like\n   \"void _export foo();\".  Would have to change the __GMP_DECLSPEC syntax to\n   make use of that.  Probably more trouble than it's worth.  */\n\n#if defined (__GNUC__)\n#define __GMP_DECLSPEC_EXPORT  __declspec(__dllexport__)\n#define __GMP_DECLSPEC_IMPORT  __declspec(__dllimport__)\n#endif\n#if defined (_MSC_VER) || defined (__BORLANDC__)\n#define __GMP_DECLSPEC_EXPORT  __declspec(dllexport)\n#define __GMP_DECLSPEC_IMPORT  __declspec(dllimport)\n#endif\n#ifdef __WATCOMC__\n#define __GMP_DECLSPEC_EXPORT  __export\n#define __GMP_DECLSPEC_IMPORT  __import\n#endif\n#ifdef __IBMC__\n#define __GMP_DECLSPEC_EXPORT  _Export\n#define __GMP_DECLSPEC_IMPORT  _Import\n#endif\n\n#if __GMP_LIBGMP_DLL\n#ifdef __GMP_WITHIN_GMP\n/* compiling to go into a DLL libgmp */\n#define __GMP_DECLSPEC  __GMP_DECLSPEC_EXPORT\n#else\n/* compiling to go into an application which will link to a DLL libgmp */\n#define __GMP_DECLSPEC  __GMP_DECLSPEC_IMPORT\n#endif\n#else\n/* all other cases */\n#define __GMP_DECLSPEC\n#endif\n\n\n#ifdef __GMP_SHORT_LIMB\ntypedef unsigned int		mp_limb_t;\ntypedef int			mp_limb_signed_t;\n#else\n#ifdef _LONG_LONG_LIMB\ntypedef unsigned long long int	mp_limb_t;\ntypedef long long int		mp_limb_signed_t;\n#else\ntypedef unsigned long int	mp_limb_t;\ntypedef long int		mp_limb_signed_t;\n#endif\n#endif\ntypedef unsigned long int	mp_bitcnt_t;\n\n/* For reference, note that the name __mpz_struct gets into C++ mangled\n   function names, which means although the \"__\" suggests an internal, we\n   must leave this name for binary compatibility.  */\ntypedef struct\n{\n  int _mp_alloc;		/* Number of *limbs* allocated and pointed\n				   to by the _mp_d field.  */\n  int _mp_size;			/* abs(_mp_size) is the number of limbs the\n				   last field points to.  If _mp_size is\n				   negative this is a negative number.  */\n  mp_limb_t *_mp_d;		/* Pointer to the limbs.  */\n} __mpz_struct;\n\n#endif /* __GNU_MP__ */\n\n\ntypedef __mpz_struct MP_INT;    /* gmp 1 source compatibility */\ntypedef __mpz_struct mpz_t[1];\n\ntypedef mp_limb_t *		mp_ptr;\ntypedef const mp_limb_t *	mp_srcptr;\n#if defined (_CRAY) && ! defined (_CRAYMPP)\n/* plain `int' is much faster (48 bits) */\n#define __GMP_MP_SIZE_T_INT     1\ntypedef int			mp_size_t;\ntypedef int			mp_exp_t;\n#else\n#define __GMP_MP_SIZE_T_INT     0\ntypedef long int		mp_size_t;\ntypedef long int		mp_exp_t;\n#endif\n\ntypedef struct\n{\n  __mpz_struct _mp_num;\n  __mpz_struct _mp_den;\n} __mpq_struct;\n\ntypedef __mpq_struct MP_RAT;    /* gmp 1 source compatibility */\ntypedef __mpq_struct mpq_t[1];\n\ntypedef struct\n{\n  int _mp_prec;			/* Max precision, in number of `mp_limb_t's.\n				   Set by mpf_init and modified by\n				   mpf_set_prec.  The area pointed to by the\n				   _mp_d field contains `prec' + 1 limbs.  */\n  int _mp_size;			/* abs(_mp_size) is the number of limbs the\n				   last field points to.  If _mp_size is\n				   negative this is a negative number.  */\n  mp_exp_t _mp_exp;		/* Exponent, in the base of `mp_limb_t'.  */\n  mp_limb_t *_mp_d;		/* Pointer to the limbs.  */\n} __mpf_struct;\n\n/* typedef __mpf_struct MP_FLOAT; */\ntypedef __mpf_struct mpf_t[1];\n\n/* Available random number generation algorithms.  */\ntypedef enum\n{\n  GMP_RAND_ALG_DEFAULT = 0,\n  GMP_RAND_ALG_LC = GMP_RAND_ALG_DEFAULT /* Linear congruential.  */\n} gmp_randalg_t;\n\n/* Random state struct.  */\ntypedef struct\n{\n  mpz_t _mp_seed;	  /* _mp_d member points to state of the generator. */\n  gmp_randalg_t _mp_alg;  /* Currently unused. */\n  union {\n    void *_mp_lc;         /* Pointer to function pointers structure.  */\n  } _mp_algdata;\n} __gmp_randstate_struct;\ntypedef __gmp_randstate_struct gmp_randstate_t[1];\n\n/* Types for function declarations in gmp files.  */\n/* ??? Should not pollute user name space with these ??? */\ntypedef const __mpz_struct *mpz_srcptr;\ntypedef __mpz_struct *mpz_ptr;\ntypedef const __mpf_struct *mpf_srcptr;\ntypedef __mpf_struct *mpf_ptr;\ntypedef const __mpq_struct *mpq_srcptr;\ntypedef __mpq_struct *mpq_ptr;\n\n\n/* This is not wanted in mp.h, so put it outside the __GNU_MP__ common\n   section. */\n#if __GMP_LIBGMP_DLL\n#ifdef __GMP_WITHIN_GMPXX\n/* compiling to go into a DLL libgmpxx */\n#define __GMP_DECLSPEC_XX  __GMP_DECLSPEC_EXPORT\n#else\n/* compiling to go into a application which will link to a DLL libgmpxx */\n#define __GMP_DECLSPEC_XX  __GMP_DECLSPEC_IMPORT\n#endif\n#else\n/* all other cases */\n#define __GMP_DECLSPEC_XX\n#endif\n\n\n#ifndef __MPN\n#define __MPN(x) __gmpn_##x\n#endif\n\n/* For reference, \"defined(EOF)\" cannot be used here.  In g++ 2.95.4,\n   <iostream> defines EOF but not FILE.  */\n#if defined (FILE)                                              \\\n  || defined (H_STDIO)                                          \\\n  || defined (_H_STDIO)               /* AIX */                 \\\n  || defined (_STDIO_H)               /* glibc, Sun, SCO */     \\\n  || defined (_STDIO_H_)              /* BSD, OSF */            \\\n  || defined (__STDIO_H)              /* Borland */             \\\n  || defined (__STDIO_H__)            /* IRIX */                \\\n  || defined (_STDIO_INCLUDED)        /* HPUX */                \\\n  || defined (__dj_include_stdio_h_)  /* DJGPP */               \\\n  || defined (_FILE_DEFINED)          /* Microsoft */           \\\n  || defined (__STDIO__)              /* Apple MPW MrC */       \\\n  || defined (_MSL_STDIO_H)           /* Metrowerks */          \\\n  || defined (_STDIO_H_INCLUDED)      /* QNX4 */		\\\n  || defined (_ISO_STDIO_ISO_H)       /* Sun C++ */		\\\n  || defined (__STDIO_LOADED)         /* VMS */\n#define _GMP_H_HAVE_FILE 1\n#endif\n\n/* In ISO C, if a prototype involving \"struct obstack *\" is given without\n   that structure defined, then the struct is scoped down to just the\n   prototype, causing a conflict if it's subsequently defined for real.  So\n   only give prototypes if we've got obstack.h.  */\n#if defined (_OBSTACK_H)   /* glibc <obstack.h> */\n#define _GMP_H_HAVE_OBSTACK 1\n#endif\n\n/* The prototypes for gmp_vprintf etc are provided only if va_list is\n   available, via an application having included <stdarg.h> or <varargs.h>.\n   Usually va_list is a typedef so can't be tested directly, but C99\n   specifies that va_start is a macro (and it was normally a macro on past\n   systems too), so look for that.\n\n   <stdio.h> will define some sort of va_list for vprintf and vfprintf, but\n   let's not bother trying to use that since it's not standard and since\n   application uses for gmp_vprintf etc will almost certainly require the\n   whole <stdarg.h> or <varargs.h> anyway.  */\n\n#ifdef va_start\n#define _GMP_H_HAVE_VA_LIST 1\n#endif\n\n/* Test for gcc >= maj.min, as per __GNUC_PREREQ in glibc */\n#if defined (__GNUC__) && defined (__GNUC_MINOR__)\n#define __GMP_GNUC_PREREQ(maj, min) \\\n  ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))\n#else\n#define __GMP_GNUC_PREREQ(maj, min)  0\n#endif\n\n/* \"pure\" is in gcc 2.96 and up, see \"(gcc)Function Attributes\".  Basically\n   it means a function does nothing but examine its arguments and memory\n   (global or via arguments) to generate a return value, but changes nothing\n   and has no side-effects.  __GMP_NO_ATTRIBUTE_CONST_PURE lets\n   tune/common.c etc turn this off when trying to write timing loops.  */\n#if __GMP_GNUC_PREREQ (2,96) && ! defined (__GMP_NO_ATTRIBUTE_CONST_PURE)\n#define __GMP_ATTRIBUTE_PURE   __attribute__ ((__pure__))\n#else\n#define __GMP_ATTRIBUTE_PURE\n#endif\n\n\n/* __GMP_CAST allows us to use static_cast in C++, so our macros are clean\n   to \"g++ -Wold-style-cast\".\n\n   Casts in \"extern inline\" code within an extern \"C\" block don't induce\n   these warnings, so __GMP_CAST only needs to be used on documented\n   macros.  */\n\n#ifdef __cplusplus\n#define __GMP_CAST(type, expr)  (static_cast<type> (expr))\n#else\n#define __GMP_CAST(type, expr)  ((type) (expr))\n#endif\n\n\n/* An empty \"throw ()\" means the function doesn't throw any C++ exceptions,\n   this can save some stack frame info in applications.\n\n   Currently it's given only on functions which never divide-by-zero etc,\n   don't allocate memory, and are expected to never need to allocate memory.\n   This leaves open the possibility of a C++ throw from a future GMP\n   exceptions scheme.\n\n   mpz_set_ui etc are omitted to leave open the lazy allocation scheme\n   described in doc/tasks.html.  mpz_get_d etc are omitted to leave open\n   exceptions for float overflows.\n\n   Note that __GMP_NOTHROW must be given on any inlines the same as on their\n   prototypes (for g++ at least, where they're used together).  Note also\n   that g++ 3.0 demands that __GMP_NOTHROW is before other attributes like\n   __GMP_ATTRIBUTE_PURE.  */\n\n#if defined (__cplusplus)\n#define __GMP_NOTHROW  throw ()\n#else\n#define __GMP_NOTHROW\n#endif\n\n\n/* PORTME: What other compilers have a useful \"extern inline\"?  \"static\n   inline\" would be an acceptable substitute if the compiler (or linker)\n   discards unused statics.  */\n\n /* gcc has __inline__ in all modes, including strict ansi.  Give a prototype\n    for an inline too, so as to correctly specify \"dllimport\" on windows, in\n    case the function is called rather than inlined.\n    GCC 4.3 and above with -std=c99 or -std=gnu99 implements ISO C99\n    inline semantics, unless -fgnu89-inline is used.  */\n#ifdef __GNUC__\n#if (defined __GNUC_STDC_INLINE__) || (__GNUC__ == 4 && __GNUC_MINOR__ == 2) \\\n  || (defined __GNUC_GNU_INLINE__ && defined __cplusplus)\n#define __GMP_EXTERN_INLINE extern __inline__ __attribute__ ((__gnu_inline__))\n#else\n#define __GMP_EXTERN_INLINE      extern __inline__\n#endif\n#define __GMP_INLINE_PROTOTYPES  1\n#endif\n\n/* DEC C (eg. version 5.9) supports \"static __inline foo()\", even in -std1\n   strict ANSI mode.  Inlining is done even when not optimizing (ie. -O0\n   mode, which is the default), but an unnecessary local copy of foo is\n   emitted unless -O is used.  \"extern __inline\" is accepted, but the\n   \"extern\" appears to be ignored, ie. it becomes a plain global function\n   but which is inlined within its file.  Don't know if all old versions of\n   DEC C supported __inline, but as a start let's do the right thing for\n   current versions.  */\n#ifdef __DECC\n#define __GMP_EXTERN_INLINE  static __inline\n#endif\n\n/* SCO OpenUNIX 8 cc supports \"static inline foo()\" but not in -Xc strict\n   ANSI mode (__STDC__ is 1 in that mode).  Inlining only actually takes\n   place under -O.  Without -O \"foo\" seems to be emitted whether it's used\n   or not, which is wasteful.  \"extern inline foo()\" isn't useful, the\n   \"extern\" is apparently ignored, so foo is inlined if possible but also\n   emitted as a global, which causes multiple definition errors when\n   building a shared libgmp.  */\n#ifdef __SCO_VERSION__\n#if __SCO_VERSION__ > 400000000 && __STDC__ != 1 \\\n  && ! defined (__GMP_EXTERN_INLINE)\n#define __GMP_EXTERN_INLINE  static inline\n#endif\n#endif\n\n/* Microsoft's C compiler accepts __inline */\n#ifdef _MSC_VER\n#define __GMP_EXTERN_INLINE  __inline\n#endif\n\n/* Recent enough Sun C compilers want \"inline\" */\n#if defined (__SUNPRO_C) && __SUNPRO_C >= 0x560 \\\n  && ! defined (__GMP_EXTERN_INLINE)\n#define __GMP_EXTERN_INLINE  inline\n#endif\n\n/* Somewhat older Sun C compilers want \"static inline\" */\n#if defined (__SUNPRO_C) && __SUNPRO_C >= 0x540 \\\n  && ! defined (__GMP_EXTERN_INLINE)\n#define __GMP_EXTERN_INLINE  static inline\n#endif\n\n\n/* C++ always has \"inline\" and since it's a normal feature the linker should\n   discard duplicate non-inlined copies, or if it doesn't then that's a\n   problem for everyone, not just GMP.  */\n#if defined (__cplusplus) && ! defined (__GMP_EXTERN_INLINE)\n#define __GMP_EXTERN_INLINE  inline\n#endif\n\n/* Don't do any inlining within a configure run, since if the compiler ends\n   up emitting copies of the code into the object file it can end up\n   demanding the various support routines (like mpn_popcount) for linking,\n   making the \"alloca\" test and perhaps others fail.  And on hppa ia64 a\n   pre-release gcc 3.2 was seen not respecting the \"extern\" in \"extern\n   __inline__\", triggering this problem too.  */\n#if defined (__GMP_WITHIN_CONFIGURE) && ! __GMP_WITHIN_CONFIGURE_INLINE\n#undef __GMP_EXTERN_INLINE\n#endif\n\n/* By default, don't give a prototype when there's going to be an inline\n   version.  Note in particular that Cray C++ objects to the combination of\n   prototype and inline.  */\n#ifdef __GMP_EXTERN_INLINE\n#ifndef __GMP_INLINE_PROTOTYPES\n#define __GMP_INLINE_PROTOTYPES  0\n#endif\n#else\n#define __GMP_INLINE_PROTOTYPES  1\n#endif\n\n\n#define __GMP_ABS(x)   ((x) >= 0 ? (x) : -(x))\n#define __GMP_MAX(h,i) ((h) > (i) ? (h) : (i))\n\n/* __GMP_USHRT_MAX is not \"~ (unsigned short) 0\" because short is promoted\n   to int by \"~\".  */\n#define __GMP_UINT_MAX   (~ (unsigned) 0)\n#define __GMP_ULONG_MAX  (~ (unsigned long) 0)\n#define __GMP_USHRT_MAX  ((unsigned short) ~0)\n\n\n/* __builtin_expect is in gcc 3.0, and not in 2.95. */\n#if __GMP_GNUC_PREREQ (3,0)\n#define __GMP_LIKELY(cond)    __builtin_expect ((cond) != 0, 1)\n#define __GMP_UNLIKELY(cond)  __builtin_expect ((cond) != 0, 0)\n#else\n#define __GMP_LIKELY(cond)    (cond)\n#define __GMP_UNLIKELY(cond)  (cond)\n#endif\n\n#ifdef _CRAY\n#define __GMP_CRAY_Pragma(str)  _Pragma (str)\n#else\n#define __GMP_CRAY_Pragma(str)\n#endif\n\n\n/* Allow direct user access to numerator and denominator of a mpq_t object.  */\n#define mpq_numref(Q) (&((Q)->_mp_num))\n#define mpq_denref(Q) (&((Q)->_mp_den))\n\n\n#if defined (__cplusplus)\nextern \"C\" {\nusing std::FILE;\n#endif\n\n#define mp_set_memory_functions __gmp_set_memory_functions\n__GMP_DECLSPEC void mp_set_memory_functions (void *(*) (size_t),\n				      void *(*) (void *, size_t, size_t),\n				      void (*) (void *, size_t)) __GMP_NOTHROW;\n\n#define mp_get_memory_functions __gmp_get_memory_functions\n__GMP_DECLSPEC void mp_get_memory_functions (void *(**) (size_t),\n                                      void *(**) (void *, size_t, size_t),\n                                      void (**) (void *, size_t)) __GMP_NOTHROW;\n\n#define mp_bits_per_limb __gmp_bits_per_limb\n__GMP_DECLSPEC extern const int mp_bits_per_limb;\n\n#define gmp_errno __gmp_errno\n__GMP_DECLSPEC extern int gmp_errno;\n\n#define gmp_version __gmp_version\n__GMP_DECLSPEC extern const char * const gmp_version;\n\n\n/**************** Random number routines.  ****************/\n\n/* obsolete */\n#define gmp_randinit __gmp_randinit\n__GMP_DECLSPEC void gmp_randinit (gmp_randstate_t, gmp_randalg_t, ...);\n\n#define gmp_randinit_default __gmp_randinit_default\n__GMP_DECLSPEC void gmp_randinit_default (gmp_randstate_t);\n\n#define gmp_randinit_lc_2exp __gmp_randinit_lc_2exp\n__GMP_DECLSPEC void gmp_randinit_lc_2exp (gmp_randstate_t, mpz_srcptr, unsigned long int, mp_bitcnt_t);\n\n#define gmp_randinit_lc_2exp_size __gmp_randinit_lc_2exp_size\n__GMP_DECLSPEC int gmp_randinit_lc_2exp_size (gmp_randstate_t, mp_bitcnt_t);\n\n#define gmp_randinit_mt __gmp_randinit_mt\n__GMP_DECLSPEC void gmp_randinit_mt (gmp_randstate_t);\n\n#define gmp_randinit_set __gmp_randinit_set\n__GMP_DECLSPEC void gmp_randinit_set (gmp_randstate_t, const __gmp_randstate_struct *);\n\n#define gmp_randseed __gmp_randseed\n__GMP_DECLSPEC void gmp_randseed (gmp_randstate_t, mpz_srcptr);\n\n#define gmp_randseed_ui __gmp_randseed_ui\n__GMP_DECLSPEC void gmp_randseed_ui (gmp_randstate_t, unsigned long int);\n\n#define gmp_randclear __gmp_randclear\n__GMP_DECLSPEC void gmp_randclear (gmp_randstate_t);\n\n#define gmp_urandomb_ui __gmp_urandomb_ui\n__GMP_DECLSPEC unsigned long gmp_urandomb_ui (gmp_randstate_t, unsigned long);\n\n#define gmp_urandomm_ui __gmp_urandomm_ui\n__GMP_DECLSPEC unsigned long gmp_urandomm_ui (gmp_randstate_t, unsigned long);\n\n\n/**************** Formatted output routines.  ****************/\n\n#define gmp_asprintf __gmp_asprintf\n__GMP_DECLSPEC int gmp_asprintf (char **, const char *, ...);\n\n#define gmp_fprintf __gmp_fprintf\n#ifdef _GMP_H_HAVE_FILE\n__GMP_DECLSPEC int gmp_fprintf (FILE *, const char *, ...);\n#endif\n\n#define gmp_obstack_printf __gmp_obstack_printf\n#if defined (_GMP_H_HAVE_OBSTACK)\n__GMP_DECLSPEC int gmp_obstack_printf (struct obstack *, const char *, ...);\n#endif\n\n#define gmp_obstack_vprintf __gmp_obstack_vprintf\n#if defined (_GMP_H_HAVE_OBSTACK) && defined (_GMP_H_HAVE_VA_LIST)\n__GMP_DECLSPEC int gmp_obstack_vprintf (struct obstack *, const char *, va_list);\n#endif\n\n#define gmp_printf __gmp_printf\n__GMP_DECLSPEC int gmp_printf (const char *, ...);\n\n#define gmp_snprintf __gmp_snprintf\n__GMP_DECLSPEC int gmp_snprintf (char *, size_t, const char *, ...);\n\n#define gmp_sprintf __gmp_sprintf\n__GMP_DECLSPEC int gmp_sprintf (char *, const char *, ...);\n\n#define gmp_vasprintf __gmp_vasprintf\n#if defined (_GMP_H_HAVE_VA_LIST)\n__GMP_DECLSPEC int gmp_vasprintf (char **, const char *, va_list);\n#endif\n\n#define gmp_vfprintf __gmp_vfprintf\n#if defined (_GMP_H_HAVE_FILE) && defined (_GMP_H_HAVE_VA_LIST)\n__GMP_DECLSPEC int gmp_vfprintf (FILE *, const char *, va_list);\n#endif\n\n#define gmp_vprintf __gmp_vprintf\n#if defined (_GMP_H_HAVE_VA_LIST)\n__GMP_DECLSPEC int gmp_vprintf (const char *, va_list);\n#endif\n\n#define gmp_vsnprintf __gmp_vsnprintf\n#if defined (_GMP_H_HAVE_VA_LIST)\n__GMP_DECLSPEC int gmp_vsnprintf (char *, size_t, const char *, va_list);\n#endif\n\n#define gmp_vsprintf __gmp_vsprintf\n#if defined (_GMP_H_HAVE_VA_LIST)\n__GMP_DECLSPEC int gmp_vsprintf (char *, const char *, va_list);\n#endif\n\n\n/**************** Formatted input routines.  ****************/\n\n#define gmp_fscanf __gmp_fscanf\n#ifdef _GMP_H_HAVE_FILE\n__GMP_DECLSPEC int gmp_fscanf (FILE *, const char *, ...);\n#endif\n\n#define gmp_scanf __gmp_scanf\n__GMP_DECLSPEC int gmp_scanf (const char *, ...);\n\n#define gmp_sscanf __gmp_sscanf\n__GMP_DECLSPEC int gmp_sscanf (const char *, const char *, ...);\n\n#define gmp_vfscanf __gmp_vfscanf\n#if defined (_GMP_H_HAVE_FILE) && defined (_GMP_H_HAVE_VA_LIST)\n__GMP_DECLSPEC int gmp_vfscanf (FILE *, const char *, va_list);\n#endif\n\n#define gmp_vscanf __gmp_vscanf\n#if defined (_GMP_H_HAVE_VA_LIST)\n__GMP_DECLSPEC int gmp_vscanf (const char *, va_list);\n#endif\n\n#define gmp_vsscanf __gmp_vsscanf\n#if defined (_GMP_H_HAVE_VA_LIST)\n__GMP_DECLSPEC int gmp_vsscanf (const char *, const char *, va_list);\n#endif\n\n\n/**************** Integer (i.e. Z) routines.  ****************/\n\n#define _mpz_realloc __gmpz_realloc\n#define mpz_realloc __gmpz_realloc\n__GMP_DECLSPEC void *_mpz_realloc (mpz_ptr, mp_size_t);\n\n#define mpz_abs __gmpz_abs\n#if __GMP_INLINE_PROTOTYPES || defined (__GMP_FORCE_mpz_abs)\n__GMP_DECLSPEC void mpz_abs (mpz_ptr, mpz_srcptr);\n#endif\n\n#define mpz_add __gmpz_add\n__GMP_DECLSPEC void mpz_add (mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_add_ui __gmpz_add_ui\n__GMP_DECLSPEC void mpz_add_ui (mpz_ptr, mpz_srcptr, unsigned long int);\n\n#define mpz_addmul __gmpz_addmul\n__GMP_DECLSPEC void mpz_addmul (mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_addmul_ui __gmpz_addmul_ui\n__GMP_DECLSPEC void mpz_addmul_ui (mpz_ptr, mpz_srcptr, unsigned long int);\n\n#define mpz_and __gmpz_and\n__GMP_DECLSPEC void mpz_and (mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_array_init __gmpz_array_init\n__GMP_DECLSPEC void mpz_array_init (mpz_ptr, mp_size_t, mp_size_t);\n\n#define mpz_bin_ui __gmpz_bin_ui\n__GMP_DECLSPEC void mpz_bin_ui (mpz_ptr, mpz_srcptr, unsigned long int);\n\n#define mpz_bin_uiui __gmpz_bin_uiui\n__GMP_DECLSPEC void mpz_bin_uiui (mpz_ptr, unsigned long int, unsigned long int);\n\n#define mpz_cdiv_q __gmpz_cdiv_q\n__GMP_DECLSPEC void mpz_cdiv_q (mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_cdiv_q_2exp __gmpz_cdiv_q_2exp\n__GMP_DECLSPEC void mpz_cdiv_q_2exp (mpz_ptr, mpz_srcptr, mp_bitcnt_t);\n\n#define mpz_cdiv_q_ui __gmpz_cdiv_q_ui\n__GMP_DECLSPEC unsigned long int mpz_cdiv_q_ui (mpz_ptr, mpz_srcptr, unsigned long int);\n\n#define mpz_cdiv_qr __gmpz_cdiv_qr\n__GMP_DECLSPEC void mpz_cdiv_qr (mpz_ptr, mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_cdiv_qr_ui __gmpz_cdiv_qr_ui\n__GMP_DECLSPEC unsigned long int mpz_cdiv_qr_ui (mpz_ptr, mpz_ptr, mpz_srcptr, unsigned long int);\n\n#define mpz_cdiv_r __gmpz_cdiv_r\n__GMP_DECLSPEC void mpz_cdiv_r (mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_cdiv_r_2exp __gmpz_cdiv_r_2exp\n__GMP_DECLSPEC void mpz_cdiv_r_2exp (mpz_ptr, mpz_srcptr, mp_bitcnt_t);\n\n#define mpz_cdiv_r_ui __gmpz_cdiv_r_ui\n__GMP_DECLSPEC unsigned long int mpz_cdiv_r_ui (mpz_ptr, mpz_srcptr, unsigned long int);\n\n#define mpz_cdiv_ui __gmpz_cdiv_ui\n__GMP_DECLSPEC unsigned long int mpz_cdiv_ui (mpz_srcptr, unsigned long int) __GMP_ATTRIBUTE_PURE;\n\n#define mpz_clear __gmpz_clear\n__GMP_DECLSPEC void mpz_clear (mpz_ptr);\n\n#define mpz_clears __gmpz_clears\n__GMP_DECLSPEC void mpz_clears (mpz_ptr, ...);\n\n#define mpz_clrbit __gmpz_clrbit\n__GMP_DECLSPEC void mpz_clrbit (mpz_ptr, mp_bitcnt_t);\n\n#define mpz_cmp __gmpz_cmp\n__GMP_DECLSPEC int mpz_cmp (mpz_srcptr, mpz_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpz_cmp_d __gmpz_cmp_d\n__GMP_DECLSPEC int mpz_cmp_d (mpz_srcptr, double) __GMP_ATTRIBUTE_PURE;\n\n#define _mpz_cmp_si __gmpz_cmp_si\n__GMP_DECLSPEC int _mpz_cmp_si (mpz_srcptr, signed long int) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define _mpz_cmp_ui __gmpz_cmp_ui\n__GMP_DECLSPEC int _mpz_cmp_ui (mpz_srcptr, unsigned long int) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpz_cmpabs __gmpz_cmpabs\n__GMP_DECLSPEC int mpz_cmpabs (mpz_srcptr, mpz_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpz_cmpabs_d __gmpz_cmpabs_d\n__GMP_DECLSPEC int mpz_cmpabs_d (mpz_srcptr, double) __GMP_ATTRIBUTE_PURE;\n\n#define mpz_cmpabs_ui __gmpz_cmpabs_ui\n__GMP_DECLSPEC int mpz_cmpabs_ui (mpz_srcptr, unsigned long int) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpz_com __gmpz_com\n__GMP_DECLSPEC void mpz_com (mpz_ptr, mpz_srcptr);\n\n#define mpz_combit __gmpz_combit\n__GMP_DECLSPEC void mpz_combit (mpz_ptr, mp_bitcnt_t);\n\n#define mpz_congruent_p __gmpz_congruent_p\n__GMP_DECLSPEC int mpz_congruent_p (mpz_srcptr, mpz_srcptr, mpz_srcptr) __GMP_ATTRIBUTE_PURE;\n\n#define mpz_congruent_2exp_p __gmpz_congruent_2exp_p\n__GMP_DECLSPEC int mpz_congruent_2exp_p (mpz_srcptr, mpz_srcptr, mp_bitcnt_t) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpz_congruent_ui_p __gmpz_congruent_ui_p\n__GMP_DECLSPEC int mpz_congruent_ui_p (mpz_srcptr, unsigned long, unsigned long) __GMP_ATTRIBUTE_PURE;\n\n#define mpz_divexact __gmpz_divexact\n__GMP_DECLSPEC void mpz_divexact (mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_divexact_ui __gmpz_divexact_ui\n__GMP_DECLSPEC void mpz_divexact_ui (mpz_ptr, mpz_srcptr, unsigned long);\n\n#define mpz_divisible_p __gmpz_divisible_p\n__GMP_DECLSPEC int mpz_divisible_p (mpz_srcptr, mpz_srcptr) __GMP_ATTRIBUTE_PURE;\n\n#define mpz_divisible_ui_p __gmpz_divisible_ui_p\n__GMP_DECLSPEC int mpz_divisible_ui_p (mpz_srcptr, unsigned long) __GMP_ATTRIBUTE_PURE;\n\n#define mpz_divisible_2exp_p __gmpz_divisible_2exp_p\n__GMP_DECLSPEC int mpz_divisible_2exp_p (mpz_srcptr, mp_bitcnt_t) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpz_dump __gmpz_dump\n__GMP_DECLSPEC void mpz_dump (mpz_srcptr);\n\n#define mpz_export __gmpz_export\n__GMP_DECLSPEC void *mpz_export (void *, size_t *, int, size_t, int, size_t, mpz_srcptr);\n\n#define mpz_fac_ui __gmpz_fac_ui\n__GMP_DECLSPEC void mpz_fac_ui (mpz_ptr, unsigned long int);\n\n#define mpz_2fac_ui __gmpz_2fac_ui\n__GMP_DECLSPEC void mpz_2fac_ui (mpz_ptr, unsigned long int);\n\n#define mpz_mfac_uiui __gmpz_mfac_uiui\n__GMP_DECLSPEC void mpz_mfac_uiui (mpz_ptr, unsigned long int, unsigned long int);\n\n#define mpz_primorial_ui __gmpz_primorial_ui\n__GMP_DECLSPEC void mpz_primorial_ui (mpz_ptr, unsigned long int);\n\n#define mpz_fdiv_q __gmpz_fdiv_q\n__GMP_DECLSPEC void mpz_fdiv_q (mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_fdiv_q_2exp __gmpz_fdiv_q_2exp\n__GMP_DECLSPEC void mpz_fdiv_q_2exp (mpz_ptr, mpz_srcptr, mp_bitcnt_t);\n\n#define mpz_fdiv_q_ui __gmpz_fdiv_q_ui\n__GMP_DECLSPEC unsigned long int mpz_fdiv_q_ui (mpz_ptr, mpz_srcptr, unsigned long int);\n\n#define mpz_fdiv_qr __gmpz_fdiv_qr\n__GMP_DECLSPEC void mpz_fdiv_qr (mpz_ptr, mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_fdiv_qr_ui __gmpz_fdiv_qr_ui\n__GMP_DECLSPEC unsigned long int mpz_fdiv_qr_ui (mpz_ptr, mpz_ptr, mpz_srcptr, unsigned long int);\n\n#define mpz_fdiv_r __gmpz_fdiv_r\n__GMP_DECLSPEC void mpz_fdiv_r (mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_fdiv_r_2exp __gmpz_fdiv_r_2exp\n__GMP_DECLSPEC void mpz_fdiv_r_2exp (mpz_ptr, mpz_srcptr, mp_bitcnt_t);\n\n#define mpz_fdiv_r_ui __gmpz_fdiv_r_ui\n__GMP_DECLSPEC unsigned long int mpz_fdiv_r_ui (mpz_ptr, mpz_srcptr, unsigned long int);\n\n#define mpz_fdiv_ui __gmpz_fdiv_ui\n__GMP_DECLSPEC unsigned long int mpz_fdiv_ui (mpz_srcptr, unsigned long int) __GMP_ATTRIBUTE_PURE;\n\n#define mpz_fib_ui __gmpz_fib_ui\n__GMP_DECLSPEC void mpz_fib_ui (mpz_ptr, unsigned long int);\n\n#define mpz_fib2_ui __gmpz_fib2_ui\n__GMP_DECLSPEC void mpz_fib2_ui (mpz_ptr, mpz_ptr, unsigned long int);\n\n#define mpz_fits_sint_p __gmpz_fits_sint_p\n__GMP_DECLSPEC int mpz_fits_sint_p (mpz_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpz_fits_slong_p __gmpz_fits_slong_p\n__GMP_DECLSPEC int mpz_fits_slong_p (mpz_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpz_fits_sshort_p __gmpz_fits_sshort_p\n__GMP_DECLSPEC int mpz_fits_sshort_p (mpz_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpz_fits_uint_p __gmpz_fits_uint_p\n#if __GMP_INLINE_PROTOTYPES || defined (__GMP_FORCE_mpz_fits_uint_p)\n__GMP_DECLSPEC int mpz_fits_uint_p (mpz_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n#endif\n\n#define mpz_fits_ulong_p __gmpz_fits_ulong_p\n#if __GMP_INLINE_PROTOTYPES || defined (__GMP_FORCE_mpz_fits_ulong_p)\n__GMP_DECLSPEC int mpz_fits_ulong_p (mpz_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n#endif\n\n#define mpz_fits_ushort_p __gmpz_fits_ushort_p\n#if __GMP_INLINE_PROTOTYPES || defined (__GMP_FORCE_mpz_fits_ushort_p)\n__GMP_DECLSPEC int mpz_fits_ushort_p (mpz_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n#endif\n\n#define mpz_gcd __gmpz_gcd\n__GMP_DECLSPEC void mpz_gcd (mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_gcd_ui __gmpz_gcd_ui\n__GMP_DECLSPEC unsigned long int mpz_gcd_ui (mpz_ptr, mpz_srcptr, unsigned long int);\n\n#define mpz_gcdext __gmpz_gcdext\n__GMP_DECLSPEC void mpz_gcdext (mpz_ptr, mpz_ptr, mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_get_d __gmpz_get_d\n__GMP_DECLSPEC double mpz_get_d (mpz_srcptr) __GMP_ATTRIBUTE_PURE;\n\n#define mpz_get_d_2exp __gmpz_get_d_2exp\n__GMP_DECLSPEC double mpz_get_d_2exp (signed long int *, mpz_srcptr);\n\n#define mpz_get_si __gmpz_get_si\n__GMP_DECLSPEC /* signed */ long int mpz_get_si (mpz_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpz_get_str __gmpz_get_str\n__GMP_DECLSPEC char *mpz_get_str (char *, int, mpz_srcptr);\n\n#define mpz_get_ui __gmpz_get_ui\n#if __GMP_INLINE_PROTOTYPES || defined (__GMP_FORCE_mpz_get_ui)\n__GMP_DECLSPEC unsigned long int mpz_get_ui (mpz_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n#endif\n\n#define mpz_getlimbn __gmpz_getlimbn\n#if __GMP_INLINE_PROTOTYPES || defined (__GMP_FORCE_mpz_getlimbn)\n__GMP_DECLSPEC mp_limb_t mpz_getlimbn (mpz_srcptr, mp_size_t) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n#endif\n\n#define mpz_hamdist __gmpz_hamdist\n__GMP_DECLSPEC mp_bitcnt_t mpz_hamdist (mpz_srcptr, mpz_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpz_import __gmpz_import\n__GMP_DECLSPEC void mpz_import (mpz_ptr, size_t, int, size_t, int, size_t, const void *);\n\n#define mpz_init __gmpz_init\n__GMP_DECLSPEC void mpz_init (mpz_ptr);\n\n#define mpz_init2 __gmpz_init2\n__GMP_DECLSPEC void mpz_init2 (mpz_ptr, mp_bitcnt_t);\n\n#define mpz_inits __gmpz_inits\n__GMP_DECLSPEC void mpz_inits (mpz_ptr, ...);\n\n#define mpz_init_set __gmpz_init_set\n__GMP_DECLSPEC void mpz_init_set (mpz_ptr, mpz_srcptr);\n\n#define mpz_init_set_d __gmpz_init_set_d\n__GMP_DECLSPEC void mpz_init_set_d (mpz_ptr, double);\n\n#define mpz_init_set_si __gmpz_init_set_si\n__GMP_DECLSPEC void mpz_init_set_si (mpz_ptr, signed long int);\n\n#define mpz_init_set_str __gmpz_init_set_str\n__GMP_DECLSPEC int mpz_init_set_str (mpz_ptr, const char *, int);\n\n#define mpz_init_set_ui __gmpz_init_set_ui\n__GMP_DECLSPEC void mpz_init_set_ui (mpz_ptr, unsigned long int);\n\n#define mpz_inp_raw __gmpz_inp_raw\n#ifdef _GMP_H_HAVE_FILE\n__GMP_DECLSPEC size_t mpz_inp_raw (mpz_ptr, FILE *);\n#endif\n\n#define mpz_inp_str __gmpz_inp_str\n#ifdef _GMP_H_HAVE_FILE\n__GMP_DECLSPEC size_t mpz_inp_str (mpz_ptr, FILE *, int);\n#endif\n\n#define mpz_invert __gmpz_invert\n__GMP_DECLSPEC int mpz_invert (mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_ior __gmpz_ior\n__GMP_DECLSPEC void mpz_ior (mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_jacobi __gmpz_jacobi\n__GMP_DECLSPEC int mpz_jacobi (mpz_srcptr, mpz_srcptr) __GMP_ATTRIBUTE_PURE;\n\n#define mpz_kronecker mpz_jacobi  /* alias */\n\n#define mpz_kronecker_si __gmpz_kronecker_si\n__GMP_DECLSPEC int mpz_kronecker_si (mpz_srcptr, long) __GMP_ATTRIBUTE_PURE;\n\n#define mpz_kronecker_ui __gmpz_kronecker_ui\n__GMP_DECLSPEC int mpz_kronecker_ui (mpz_srcptr, unsigned long) __GMP_ATTRIBUTE_PURE;\n\n#define mpz_si_kronecker __gmpz_si_kronecker\n__GMP_DECLSPEC int mpz_si_kronecker (long, mpz_srcptr) __GMP_ATTRIBUTE_PURE;\n\n#define mpz_ui_kronecker __gmpz_ui_kronecker\n__GMP_DECLSPEC int mpz_ui_kronecker (unsigned long, mpz_srcptr) __GMP_ATTRIBUTE_PURE;\n\n#define mpz_lcm __gmpz_lcm\n__GMP_DECLSPEC void mpz_lcm (mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_lcm_ui __gmpz_lcm_ui\n__GMP_DECLSPEC void mpz_lcm_ui (mpz_ptr, mpz_srcptr, unsigned long);\n\n#define mpz_legendre mpz_jacobi  /* alias */\n\n#define mpz_lucnum_ui __gmpz_lucnum_ui\n__GMP_DECLSPEC void mpz_lucnum_ui (mpz_ptr, unsigned long int);\n\n#define mpz_lucnum2_ui __gmpz_lucnum2_ui\n__GMP_DECLSPEC void mpz_lucnum2_ui (mpz_ptr, mpz_ptr, unsigned long int);\n\n#define mpz_millerrabin __gmpz_millerrabin\n__GMP_DECLSPEC int mpz_millerrabin (mpz_srcptr, int) __GMP_ATTRIBUTE_PURE;\n\n#define mpz_mod __gmpz_mod\n__GMP_DECLSPEC void mpz_mod (mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_mod_ui mpz_fdiv_r_ui /* same as fdiv_r because divisor unsigned */\n\n#define mpz_mul __gmpz_mul\n__GMP_DECLSPEC void mpz_mul (mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_mul_2exp __gmpz_mul_2exp\n__GMP_DECLSPEC void mpz_mul_2exp (mpz_ptr, mpz_srcptr, mp_bitcnt_t);\n\n#define mpz_mul_si __gmpz_mul_si\n__GMP_DECLSPEC void mpz_mul_si (mpz_ptr, mpz_srcptr, long int);\n\n#define mpz_mul_ui __gmpz_mul_ui\n__GMP_DECLSPEC void mpz_mul_ui (mpz_ptr, mpz_srcptr, unsigned long int);\n\n#define mpz_neg __gmpz_neg\n#if __GMP_INLINE_PROTOTYPES || defined (__GMP_FORCE_mpz_neg)\n__GMP_DECLSPEC void mpz_neg (mpz_ptr, mpz_srcptr);\n#endif\n\n#define mpz_nextprime __gmpz_nextprime\n__GMP_DECLSPEC void mpz_nextprime (mpz_ptr, mpz_srcptr);\n\n#define mpz_out_raw __gmpz_out_raw\n#ifdef _GMP_H_HAVE_FILE\n__GMP_DECLSPEC size_t mpz_out_raw (FILE *, mpz_srcptr);\n#endif\n\n#define mpz_out_str __gmpz_out_str\n#ifdef _GMP_H_HAVE_FILE\n__GMP_DECLSPEC size_t mpz_out_str (FILE *, int, mpz_srcptr);\n#endif\n\n#define mpz_perfect_power_p __gmpz_perfect_power_p\n__GMP_DECLSPEC int mpz_perfect_power_p (mpz_srcptr) __GMP_ATTRIBUTE_PURE;\n\n#define mpz_perfect_square_p __gmpz_perfect_square_p\n#if __GMP_INLINE_PROTOTYPES || defined (__GMP_FORCE_mpz_perfect_square_p)\n__GMP_DECLSPEC int mpz_perfect_square_p (mpz_srcptr) __GMP_ATTRIBUTE_PURE;\n#endif\n\n#define mpz_popcount __gmpz_popcount\n#if __GMP_INLINE_PROTOTYPES || defined (__GMP_FORCE_mpz_popcount)\n__GMP_DECLSPEC mp_bitcnt_t mpz_popcount (mpz_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n#endif\n\n#define mpz_pow_ui __gmpz_pow_ui\n__GMP_DECLSPEC void mpz_pow_ui (mpz_ptr, mpz_srcptr, unsigned long int);\n\n#define mpz_powm __gmpz_powm\n__GMP_DECLSPEC void mpz_powm (mpz_ptr, mpz_srcptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_powm_sec __gmpz_powm_sec\n__GMP_DECLSPEC void mpz_powm_sec (mpz_ptr, mpz_srcptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_powm_ui __gmpz_powm_ui\n__GMP_DECLSPEC void mpz_powm_ui (mpz_ptr, mpz_srcptr, unsigned long int, mpz_srcptr);\n\n#define mpz_probab_prime_p __gmpz_probab_prime_p\n__GMP_DECLSPEC int mpz_probab_prime_p (mpz_srcptr, int) __GMP_ATTRIBUTE_PURE;\n\n#define mpz_random __gmpz_random\n__GMP_DECLSPEC void mpz_random (mpz_ptr, mp_size_t);\n\n#define mpz_random2 __gmpz_random2\n__GMP_DECLSPEC void mpz_random2 (mpz_ptr, mp_size_t);\n\n#define mpz_realloc2 __gmpz_realloc2\n__GMP_DECLSPEC void mpz_realloc2 (mpz_ptr, mp_bitcnt_t);\n\n#define mpz_remove __gmpz_remove\n__GMP_DECLSPEC mp_bitcnt_t mpz_remove (mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_root __gmpz_root\n__GMP_DECLSPEC int mpz_root (mpz_ptr, mpz_srcptr, unsigned long int);\n\n#define mpz_rootrem __gmpz_rootrem\n__GMP_DECLSPEC void mpz_rootrem (mpz_ptr, mpz_ptr, mpz_srcptr, unsigned long int);\n\n#define mpz_rrandomb __gmpz_rrandomb\n__GMP_DECLSPEC void mpz_rrandomb (mpz_ptr, gmp_randstate_t, mp_bitcnt_t);\n\n#define mpz_scan0 __gmpz_scan0\n__GMP_DECLSPEC mp_bitcnt_t mpz_scan0 (mpz_srcptr, mp_bitcnt_t) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpz_scan1 __gmpz_scan1\n__GMP_DECLSPEC mp_bitcnt_t mpz_scan1 (mpz_srcptr, mp_bitcnt_t) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpz_set __gmpz_set\n__GMP_DECLSPEC void mpz_set (mpz_ptr, mpz_srcptr);\n\n#define mpz_set_d __gmpz_set_d\n__GMP_DECLSPEC void mpz_set_d (mpz_ptr, double);\n\n#define mpz_set_f __gmpz_set_f\n__GMP_DECLSPEC void mpz_set_f (mpz_ptr, mpf_srcptr);\n\n#define mpz_set_q __gmpz_set_q\n#if __GMP_INLINE_PROTOTYPES || defined (__GMP_FORCE_mpz_set_q)\n__GMP_DECLSPEC void mpz_set_q (mpz_ptr, mpq_srcptr);\n#endif\n\n#define mpz_set_si __gmpz_set_si\n__GMP_DECLSPEC void mpz_set_si (mpz_ptr, signed long int);\n\n#define mpz_set_str __gmpz_set_str\n__GMP_DECLSPEC int mpz_set_str (mpz_ptr, const char *, int);\n\n#define mpz_set_ui __gmpz_set_ui\n__GMP_DECLSPEC void mpz_set_ui (mpz_ptr, unsigned long int);\n\n#define mpz_setbit __gmpz_setbit\n__GMP_DECLSPEC void mpz_setbit (mpz_ptr, mp_bitcnt_t);\n\n#define mpz_size __gmpz_size\n#if __GMP_INLINE_PROTOTYPES || defined (__GMP_FORCE_mpz_size)\n__GMP_DECLSPEC size_t mpz_size (mpz_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n#endif\n\n#define mpz_sizeinbase __gmpz_sizeinbase\n__GMP_DECLSPEC size_t mpz_sizeinbase (mpz_srcptr, int) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpz_sqrt __gmpz_sqrt\n__GMP_DECLSPEC void mpz_sqrt (mpz_ptr, mpz_srcptr);\n\n#define mpz_sqrtrem __gmpz_sqrtrem\n__GMP_DECLSPEC void mpz_sqrtrem (mpz_ptr, mpz_ptr, mpz_srcptr);\n\n#define mpz_sub __gmpz_sub\n__GMP_DECLSPEC void mpz_sub (mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_sub_ui __gmpz_sub_ui\n__GMP_DECLSPEC void mpz_sub_ui (mpz_ptr, mpz_srcptr, unsigned long int);\n\n#define mpz_ui_sub __gmpz_ui_sub\n__GMP_DECLSPEC void mpz_ui_sub (mpz_ptr, unsigned long int, mpz_srcptr);\n\n#define mpz_submul __gmpz_submul\n__GMP_DECLSPEC void mpz_submul (mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_submul_ui __gmpz_submul_ui\n__GMP_DECLSPEC void mpz_submul_ui (mpz_ptr, mpz_srcptr, unsigned long int);\n\n#define mpz_swap __gmpz_swap\n__GMP_DECLSPEC void mpz_swap (mpz_ptr, mpz_ptr) __GMP_NOTHROW;\n\n#define mpz_tdiv_ui __gmpz_tdiv_ui\n__GMP_DECLSPEC unsigned long int mpz_tdiv_ui (mpz_srcptr, unsigned long int) __GMP_ATTRIBUTE_PURE;\n\n#define mpz_tdiv_q __gmpz_tdiv_q\n__GMP_DECLSPEC void mpz_tdiv_q (mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_tdiv_q_2exp __gmpz_tdiv_q_2exp\n__GMP_DECLSPEC void mpz_tdiv_q_2exp (mpz_ptr, mpz_srcptr, mp_bitcnt_t);\n\n#define mpz_tdiv_q_ui __gmpz_tdiv_q_ui\n__GMP_DECLSPEC unsigned long int mpz_tdiv_q_ui (mpz_ptr, mpz_srcptr, unsigned long int);\n\n#define mpz_tdiv_qr __gmpz_tdiv_qr\n__GMP_DECLSPEC void mpz_tdiv_qr (mpz_ptr, mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_tdiv_qr_ui __gmpz_tdiv_qr_ui\n__GMP_DECLSPEC unsigned long int mpz_tdiv_qr_ui (mpz_ptr, mpz_ptr, mpz_srcptr, unsigned long int);\n\n#define mpz_tdiv_r __gmpz_tdiv_r\n__GMP_DECLSPEC void mpz_tdiv_r (mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n#define mpz_tdiv_r_2exp __gmpz_tdiv_r_2exp\n__GMP_DECLSPEC void mpz_tdiv_r_2exp (mpz_ptr, mpz_srcptr, mp_bitcnt_t);\n\n#define mpz_tdiv_r_ui __gmpz_tdiv_r_ui\n__GMP_DECLSPEC unsigned long int mpz_tdiv_r_ui (mpz_ptr, mpz_srcptr, unsigned long int);\n\n#define mpz_tstbit __gmpz_tstbit\n__GMP_DECLSPEC int mpz_tstbit (mpz_srcptr, mp_bitcnt_t) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpz_ui_pow_ui __gmpz_ui_pow_ui\n__GMP_DECLSPEC void mpz_ui_pow_ui (mpz_ptr, unsigned long int, unsigned long int);\n\n#define mpz_urandomb __gmpz_urandomb\n__GMP_DECLSPEC void mpz_urandomb (mpz_ptr, gmp_randstate_t, mp_bitcnt_t);\n\n#define mpz_urandomm __gmpz_urandomm\n__GMP_DECLSPEC void mpz_urandomm (mpz_ptr, gmp_randstate_t, mpz_srcptr);\n\n#define mpz_xor __gmpz_xor\n#define mpz_eor __gmpz_xor\n__GMP_DECLSPEC void mpz_xor (mpz_ptr, mpz_srcptr, mpz_srcptr);\n\n\n/**************** Rational (i.e. Q) routines.  ****************/\n\n#define mpq_abs __gmpq_abs\n#if __GMP_INLINE_PROTOTYPES || defined (__GMP_FORCE_mpq_abs)\n__GMP_DECLSPEC void mpq_abs (mpq_ptr, mpq_srcptr);\n#endif\n\n#define mpq_add __gmpq_add\n__GMP_DECLSPEC void mpq_add (mpq_ptr, mpq_srcptr, mpq_srcptr);\n\n#define mpq_canonicalize __gmpq_canonicalize\n__GMP_DECLSPEC void mpq_canonicalize (mpq_ptr);\n\n#define mpq_clear __gmpq_clear\n__GMP_DECLSPEC void mpq_clear (mpq_ptr);\n\n#define mpq_clears __gmpq_clears\n__GMP_DECLSPEC void mpq_clears (mpq_ptr, ...);\n\n#define mpq_cmp __gmpq_cmp\n__GMP_DECLSPEC int mpq_cmp (mpq_srcptr, mpq_srcptr) __GMP_ATTRIBUTE_PURE;\n\n#define _mpq_cmp_si __gmpq_cmp_si\n__GMP_DECLSPEC int _mpq_cmp_si (mpq_srcptr, long, unsigned long) __GMP_ATTRIBUTE_PURE;\n\n#define _mpq_cmp_ui __gmpq_cmp_ui\n__GMP_DECLSPEC int _mpq_cmp_ui (mpq_srcptr, unsigned long int, unsigned long int) __GMP_ATTRIBUTE_PURE;\n\n#define mpq_div __gmpq_div\n__GMP_DECLSPEC void mpq_div (mpq_ptr, mpq_srcptr, mpq_srcptr);\n\n#define mpq_div_2exp __gmpq_div_2exp\n__GMP_DECLSPEC void mpq_div_2exp (mpq_ptr, mpq_srcptr, mp_bitcnt_t);\n\n#define mpq_equal __gmpq_equal\n__GMP_DECLSPEC int mpq_equal (mpq_srcptr, mpq_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpq_get_num __gmpq_get_num\n__GMP_DECLSPEC void mpq_get_num (mpz_ptr, mpq_srcptr);\n\n#define mpq_get_den __gmpq_get_den\n__GMP_DECLSPEC void mpq_get_den (mpz_ptr, mpq_srcptr);\n\n#define mpq_get_d __gmpq_get_d\n__GMP_DECLSPEC double mpq_get_d (mpq_srcptr) __GMP_ATTRIBUTE_PURE;\n\n#define mpq_get_str __gmpq_get_str\n__GMP_DECLSPEC char *mpq_get_str (char *, int, mpq_srcptr);\n\n#define mpq_init __gmpq_init\n__GMP_DECLSPEC void mpq_init (mpq_ptr);\n\n#define mpq_inits __gmpq_inits\n__GMP_DECLSPEC void mpq_inits (mpq_ptr, ...);\n\n#define mpq_inp_str __gmpq_inp_str\n#ifdef _GMP_H_HAVE_FILE\n__GMP_DECLSPEC size_t mpq_inp_str (mpq_ptr, FILE *, int);\n#endif\n\n#define mpq_inv __gmpq_inv\n__GMP_DECLSPEC void mpq_inv (mpq_ptr, mpq_srcptr);\n\n#define mpq_mul __gmpq_mul\n__GMP_DECLSPEC void mpq_mul (mpq_ptr, mpq_srcptr, mpq_srcptr);\n\n#define mpq_mul_2exp __gmpq_mul_2exp\n__GMP_DECLSPEC void mpq_mul_2exp (mpq_ptr, mpq_srcptr, mp_bitcnt_t);\n\n#define mpq_neg __gmpq_neg\n#if __GMP_INLINE_PROTOTYPES || defined (__GMP_FORCE_mpq_neg)\n__GMP_DECLSPEC void mpq_neg (mpq_ptr, mpq_srcptr);\n#endif\n\n#define mpq_out_str __gmpq_out_str\n#ifdef _GMP_H_HAVE_FILE\n__GMP_DECLSPEC size_t mpq_out_str (FILE *, int, mpq_srcptr);\n#endif\n\n#define mpq_set __gmpq_set\n__GMP_DECLSPEC void mpq_set (mpq_ptr, mpq_srcptr);\n\n#define mpq_set_d __gmpq_set_d\n__GMP_DECLSPEC void mpq_set_d (mpq_ptr, double);\n\n#define mpq_set_den __gmpq_set_den\n__GMP_DECLSPEC void mpq_set_den (mpq_ptr, mpz_srcptr);\n\n#define mpq_set_f __gmpq_set_f\n__GMP_DECLSPEC void mpq_set_f (mpq_ptr, mpf_srcptr);\n\n#define mpq_set_num __gmpq_set_num\n__GMP_DECLSPEC void mpq_set_num (mpq_ptr, mpz_srcptr);\n\n#define mpq_set_si __gmpq_set_si\n__GMP_DECLSPEC void mpq_set_si (mpq_ptr, signed long int, unsigned long int);\n\n#define mpq_set_str __gmpq_set_str\n__GMP_DECLSPEC int mpq_set_str (mpq_ptr, const char *, int);\n\n#define mpq_set_ui __gmpq_set_ui\n__GMP_DECLSPEC void mpq_set_ui (mpq_ptr, unsigned long int, unsigned long int);\n\n#define mpq_set_z __gmpq_set_z\n__GMP_DECLSPEC void mpq_set_z (mpq_ptr, mpz_srcptr);\n\n#define mpq_sub __gmpq_sub\n__GMP_DECLSPEC void mpq_sub (mpq_ptr, mpq_srcptr, mpq_srcptr);\n\n#define mpq_swap __gmpq_swap\n__GMP_DECLSPEC void mpq_swap (mpq_ptr, mpq_ptr) __GMP_NOTHROW;\n\n\n/**************** Float (i.e. F) routines.  ****************/\n\n#define mpf_abs __gmpf_abs\n__GMP_DECLSPEC void mpf_abs (mpf_ptr, mpf_srcptr);\n\n#define mpf_add __gmpf_add\n__GMP_DECLSPEC void mpf_add (mpf_ptr, mpf_srcptr, mpf_srcptr);\n\n#define mpf_add_ui __gmpf_add_ui\n__GMP_DECLSPEC void mpf_add_ui (mpf_ptr, mpf_srcptr, unsigned long int);\n#define mpf_ceil __gmpf_ceil\n__GMP_DECLSPEC void mpf_ceil (mpf_ptr, mpf_srcptr);\n\n#define mpf_clear __gmpf_clear\n__GMP_DECLSPEC void mpf_clear (mpf_ptr);\n\n#define mpf_clears __gmpf_clears\n__GMP_DECLSPEC void mpf_clears (mpf_ptr, ...);\n\n#define mpf_cmp __gmpf_cmp\n__GMP_DECLSPEC int mpf_cmp (mpf_srcptr, mpf_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpf_cmp_d __gmpf_cmp_d\n__GMP_DECLSPEC int mpf_cmp_d (mpf_srcptr, double) __GMP_ATTRIBUTE_PURE;\n\n#define mpf_cmp_si __gmpf_cmp_si\n__GMP_DECLSPEC int mpf_cmp_si (mpf_srcptr, signed long int) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpf_cmp_ui __gmpf_cmp_ui\n__GMP_DECLSPEC int mpf_cmp_ui (mpf_srcptr, unsigned long int) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpf_div __gmpf_div\n__GMP_DECLSPEC void mpf_div (mpf_ptr, mpf_srcptr, mpf_srcptr);\n\n#define mpf_div_2exp __gmpf_div_2exp\n__GMP_DECLSPEC void mpf_div_2exp (mpf_ptr, mpf_srcptr, mp_bitcnt_t);\n\n#define mpf_div_ui __gmpf_div_ui\n__GMP_DECLSPEC void mpf_div_ui (mpf_ptr, mpf_srcptr, unsigned long int);\n\n#define mpf_dump __gmpf_dump\n__GMP_DECLSPEC void mpf_dump (mpf_srcptr);\n\n#define mpf_eq __gmpf_eq\n__GMP_DECLSPEC int mpf_eq (mpf_srcptr, mpf_srcptr, mp_bitcnt_t) __GMP_ATTRIBUTE_PURE;\n\n#define mpf_fits_sint_p __gmpf_fits_sint_p\n__GMP_DECLSPEC int mpf_fits_sint_p (mpf_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpf_fits_slong_p __gmpf_fits_slong_p\n__GMP_DECLSPEC int mpf_fits_slong_p (mpf_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpf_fits_sshort_p __gmpf_fits_sshort_p\n__GMP_DECLSPEC int mpf_fits_sshort_p (mpf_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpf_fits_uint_p __gmpf_fits_uint_p\n__GMP_DECLSPEC int mpf_fits_uint_p (mpf_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpf_fits_ulong_p __gmpf_fits_ulong_p\n__GMP_DECLSPEC int mpf_fits_ulong_p (mpf_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpf_fits_ushort_p __gmpf_fits_ushort_p\n__GMP_DECLSPEC int mpf_fits_ushort_p (mpf_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpf_floor __gmpf_floor\n__GMP_DECLSPEC void mpf_floor (mpf_ptr, mpf_srcptr);\n\n#define mpf_get_d __gmpf_get_d\n__GMP_DECLSPEC double mpf_get_d (mpf_srcptr) __GMP_ATTRIBUTE_PURE;\n\n#define mpf_get_d_2exp __gmpf_get_d_2exp\n__GMP_DECLSPEC double mpf_get_d_2exp (signed long int *, mpf_srcptr);\n\n#define mpf_get_default_prec __gmpf_get_default_prec\n__GMP_DECLSPEC mp_bitcnt_t mpf_get_default_prec (void) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpf_get_prec __gmpf_get_prec\n__GMP_DECLSPEC mp_bitcnt_t mpf_get_prec (mpf_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpf_get_si __gmpf_get_si\n__GMP_DECLSPEC long mpf_get_si (mpf_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpf_get_str __gmpf_get_str\n__GMP_DECLSPEC char *mpf_get_str (char *, mp_exp_t *, int, size_t, mpf_srcptr);\n\n#define mpf_get_ui __gmpf_get_ui\n__GMP_DECLSPEC unsigned long mpf_get_ui (mpf_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpf_init __gmpf_init\n__GMP_DECLSPEC void mpf_init (mpf_ptr);\n\n#define mpf_init2 __gmpf_init2\n__GMP_DECLSPEC void mpf_init2 (mpf_ptr, mp_bitcnt_t);\n\n#define mpf_inits __gmpf_inits\n__GMP_DECLSPEC void mpf_inits (mpf_ptr, ...);\n\n#define mpf_init_set __gmpf_init_set\n__GMP_DECLSPEC void mpf_init_set (mpf_ptr, mpf_srcptr);\n\n#define mpf_init_set_d __gmpf_init_set_d\n__GMP_DECLSPEC void mpf_init_set_d (mpf_ptr, double);\n\n#define mpf_init_set_si __gmpf_init_set_si\n__GMP_DECLSPEC void mpf_init_set_si (mpf_ptr, signed long int);\n\n#define mpf_init_set_str __gmpf_init_set_str\n__GMP_DECLSPEC int mpf_init_set_str (mpf_ptr, const char *, int);\n\n#define mpf_init_set_ui __gmpf_init_set_ui\n__GMP_DECLSPEC void mpf_init_set_ui (mpf_ptr, unsigned long int);\n\n#define mpf_inp_str __gmpf_inp_str\n#ifdef _GMP_H_HAVE_FILE\n__GMP_DECLSPEC size_t mpf_inp_str (mpf_ptr, FILE *, int);\n#endif\n\n#define mpf_integer_p __gmpf_integer_p\n__GMP_DECLSPEC int mpf_integer_p (mpf_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpf_mul __gmpf_mul\n__GMP_DECLSPEC void mpf_mul (mpf_ptr, mpf_srcptr, mpf_srcptr);\n\n#define mpf_mul_2exp __gmpf_mul_2exp\n__GMP_DECLSPEC void mpf_mul_2exp (mpf_ptr, mpf_srcptr, mp_bitcnt_t);\n\n#define mpf_mul_ui __gmpf_mul_ui\n__GMP_DECLSPEC void mpf_mul_ui (mpf_ptr, mpf_srcptr, unsigned long int);\n\n#define mpf_neg __gmpf_neg\n__GMP_DECLSPEC void mpf_neg (mpf_ptr, mpf_srcptr);\n\n#define mpf_out_str __gmpf_out_str\n#ifdef _GMP_H_HAVE_FILE\n__GMP_DECLSPEC size_t mpf_out_str (FILE *, int, size_t, mpf_srcptr);\n#endif\n\n#define mpf_pow_ui __gmpf_pow_ui\n__GMP_DECLSPEC void mpf_pow_ui (mpf_ptr, mpf_srcptr, unsigned long int);\n\n#define mpf_random2 __gmpf_random2\n__GMP_DECLSPEC void mpf_random2 (mpf_ptr, mp_size_t, mp_exp_t);\n\n#define mpf_reldiff __gmpf_reldiff\n__GMP_DECLSPEC void mpf_reldiff (mpf_ptr, mpf_srcptr, mpf_srcptr);\n\n#define mpf_set __gmpf_set\n__GMP_DECLSPEC void mpf_set (mpf_ptr, mpf_srcptr);\n\n#define mpf_set_d __gmpf_set_d\n__GMP_DECLSPEC void mpf_set_d (mpf_ptr, double);\n\n#define mpf_set_default_prec __gmpf_set_default_prec\n__GMP_DECLSPEC void mpf_set_default_prec (mp_bitcnt_t) __GMP_NOTHROW;\n\n#define mpf_set_prec __gmpf_set_prec\n__GMP_DECLSPEC void mpf_set_prec (mpf_ptr, mp_bitcnt_t);\n\n#define mpf_set_prec_raw __gmpf_set_prec_raw\n__GMP_DECLSPEC void mpf_set_prec_raw (mpf_ptr, mp_bitcnt_t) __GMP_NOTHROW;\n\n#define mpf_set_q __gmpf_set_q\n__GMP_DECLSPEC void mpf_set_q (mpf_ptr, mpq_srcptr);\n\n#define mpf_set_si __gmpf_set_si\n__GMP_DECLSPEC void mpf_set_si (mpf_ptr, signed long int);\n\n#define mpf_set_str __gmpf_set_str\n__GMP_DECLSPEC int mpf_set_str (mpf_ptr, const char *, int);\n\n#define mpf_set_ui __gmpf_set_ui\n__GMP_DECLSPEC void mpf_set_ui (mpf_ptr, unsigned long int);\n\n#define mpf_set_z __gmpf_set_z\n__GMP_DECLSPEC void mpf_set_z (mpf_ptr, mpz_srcptr);\n\n#define mpf_size __gmpf_size\n__GMP_DECLSPEC size_t mpf_size (mpf_srcptr) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpf_sqrt __gmpf_sqrt\n__GMP_DECLSPEC void mpf_sqrt (mpf_ptr, mpf_srcptr);\n\n#define mpf_sqrt_ui __gmpf_sqrt_ui\n__GMP_DECLSPEC void mpf_sqrt_ui (mpf_ptr, unsigned long int);\n\n#define mpf_sub __gmpf_sub\n__GMP_DECLSPEC void mpf_sub (mpf_ptr, mpf_srcptr, mpf_srcptr);\n\n#define mpf_sub_ui __gmpf_sub_ui\n__GMP_DECLSPEC void mpf_sub_ui (mpf_ptr, mpf_srcptr, unsigned long int);\n\n#define mpf_swap __gmpf_swap\n__GMP_DECLSPEC void mpf_swap (mpf_ptr, mpf_ptr) __GMP_NOTHROW;\n\n#define mpf_trunc __gmpf_trunc\n__GMP_DECLSPEC void mpf_trunc (mpf_ptr, mpf_srcptr);\n\n#define mpf_ui_div __gmpf_ui_div\n__GMP_DECLSPEC void mpf_ui_div (mpf_ptr, unsigned long int, mpf_srcptr);\n\n#define mpf_ui_sub __gmpf_ui_sub\n__GMP_DECLSPEC void mpf_ui_sub (mpf_ptr, unsigned long int, mpf_srcptr);\n\n#define mpf_urandomb __gmpf_urandomb\n__GMP_DECLSPEC void mpf_urandomb (mpf_t, gmp_randstate_t, mp_bitcnt_t);\n\n\n/************ Low level positive-integer (i.e. N) routines.  ************/\n\n/* This is ugly, but we need to make user calls reach the prefixed function. */\n\n#define mpn_add __MPN(add)\n#if __GMP_INLINE_PROTOTYPES || defined (__GMP_FORCE_mpn_add)\n__GMP_DECLSPEC mp_limb_t mpn_add (mp_ptr, mp_srcptr, mp_size_t, mp_srcptr, mp_size_t);\n#endif\n\n#define mpn_add_1 __MPN(add_1)\n#if __GMP_INLINE_PROTOTYPES || defined (__GMP_FORCE_mpn_add_1)\n__GMP_DECLSPEC mp_limb_t mpn_add_1 (mp_ptr, mp_srcptr, mp_size_t, mp_limb_t) __GMP_NOTHROW;\n#endif\n\n#define mpn_add_n __MPN(add_n)\n__GMP_DECLSPEC mp_limb_t mpn_add_n (mp_ptr, mp_srcptr, mp_srcptr, mp_size_t);\n\n#define mpn_addmul_1 __MPN(addmul_1)\n__GMP_DECLSPEC mp_limb_t mpn_addmul_1 (mp_ptr, mp_srcptr, mp_size_t, mp_limb_t);\n\n#define mpn_cmp __MPN(cmp)\n#if __GMP_INLINE_PROTOTYPES || defined (__GMP_FORCE_mpn_cmp)\n__GMP_DECLSPEC int mpn_cmp (mp_srcptr, mp_srcptr, mp_size_t) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n#endif\n\n#define mpn_divexact_by3(dst,src,size) \\\n  mpn_divexact_by3c (dst, src, size, __GMP_CAST (mp_limb_t, 0))\n\n#define mpn_divexact_by3c __MPN(divexact_by3c)\n__GMP_DECLSPEC mp_limb_t mpn_divexact_by3c (mp_ptr, mp_srcptr, mp_size_t, mp_limb_t);\n\n#define mpn_divmod_1(qp,np,nsize,dlimb) \\\n  mpn_divrem_1 (qp, __GMP_CAST (mp_size_t, 0), np, nsize, dlimb)\n\n#define mpn_divrem __MPN(divrem)\n__GMP_DECLSPEC mp_limb_t mpn_divrem (mp_ptr, mp_size_t, mp_ptr, mp_size_t, mp_srcptr, mp_size_t);\n\n#define mpn_divrem_1 __MPN(divrem_1)\n__GMP_DECLSPEC mp_limb_t mpn_divrem_1 (mp_ptr, mp_size_t, mp_srcptr, mp_size_t, mp_limb_t);\n\n#define mpn_divrem_2 __MPN(divrem_2)\n__GMP_DECLSPEC mp_limb_t mpn_divrem_2 (mp_ptr, mp_size_t, mp_ptr, mp_size_t, mp_srcptr);\n\n#define mpn_div_qr_2 __MPN(div_qr_2)\n__GMP_DECLSPEC mp_limb_t mpn_div_qr_2 (mp_ptr, mp_ptr, mp_srcptr, mp_size_t, mp_srcptr);\n\n#define mpn_gcd __MPN(gcd)\n__GMP_DECLSPEC mp_size_t mpn_gcd (mp_ptr, mp_ptr, mp_size_t, mp_ptr, mp_size_t);\n\n#define mpn_gcd_1 __MPN(gcd_1)\n__GMP_DECLSPEC mp_limb_t mpn_gcd_1 (mp_srcptr, mp_size_t, mp_limb_t) __GMP_ATTRIBUTE_PURE;\n\n#define mpn_gcdext_1 __MPN(gcdext_1)\n__GMP_DECLSPEC mp_limb_t mpn_gcdext_1 (mp_limb_signed_t *, mp_limb_signed_t *, mp_limb_t, mp_limb_t);\n\n#define mpn_gcdext __MPN(gcdext)\n__GMP_DECLSPEC mp_size_t mpn_gcdext (mp_ptr, mp_ptr, mp_size_t *, mp_ptr, mp_size_t, mp_ptr, mp_size_t);\n\n#define mpn_get_str __MPN(get_str)\n__GMP_DECLSPEC size_t mpn_get_str (unsigned char *, int, mp_ptr, mp_size_t);\n\n#define mpn_hamdist __MPN(hamdist)\n__GMP_DECLSPEC mp_bitcnt_t mpn_hamdist (mp_srcptr, mp_srcptr, mp_size_t) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpn_lshift __MPN(lshift)\n__GMP_DECLSPEC mp_limb_t mpn_lshift (mp_ptr, mp_srcptr, mp_size_t, unsigned int);\n\n#define mpn_mod_1 __MPN(mod_1)\n__GMP_DECLSPEC mp_limb_t mpn_mod_1 (mp_srcptr, mp_size_t, mp_limb_t) __GMP_ATTRIBUTE_PURE;\n\n#define mpn_mul __MPN(mul)\n__GMP_DECLSPEC mp_limb_t mpn_mul (mp_ptr, mp_srcptr, mp_size_t, mp_srcptr, mp_size_t);\n\n#define mpn_mul_1 __MPN(mul_1)\n__GMP_DECLSPEC mp_limb_t mpn_mul_1 (mp_ptr, mp_srcptr, mp_size_t, mp_limb_t);\n\n#define mpn_mul_n __MPN(mul_n)\n__GMP_DECLSPEC void mpn_mul_n (mp_ptr, mp_srcptr, mp_srcptr, mp_size_t);\n\n#define mpn_sqr __MPN(sqr)\n__GMP_DECLSPEC void mpn_sqr (mp_ptr, mp_srcptr, mp_size_t);\n\n#define mpn_neg __MPN(neg)\n#if __GMP_INLINE_PROTOTYPES || defined (__GMP_FORCE_mpn_neg)\n__GMP_DECLSPEC mp_limb_t mpn_neg (mp_ptr, mp_srcptr, mp_size_t);\n#endif\n\n#define mpn_com __MPN(com)\n#if __GMP_INLINE_PROTOTYPES || defined (__GMP_FORCE_mpn_com)\n__GMP_DECLSPEC void mpn_com (mp_ptr, mp_srcptr, mp_size_t);\n#endif\n\n#define mpn_perfect_square_p __MPN(perfect_square_p)\n__GMP_DECLSPEC int mpn_perfect_square_p (mp_srcptr, mp_size_t) __GMP_ATTRIBUTE_PURE;\n\n#define mpn_perfect_power_p __MPN(perfect_power_p)\n__GMP_DECLSPEC int mpn_perfect_power_p (mp_srcptr, mp_size_t) __GMP_ATTRIBUTE_PURE;\n\n#define mpn_popcount __MPN(popcount)\n__GMP_DECLSPEC mp_bitcnt_t mpn_popcount (mp_srcptr, mp_size_t) __GMP_NOTHROW __GMP_ATTRIBUTE_PURE;\n\n#define mpn_pow_1 __MPN(pow_1)\n__GMP_DECLSPEC mp_size_t mpn_pow_1 (mp_ptr, mp_srcptr, mp_size_t, mp_limb_t, mp_ptr);\n\n/* undocumented now, but retained here for upward compatibility */\n#define mpn_preinv_mod_1 __MPN(preinv_mod_1)\n__GMP_DECLSPEC mp_limb_t mpn_preinv_mod_1 (mp_srcptr, mp_size_t, mp_limb_t, mp_limb_t) __GMP_ATTRIBUTE_PURE;\n\n#define mpn_random __MPN(random)\n__GMP_DECLSPEC void mpn_random (mp_ptr, mp_size_t);\n\n#define mpn_random2 __MPN(random2)\n__GMP_DECLSPEC void mpn_random2 (mp_ptr, mp_size_t);\n\n#define mpn_rshift __MPN(rshift)\n__GMP_DECLSPEC mp_limb_t mpn_rshift (mp_ptr, mp_srcptr, mp_size_t, unsigned int);\n\n#define mpn_scan0 __MPN(scan0)\n__GMP_DECLSPEC mp_bitcnt_t mpn_scan0 (mp_srcptr, mp_bitcnt_t) __GMP_ATTRIBUTE_PURE;\n\n#define mpn_scan1 __MPN(scan1)\n__GMP_DECLSPEC mp_bitcnt_t mpn_scan1 (mp_srcptr, mp_bitcnt_t) __GMP_ATTRIBUTE_PURE;\n\n#define mpn_set_str __MPN(set_str)\n__GMP_DECLSPEC mp_size_t mpn_set_str (mp_ptr, const unsigned char *, size_t, int);\n\n#define mpn_sqrtrem __MPN(sqrtrem)\n__GMP_DECLSPEC mp_size_t mpn_sqrtrem (mp_ptr, mp_ptr, mp_srcptr, mp_size_t);\n\n#define mpn_sub __MPN(sub)\n#if __GMP_INLINE_PROTOTYPES || defined (__GMP_FORCE_mpn_sub)\n__GMP_DECLSPEC mp_limb_t mpn_sub (mp_ptr, mp_srcptr, mp_size_t, mp_srcptr, mp_size_t);\n#endif\n\n#define mpn_sub_1 __MPN(sub_1)\n#if __GMP_INLINE_PROTOTYPES || defined (__GMP_FORCE_mpn_sub_1)\n__GMP_DECLSPEC mp_limb_t mpn_sub_1 (mp_ptr, mp_srcptr, mp_size_t, mp_limb_t) __GMP_NOTHROW;\n#endif\n\n#define mpn_sub_n __MPN(sub_n)\n__GMP_DECLSPEC mp_limb_t mpn_sub_n (mp_ptr, mp_srcptr, mp_srcptr, mp_size_t);\n\n#define mpn_submul_1 __MPN(submul_1)\n__GMP_DECLSPEC mp_limb_t mpn_submul_1 (mp_ptr, mp_srcptr, mp_size_t, mp_limb_t);\n\n#define mpn_tdiv_qr __MPN(tdiv_qr)\n__GMP_DECLSPEC void mpn_tdiv_qr (mp_ptr, mp_ptr, mp_size_t, mp_srcptr, mp_size_t, mp_srcptr, mp_size_t);\n\n#define mpn_and_n __MPN(and_n)\n__GMP_DECLSPEC void mpn_and_n (mp_ptr, mp_srcptr, mp_srcptr, mp_size_t);\n#define mpn_andn_n __MPN(andn_n)\n__GMP_DECLSPEC void mpn_andn_n (mp_ptr, mp_srcptr, mp_srcptr, mp_size_t);\n#define mpn_nand_n __MPN(nand_n)\n__GMP_DECLSPEC void mpn_nand_n (mp_ptr, mp_srcptr, mp_srcptr, mp_size_t);\n#define mpn_ior_n __MPN(ior_n)\n__GMP_DECLSPEC void mpn_ior_n (mp_ptr, mp_srcptr, mp_srcptr, mp_size_t);\n#define mpn_iorn_n __MPN(iorn_n)\n__GMP_DECLSPEC void mpn_iorn_n (mp_ptr, mp_srcptr, mp_srcptr, mp_size_t);\n#define mpn_nior_n __MPN(nior_n)\n__GMP_DECLSPEC void mpn_nior_n (mp_ptr, mp_srcptr, mp_srcptr, mp_size_t);\n#define mpn_xor_n __MPN(xor_n)\n__GMP_DECLSPEC void mpn_xor_n (mp_ptr, mp_srcptr, mp_srcptr, mp_size_t);\n#define mpn_xnor_n __MPN(xnor_n)\n__GMP_DECLSPEC void mpn_xnor_n (mp_ptr, mp_srcptr, mp_srcptr, mp_size_t);\n\n#define mpn_copyi __MPN(copyi)\n__GMP_DECLSPEC void mpn_copyi (mp_ptr, mp_srcptr, mp_size_t);\n#define mpn_copyd __MPN(copyd)\n__GMP_DECLSPEC void mpn_copyd (mp_ptr, mp_srcptr, mp_size_t);\n#define mpn_zero __MPN(zero)\n__GMP_DECLSPEC void mpn_zero (mp_ptr, mp_size_t);\n\n/**************** mpz inlines ****************/\n\n/* The following are provided as inlines where possible, but always exist as\n   library functions too, for binary compatibility.\n\n   Within gmp itself this inlining generally isn't relied on, since it\n   doesn't get done for all compilers, whereas if something is worth\n   inlining then it's worth arranging always.\n\n   There are two styles of inlining here.  When the same bit of code is\n   wanted for the inline as for the library version, then __GMP_FORCE_foo\n   arranges for that code to be emitted and the __GMP_EXTERN_INLINE\n   directive suppressed, eg. mpz_fits_uint_p.  When a different bit of code\n   is wanted for the inline than for the library version, then\n   __GMP_FORCE_foo arranges the inline to be suppressed, eg. mpz_abs.  */\n\n#if defined (__GMP_EXTERN_INLINE) && ! defined (__GMP_FORCE_mpz_abs)\n__GMP_EXTERN_INLINE void\nmpz_abs (mpz_ptr __gmp_w, mpz_srcptr __gmp_u)\n{\n  if (__gmp_w != __gmp_u)\n    mpz_set (__gmp_w, __gmp_u);\n  __gmp_w->_mp_size = __GMP_ABS (__gmp_w->_mp_size);\n}\n#endif\n\n#if GMP_NAIL_BITS == 0\n#define __GMPZ_FITS_UTYPE_P(z,maxval)					\\\n  mp_size_t  __gmp_n = z->_mp_size;					\\\n  mp_ptr  __gmp_p = z->_mp_d;						\\\n  return (__gmp_n == 0 || (__gmp_n == 1 && __gmp_p[0] <= maxval));\n#else\n#define __GMPZ_FITS_UTYPE_P(z,maxval)					\\\n  mp_size_t  __gmp_n = z->_mp_size;					\\\n  mp_ptr  __gmp_p = z->_mp_d;						\\\n  return (__gmp_n == 0 || (__gmp_n == 1 && __gmp_p[0] <= maxval)	\\\n	  || (__gmp_n == 2 && __gmp_p[1] <= ((mp_limb_t) maxval >> GMP_NUMB_BITS)));\n#endif\n\n#if defined (__GMP_EXTERN_INLINE) || defined (__GMP_FORCE_mpz_fits_uint_p)\n#if ! defined (__GMP_FORCE_mpz_fits_uint_p)\n__GMP_EXTERN_INLINE\n#endif\nint\nmpz_fits_uint_p (mpz_srcptr __gmp_z) __GMP_NOTHROW\n{\n  __GMPZ_FITS_UTYPE_P (__gmp_z, __GMP_UINT_MAX);\n}\n#endif\n\n#if defined (__GMP_EXTERN_INLINE) || defined (__GMP_FORCE_mpz_fits_ulong_p)\n#if ! defined (__GMP_FORCE_mpz_fits_ulong_p)\n__GMP_EXTERN_INLINE\n#endif\nint\nmpz_fits_ulong_p (mpz_srcptr __gmp_z) __GMP_NOTHROW\n{\n  __GMPZ_FITS_UTYPE_P (__gmp_z, __GMP_ULONG_MAX);\n}\n#endif\n\n#if defined (__GMP_EXTERN_INLINE) || defined (__GMP_FORCE_mpz_fits_ushort_p)\n#if ! defined (__GMP_FORCE_mpz_fits_ushort_p)\n__GMP_EXTERN_INLINE\n#endif\nint\nmpz_fits_ushort_p (mpz_srcptr __gmp_z) __GMP_NOTHROW\n{\n  __GMPZ_FITS_UTYPE_P (__gmp_z, __GMP_USHRT_MAX);\n}\n#endif\n\n#if defined (__GMP_EXTERN_INLINE) || defined (__GMP_FORCE_mpz_get_ui)\n#if ! defined (__GMP_FORCE_mpz_get_ui)\n__GMP_EXTERN_INLINE\n#endif\nunsigned long\nmpz_get_ui (mpz_srcptr __gmp_z) __GMP_NOTHROW\n{\n  mp_ptr __gmp_p = __gmp_z->_mp_d;\n  mp_size_t __gmp_n = __gmp_z->_mp_size;\n  mp_limb_t __gmp_l = __gmp_p[0];\n  /* This is a \"#if\" rather than a plain \"if\" so as to avoid gcc warnings\n     about \"<< GMP_NUMB_BITS\" exceeding the type size, and to avoid Borland\n     C++ 6.0 warnings about condition always true for something like\n     \"__GMP_ULONG_MAX < GMP_NUMB_MASK\".  */\n#if GMP_NAIL_BITS == 0 || defined (_LONG_LONG_LIMB)\n  /* limb==long and no nails, or limb==longlong, one limb is enough */\n  return (__gmp_n != 0 ? __gmp_l : 0);\n#else\n  /* limb==long and nails, need two limbs when available */\n  __gmp_n = __GMP_ABS (__gmp_n);\n  if (__gmp_n <= 1)\n    return (__gmp_n != 0 ? __gmp_l : 0);\n  else\n    return __gmp_l + (__gmp_p[1] << GMP_NUMB_BITS);\n#endif\n}\n#endif\n\n#if defined (__GMP_EXTERN_INLINE) || defined (__GMP_FORCE_mpz_getlimbn)\n#if ! defined (__GMP_FORCE_mpz_getlimbn)\n__GMP_EXTERN_INLINE\n#endif\nmp_limb_t\nmpz_getlimbn (mpz_srcptr __gmp_z, mp_size_t __gmp_n) __GMP_NOTHROW\n{\n  mp_limb_t  __gmp_result = 0;\n  if (__GMP_LIKELY (__gmp_n >= 0 && __gmp_n < __GMP_ABS (__gmp_z->_mp_size)))\n    __gmp_result = __gmp_z->_mp_d[__gmp_n];\n  return __gmp_result;\n}\n#endif\n\n#if defined (__GMP_EXTERN_INLINE) && ! defined (__GMP_FORCE_mpz_neg)\n__GMP_EXTERN_INLINE void\nmpz_neg (mpz_ptr __gmp_w, mpz_srcptr __gmp_u)\n{\n  if (__gmp_w != __gmp_u)\n    mpz_set (__gmp_w, __gmp_u);\n  __gmp_w->_mp_size = - __gmp_w->_mp_size;\n}\n#endif\n\n#if defined (__GMP_EXTERN_INLINE) || defined (__GMP_FORCE_mpz_perfect_square_p)\n#if ! defined (__GMP_FORCE_mpz_perfect_square_p)\n__GMP_EXTERN_INLINE\n#endif\nint\nmpz_perfect_square_p (mpz_srcptr __gmp_a)\n{\n  mp_size_t __gmp_asize;\n  int       __gmp_result;\n\n  __gmp_asize = __gmp_a->_mp_size;\n  __gmp_result = (__gmp_asize >= 0);  /* zero is a square, negatives are not */\n  if (__GMP_LIKELY (__gmp_asize > 0))\n    __gmp_result = mpn_perfect_square_p (__gmp_a->_mp_d, __gmp_asize);\n  return __gmp_result;\n}\n#endif\n\n#if defined (__GMP_EXTERN_INLINE) || defined (__GMP_FORCE_mpz_popcount)\n#if ! defined (__GMP_FORCE_mpz_popcount)\n__GMP_EXTERN_INLINE\n#endif\nmp_bitcnt_t\nmpz_popcount (mpz_srcptr __gmp_u) __GMP_NOTHROW\n{\n  mp_size_t      __gmp_usize;\n  mp_bitcnt_t    __gmp_result;\n\n  __gmp_usize = __gmp_u->_mp_size;\n  __gmp_result = (__gmp_usize < 0 ? __GMP_ULONG_MAX : 0);\n  if (__GMP_LIKELY (__gmp_usize > 0))\n    __gmp_result =  mpn_popcount (__gmp_u->_mp_d, __gmp_usize);\n  return __gmp_result;\n}\n#endif\n\n#if defined (__GMP_EXTERN_INLINE) || defined (__GMP_FORCE_mpz_set_q)\n#if ! defined (__GMP_FORCE_mpz_set_q)\n__GMP_EXTERN_INLINE\n#endif\nvoid\nmpz_set_q (mpz_ptr __gmp_w, mpq_srcptr __gmp_u)\n{\n  mpz_tdiv_q (__gmp_w, mpq_numref (__gmp_u), mpq_denref (__gmp_u));\n}\n#endif\n\n#if defined (__GMP_EXTERN_INLINE) || defined (__GMP_FORCE_mpz_size)\n#if ! defined (__GMP_FORCE_mpz_size)\n__GMP_EXTERN_INLINE\n#endif\nsize_t\nmpz_size (mpz_srcptr __gmp_z) __GMP_NOTHROW\n{\n  return __GMP_ABS (__gmp_z->_mp_size);\n}\n#endif\n\n\n/**************** mpq inlines ****************/\n\n#if defined (__GMP_EXTERN_INLINE) && ! defined (__GMP_FORCE_mpq_abs)\n__GMP_EXTERN_INLINE void\nmpq_abs (mpq_ptr __gmp_w, mpq_srcptr __gmp_u)\n{\n  if (__gmp_w != __gmp_u)\n    mpq_set (__gmp_w, __gmp_u);\n  __gmp_w->_mp_num._mp_size = __GMP_ABS (__gmp_w->_mp_num._mp_size);\n}\n#endif\n\n#if defined (__GMP_EXTERN_INLINE) && ! defined (__GMP_FORCE_mpq_neg)\n__GMP_EXTERN_INLINE void\nmpq_neg (mpq_ptr __gmp_w, mpq_srcptr __gmp_u)\n{\n  if (__gmp_w != __gmp_u)\n    mpq_set (__gmp_w, __gmp_u);\n  __gmp_w->_mp_num._mp_size = - __gmp_w->_mp_num._mp_size;\n}\n#endif\n\n\n/**************** mpn inlines ****************/\n\n/* The comments with __GMPN_ADD_1 below apply here too.\n\n   The test for FUNCTION returning 0 should predict well.  If it's assumed\n   {yp,ysize} will usually have a random number of bits then the high limb\n   won't be full and a carry out will occur a good deal less than 50% of the\n   time.\n\n   ysize==0 isn't a documented feature, but is used internally in a few\n   places.\n\n   Producing cout last stops it using up a register during the main part of\n   the calculation, though gcc (as of 3.0) on an \"if (mpn_add (...))\"\n   doesn't seem able to move the true and false legs of the conditional up\n   to the two places cout is generated.  */\n\n#define __GMPN_AORS(cout, wp, xp, xsize, yp, ysize, FUNCTION, TEST)     \\\n  do {                                                                  \\\n    mp_size_t  __gmp_i;                                                 \\\n    mp_limb_t  __gmp_x;                                                 \\\n                                                                        \\\n    /* ASSERT ((ysize) >= 0); */                                        \\\n    /* ASSERT ((xsize) >= (ysize)); */                                  \\\n    /* ASSERT (MPN_SAME_OR_SEPARATE2_P (wp, xsize, xp, xsize)); */      \\\n    /* ASSERT (MPN_SAME_OR_SEPARATE2_P (wp, xsize, yp, ysize)); */      \\\n                                                                        \\\n    __gmp_i = (ysize);                                                  \\\n    if (__gmp_i != 0)                                                   \\\n      {                                                                 \\\n        if (FUNCTION (wp, xp, yp, __gmp_i))                             \\\n          {                                                             \\\n            do                                                          \\\n              {                                                         \\\n                if (__gmp_i >= (xsize))                                 \\\n                  {                                                     \\\n                    (cout) = 1;                                         \\\n                    goto __gmp_done;                                    \\\n                  }                                                     \\\n                __gmp_x = (xp)[__gmp_i];                                \\\n              }                                                         \\\n            while (TEST);                                               \\\n          }                                                             \\\n      }                                                                 \\\n    if ((wp) != (xp))                                                   \\\n      __GMPN_COPY_REST (wp, xp, xsize, __gmp_i);                        \\\n    (cout) = 0;                                                         \\\n  __gmp_done:                                                           \\\n    ;                                                                   \\\n  } while (0)\n\n#define __GMPN_ADD(cout, wp, xp, xsize, yp, ysize)              \\\n  __GMPN_AORS (cout, wp, xp, xsize, yp, ysize, mpn_add_n,       \\\n               (((wp)[__gmp_i++] = (__gmp_x + 1) & GMP_NUMB_MASK) == 0))\n#define __GMPN_SUB(cout, wp, xp, xsize, yp, ysize)              \\\n  __GMPN_AORS (cout, wp, xp, xsize, yp, ysize, mpn_sub_n,       \\\n               (((wp)[__gmp_i++] = (__gmp_x - 1) & GMP_NUMB_MASK), __gmp_x == 0))\n\n\n/* The use of __gmp_i indexing is designed to ensure a compile time src==dst\n   remains nice and clear to the compiler, so that __GMPN_COPY_REST can\n   disappear, and the load/add/store gets a chance to become a\n   read-modify-write on CISC CPUs.\n\n   Alternatives:\n\n   Using a pair of pointers instead of indexing would be possible, but gcc\n   isn't able to recognise compile-time src==dst in that case, even when the\n   pointers are incremented more or less together.  Other compilers would\n   very likely have similar difficulty.\n\n   gcc could use \"if (__builtin_constant_p(src==dst) && src==dst)\" or\n   similar to detect a compile-time src==dst.  This works nicely on gcc\n   2.95.x, it's not good on gcc 3.0 where __builtin_constant_p(p==p) seems\n   to be always false, for a pointer p.  But the current code form seems\n   good enough for src==dst anyway.\n\n   gcc on x86 as usual doesn't give particularly good flags handling for the\n   carry/borrow detection.  It's tempting to want some multi instruction asm\n   blocks to help it, and this was tried, but in truth there's only a few\n   instructions to save and any gain is all too easily lost by register\n   juggling setting up for the asm.  */\n\n#if GMP_NAIL_BITS == 0\n#define __GMPN_AORS_1(cout, dst, src, n, v, OP, CB)		\\\n  do {								\\\n    mp_size_t  __gmp_i;						\\\n    mp_limb_t  __gmp_x, __gmp_r;                                \\\n								\\\n    /* ASSERT ((n) >= 1); */					\\\n    /* ASSERT (MPN_SAME_OR_SEPARATE_P (dst, src, n)); */	\\\n								\\\n    __gmp_x = (src)[0];						\\\n    __gmp_r = __gmp_x OP (v);                                   \\\n    (dst)[0] = __gmp_r;						\\\n    if (CB (__gmp_r, __gmp_x, (v)))                             \\\n      {								\\\n	(cout) = 1;						\\\n	for (__gmp_i = 1; __gmp_i < (n);)                       \\\n	  {							\\\n	    __gmp_x = (src)[__gmp_i];                           \\\n	    __gmp_r = __gmp_x OP 1;                             \\\n	    (dst)[__gmp_i] = __gmp_r;                           \\\n	    ++__gmp_i;						\\\n	    if (!CB (__gmp_r, __gmp_x, 1))                      \\\n	      {							\\\n		if ((src) != (dst))				\\\n		  __GMPN_COPY_REST (dst, src, n, __gmp_i);      \\\n		(cout) = 0;					\\\n		break;						\\\n	      }							\\\n	  }							\\\n      }								\\\n    else							\\\n      {								\\\n	if ((src) != (dst))					\\\n	  __GMPN_COPY_REST (dst, src, n, 1);			\\\n	(cout) = 0;						\\\n      }								\\\n  } while (0)\n#endif\n\n#if GMP_NAIL_BITS >= 1\n#define __GMPN_AORS_1(cout, dst, src, n, v, OP, CB)		\\\n  do {								\\\n    mp_size_t  __gmp_i;						\\\n    mp_limb_t  __gmp_x, __gmp_r;				\\\n								\\\n    /* ASSERT ((n) >= 1); */					\\\n    /* ASSERT (MPN_SAME_OR_SEPARATE_P (dst, src, n)); */	\\\n								\\\n    __gmp_x = (src)[0];						\\\n    __gmp_r = __gmp_x OP (v);					\\\n    (dst)[0] = __gmp_r & GMP_NUMB_MASK;				\\\n    if (__gmp_r >> GMP_NUMB_BITS != 0)				\\\n      {								\\\n	(cout) = 1;						\\\n	for (__gmp_i = 1; __gmp_i < (n);)			\\\n	  {							\\\n	    __gmp_x = (src)[__gmp_i];				\\\n	    __gmp_r = __gmp_x OP 1;				\\\n	    (dst)[__gmp_i] = __gmp_r & GMP_NUMB_MASK;		\\\n	    ++__gmp_i;						\\\n	    if (__gmp_r >> GMP_NUMB_BITS == 0)			\\\n	      {							\\\n		if ((src) != (dst))				\\\n		  __GMPN_COPY_REST (dst, src, n, __gmp_i);	\\\n		(cout) = 0;					\\\n		break;						\\\n	      }							\\\n	  }							\\\n      }								\\\n    else							\\\n      {								\\\n	if ((src) != (dst))					\\\n	  __GMPN_COPY_REST (dst, src, n, 1);			\\\n	(cout) = 0;						\\\n      }								\\\n  } while (0)\n#endif\n\n#define __GMPN_ADDCB(r,x,y) ((r) < (y))\n#define __GMPN_SUBCB(r,x,y) ((x) < (y))\n\n#define __GMPN_ADD_1(cout, dst, src, n, v)	     \\\n  __GMPN_AORS_1(cout, dst, src, n, v, +, __GMPN_ADDCB)\n#define __GMPN_SUB_1(cout, dst, src, n, v)	     \\\n  __GMPN_AORS_1(cout, dst, src, n, v, -, __GMPN_SUBCB)\n\n\n/* Compare {xp,size} and {yp,size}, setting \"result\" to positive, zero or\n   negative.  size==0 is allowed.  On random data usually only one limb will\n   need to be examined to get a result, so it's worth having it inline.  */\n#define __GMPN_CMP(result, xp, yp, size)                                \\\n  do {                                                                  \\\n    mp_size_t  __gmp_i;                                                 \\\n    mp_limb_t  __gmp_x, __gmp_y;                                        \\\n                                                                        \\\n    /* ASSERT ((size) >= 0); */                                         \\\n                                                                        \\\n    (result) = 0;                                                       \\\n    __gmp_i = (size);                                                   \\\n    while (--__gmp_i >= 0)                                              \\\n      {                                                                 \\\n        __gmp_x = (xp)[__gmp_i];                                        \\\n        __gmp_y = (yp)[__gmp_i];                                        \\\n        if (__gmp_x != __gmp_y)                                         \\\n          {                                                             \\\n            /* Cannot use __gmp_x - __gmp_y, may overflow an \"int\" */   \\\n            (result) = (__gmp_x > __gmp_y ? 1 : -1);                    \\\n            break;                                                      \\\n          }                                                             \\\n      }                                                                 \\\n  } while (0)\n\n\n#if defined (__GMPN_COPY) && ! defined (__GMPN_COPY_REST)\n#define __GMPN_COPY_REST(dst, src, size, start)                 \\\n  do {                                                          \\\n    /* ASSERT ((start) >= 0); */                                \\\n    /* ASSERT ((start) <= (size)); */                           \\\n    __GMPN_COPY ((dst)+(start), (src)+(start), (size)-(start)); \\\n  } while (0)\n#endif\n\n/* Copy {src,size} to {dst,size}, starting at \"start\".  This is designed to\n   keep the indexing dst[j] and src[j] nice and simple for __GMPN_ADD_1,\n   __GMPN_ADD, etc.  */\n#if ! defined (__GMPN_COPY_REST)\n#define __GMPN_COPY_REST(dst, src, size, start)                 \\\n  do {                                                          \\\n    mp_size_t __gmp_j;                                          \\\n    /* ASSERT ((size) >= 0); */                                 \\\n    /* ASSERT ((start) >= 0); */                                \\\n    /* ASSERT ((start) <= (size)); */                           \\\n    /* ASSERT (MPN_SAME_OR_SEPARATE_P (dst, src, size)); */     \\\n    __GMP_CRAY_Pragma (\"_CRI ivdep\");                           \\\n    for (__gmp_j = (start); __gmp_j < (size); __gmp_j++)        \\\n      (dst)[__gmp_j] = (src)[__gmp_j];                          \\\n  } while (0)\n#endif\n\n/* Enhancement: Use some of the smarter code from gmp-impl.h.  Maybe use\n   mpn_copyi if there's a native version, and if we don't mind demanding\n   binary compatibility for it (on targets which use it).  */\n\n#if ! defined (__GMPN_COPY)\n#define __GMPN_COPY(dst, src, size)   __GMPN_COPY_REST (dst, src, size, 0)\n#endif\n\n\n#if defined (__GMP_EXTERN_INLINE) || defined (__GMP_FORCE_mpn_add)\n#if ! defined (__GMP_FORCE_mpn_add)\n__GMP_EXTERN_INLINE\n#endif\nmp_limb_t\nmpn_add (mp_ptr __gmp_wp, mp_srcptr __gmp_xp, mp_size_t __gmp_xsize, mp_srcptr __gmp_yp, mp_size_t __gmp_ysize)\n{\n  mp_limb_t  __gmp_c;\n  __GMPN_ADD (__gmp_c, __gmp_wp, __gmp_xp, __gmp_xsize, __gmp_yp, __gmp_ysize);\n  return __gmp_c;\n}\n#endif\n\n#if defined (__GMP_EXTERN_INLINE) || defined (__GMP_FORCE_mpn_add_1)\n#if ! defined (__GMP_FORCE_mpn_add_1)\n__GMP_EXTERN_INLINE\n#endif\nmp_limb_t\nmpn_add_1 (mp_ptr __gmp_dst, mp_srcptr __gmp_src, mp_size_t __gmp_size, mp_limb_t __gmp_n) __GMP_NOTHROW\n{\n  mp_limb_t  __gmp_c;\n  __GMPN_ADD_1 (__gmp_c, __gmp_dst, __gmp_src, __gmp_size, __gmp_n);\n  return __gmp_c;\n}\n#endif\n\n#if defined (__GMP_EXTERN_INLINE) || defined (__GMP_FORCE_mpn_cmp)\n#if ! defined (__GMP_FORCE_mpn_cmp)\n__GMP_EXTERN_INLINE\n#endif\nint\nmpn_cmp (mp_srcptr __gmp_xp, mp_srcptr __gmp_yp, mp_size_t __gmp_size) __GMP_NOTHROW\n{\n  int __gmp_result;\n  __GMPN_CMP (__gmp_result, __gmp_xp, __gmp_yp, __gmp_size);\n  return __gmp_result;\n}\n#endif\n\n#if defined (__GMP_EXTERN_INLINE) || defined (__GMP_FORCE_mpn_sub)\n#if ! defined (__GMP_FORCE_mpn_sub)\n__GMP_EXTERN_INLINE\n#endif\nmp_limb_t\nmpn_sub (mp_ptr __gmp_wp, mp_srcptr __gmp_xp, mp_size_t __gmp_xsize, mp_srcptr __gmp_yp, mp_size_t __gmp_ysize)\n{\n  mp_limb_t  __gmp_c;\n  __GMPN_SUB (__gmp_c, __gmp_wp, __gmp_xp, __gmp_xsize, __gmp_yp, __gmp_ysize);\n  return __gmp_c;\n}\n#endif\n\n#if defined (__GMP_EXTERN_INLINE) || defined (__GMP_FORCE_mpn_sub_1)\n#if ! defined (__GMP_FORCE_mpn_sub_1)\n__GMP_EXTERN_INLINE\n#endif\nmp_limb_t\nmpn_sub_1 (mp_ptr __gmp_dst, mp_srcptr __gmp_src, mp_size_t __gmp_size, mp_limb_t __gmp_n) __GMP_NOTHROW\n{\n  mp_limb_t  __gmp_c;\n  __GMPN_SUB_1 (__gmp_c, __gmp_dst, __gmp_src, __gmp_size, __gmp_n);\n  return __gmp_c;\n}\n#endif\n\n#if defined (__GMP_EXTERN_INLINE) || defined (__GMP_FORCE_mpn_neg)\n#if ! defined (__GMP_FORCE_mpn_neg)\n__GMP_EXTERN_INLINE\n#endif\nmp_limb_t\nmpn_neg (mp_ptr __gmp_rp, mp_srcptr __gmp_up, mp_size_t __gmp_n)\n{\n  mp_limb_t __gmp_ul, __gmp_cy;\n  __gmp_cy = 0;\n  do {\n      __gmp_ul = *__gmp_up++;\n      *__gmp_rp++ = -__gmp_ul - __gmp_cy;\n      __gmp_cy |= __gmp_ul != 0;\n  } while (--__gmp_n != 0);\n  return __gmp_cy;\n}\n#endif\n\n#if defined (__cplusplus)\n}\n#endif\n\n\n/* Allow faster testing for negative, zero, and positive.  */\n#define mpz_sgn(Z) ((Z)->_mp_size < 0 ? -1 : (Z)->_mp_size > 0)\n#define mpf_sgn(F) ((F)->_mp_size < 0 ? -1 : (F)->_mp_size > 0)\n#define mpq_sgn(Q) ((Q)->_mp_num._mp_size < 0 ? -1 : (Q)->_mp_num._mp_size > 0)\n\n/* When using GCC, optimize certain common comparisons.  */\n#if defined (__GNUC__) && __GNUC__ >= 2\n#define mpz_cmp_ui(Z,UI) \\\n  (__builtin_constant_p (UI) && (UI) == 0				\\\n   ? mpz_sgn (Z) : _mpz_cmp_ui (Z,UI))\n#define mpz_cmp_si(Z,SI) \\\n  (__builtin_constant_p (SI) && (SI) == 0 ? mpz_sgn (Z)			\\\n   : __builtin_constant_p (SI) && (SI) > 0				\\\n    ? _mpz_cmp_ui (Z, __GMP_CAST (unsigned long int, SI))		\\\n   : _mpz_cmp_si (Z,SI))\n#define mpq_cmp_ui(Q,NUI,DUI) \\\n  (__builtin_constant_p (NUI) && (NUI) == 0				\\\n   ? mpq_sgn (Q) : _mpq_cmp_ui (Q,NUI,DUI))\n#define mpq_cmp_si(q,n,d)                       \\\n  (__builtin_constant_p ((n) >= 0) && (n) >= 0  \\\n   ? mpq_cmp_ui (q, __GMP_CAST (unsigned long, n), d) \\\n   : _mpq_cmp_si (q, n, d))\n#else\n#define mpz_cmp_ui(Z,UI) _mpz_cmp_ui (Z,UI)\n#define mpz_cmp_si(Z,UI) _mpz_cmp_si (Z,UI)\n#define mpq_cmp_ui(Q,NUI,DUI) _mpq_cmp_ui (Q,NUI,DUI)\n#define mpq_cmp_si(q,n,d)  _mpq_cmp_si(q,n,d)\n#endif\n\n\n/* Using \"&\" rather than \"&&\" means these can come out branch-free.  Every\n   mpz_t has at least one limb allocated, so fetching the low limb is always\n   allowed.  */\n#define mpz_odd_p(z)   (((z)->_mp_size != 0) & __GMP_CAST (int, (z)->_mp_d[0]))\n#define mpz_even_p(z)  (! mpz_odd_p (z))\n\n\n/**************** C++ routines ****************/\n\n#ifdef __cplusplus\n__GMP_DECLSPEC_XX std::ostream& operator<< (std::ostream &, mpz_srcptr);\n__GMP_DECLSPEC_XX std::ostream& operator<< (std::ostream &, mpq_srcptr);\n__GMP_DECLSPEC_XX std::ostream& operator<< (std::ostream &, mpf_srcptr);\n__GMP_DECLSPEC_XX std::istream& operator>> (std::istream &, mpz_ptr);\n__GMP_DECLSPEC_XX std::istream& operator>> (std::istream &, mpq_ptr);\n__GMP_DECLSPEC_XX std::istream& operator>> (std::istream &, mpf_ptr);\n#endif\n\n\n/* Source-level compatibility with GMP 2 and earlier. */\n#define mpn_divmod(qp,np,nsize,dp,dsize) \\\n  mpn_divrem (qp, __GMP_CAST (mp_size_t, 0), np, nsize, dp, dsize)\n\n/* Source-level compatibility with GMP 1.  */\n#define mpz_mdiv	mpz_fdiv_q\n#define mpz_mdivmod	mpz_fdiv_qr\n#define mpz_mmod	mpz_fdiv_r\n#define mpz_mdiv_ui	mpz_fdiv_q_ui\n#define mpz_mdivmod_ui(q,r,n,d) \\\n  (((r) == 0) ? mpz_fdiv_q_ui (q,n,d) : mpz_fdiv_qr_ui (q,r,n,d))\n#define mpz_mmod_ui(r,n,d) \\\n  (((r) == 0) ? mpz_fdiv_ui (n,d) : mpz_fdiv_r_ui (r,n,d))\n\n/* Useful synonyms, but not quite compatible with GMP 1.  */\n#define mpz_div		mpz_fdiv_q\n#define mpz_divmod	mpz_fdiv_qr\n#define mpz_div_ui	mpz_fdiv_q_ui\n#define mpz_divmod_ui	mpz_fdiv_qr_ui\n#define mpz_div_2exp	mpz_fdiv_q_2exp\n#define mpz_mod_2exp	mpz_fdiv_r_2exp\n\nenum\n{\n  GMP_ERROR_NONE = 0,\n  GMP_ERROR_UNSUPPORTED_ARGUMENT = 1,\n  GMP_ERROR_DIVISION_BY_ZERO = 2,\n  GMP_ERROR_SQRT_OF_NEGATIVE = 4,\n  GMP_ERROR_INVALID_ARGUMENT = 8\n};\n\n/* Define CC and CFLAGS which were used to build this version of GMP */\n#define __GMP_CC \"@CC@\"\n#define __GMP_CFLAGS \"@CFLAGS@\"\n\n/* Major version number is the value of __GNU_MP__ too, above and in mp.h. */\n#define __GNU_MP_VERSION            5\n#define __GNU_MP_VERSION_MINOR      1\n#define __GNU_MP_VERSION_PATCHLEVEL 3\n#define __GNU_MP_RELEASE (__GNU_MP_VERSION * 10000 + __GNU_MP_VERSION_MINOR * 100 + __GNU_MP_VERSION_PATCHLEVEL)\n\n#define __GMP_H__\n#endif /* __GMP_H__ */\n",
					"file": "/Volumes/esp-open-sdk/esp-open-sdk/crosstool-NG/.build/src/gmp-5.1.3/gmp-h.in",
					"file_size": 79864,
					"file_write_time": 131026319590000000,
					"settings":
					{
						"buffer_size": 79864,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 129.0,
				"last_filter": "focu",
				"selected_items":
				[
					[
						"focu",
						"Focus File on Sidebar"
					],
					[
						"sshc",
						"Set Syntax: SSH Config"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"path",
						"File: Copy Path"
					],
					[
						"c++",
						"Set Syntax: C++"
					],
					[
						"pat",
						"File: Copy Path"
					],
					[
						"move",
						"File: Move"
					],
					[
						"copy",
						"File: Copy Path"
					],
					[
						"focus",
						"Focus File on Sidebar"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"psth",
						"Permute Lines: Shuffle"
					],
					[
						"make",
						"Set Syntax: Makefile"
					],
					[
						"makef",
						"Set Syntax: Makefile"
					],
					[
						"refre",
						"Side Bar: Refresh"
					],
					[
						"refr",
						"Side Bar: Refresh"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"syc+",
						"Set Syntax: C++"
					],
					[
						"",
						"Copy File Path"
					],
					[
						"focud",
						"Focus File on Sidebar"
					],
					[
						"syn",
						"Set Syntax: C++"
					],
					[
						"sublime",
						"Colorsublime: Install Theme"
					],
					[
						"foc",
						"Focus File on Sidebar"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"cop",
						"Copy File Path"
					],
					[
						"ref",
						"Side Bar: Refresh"
					],
					[
						"color",
						"Colorsublime: Install Theme"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"read",
						"ReadmePlease"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"package",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"instl",
						"Package Control: Install Package"
					]
				],
				"width": 449.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/Volumes/5T/ServiceData/xdev/xcode-gcc",
				"/Volumes/5T/ServiceData/xdev/xcode-gcc/GCC 4.9.xcplugin",
				"/Volumes/5T/ServiceData/xdev/xcode-gcc/GCC 4.9.xcplugin/Contents",
				"/Volumes/5T/ServiceData/xdev/xcode-gcc/GCC 4.9.xcplugin/Contents/Resources",
				"/Volumes/5T/ServiceData/xdev/xcode-gcc/GCC 4.9.xcplugin/Contents/Resources/English.lproj",
				"/Volumes/5T/ServiceData/xdev/xcode-gcc/GCC 5.2.xcplugin",
				"/Volumes/5T/ServiceData/xdev/xcode-gcc/GCC 5.2.xcplugin/Contents"
			],
			"file_history":
			[
				"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/IOKit/usb/IOUSBHostDevice.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/rsub/rsub.sublime-settings",
				"/sketch/libraries/ADC/doxygen/html/search/typedefs_73.html",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/sketch/libraries/Alexduino/src/Alexduino.cpp",
				"/sketch/libraries.off/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/Pin.h",
				"/sketch/libraries/Pin/src/Pin.cpp",
				"/sketch/libraries/OneButton/OneButton.cpp",
				"/sketch/libraries/OneButton/OneButton.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
				"/Volumes/5T/_dl/ShiftRegister.h",
				"/sketch/libraries/Talkie/talkie.cpp",
				"/sketch/libraries/Talkie/README.md",
				"/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/Arduino.h",
				"/sketch/libraries/Alexduino/src/Alexduino.h",
				"/sketch/My7Seg/My7Seg.ino",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.h",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.cpp",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
				"/sketch/libraries/SevenSegment/SevenSegment.h",
				"/sketch/libraries/SevenSegment/SevenSegment.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/My7Seg/My7Seg.ino",
				"/sketch/libraries/ICs/4511.h",
				"/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
				"/sketch/libraries/ICs/4511.cpp",
				"/sketch/libraries.off/BCDTo7Seg/examples/b4511_counter/b4511_counter.ino",
				"/sketch/libraries/BCDTo7Seg.virgin/BCDTo7Seg.h",
				"/sketch/libraries/Talkie/examples/_2_Voltmeter/_2_Voltmeter.ino",
				"/sketch/libraries/Talkie/talkie.h",
				"/sketch/libraries/Potentiometer/Potentiometer.h",
				"/sketch/libraries/Potentiometer/Potentiometer.cpp",
				"/sketch/libraries/ansiterm/readme.md",
				"/sketch/libraries/AsyncDelay/src/AsyncDelay.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/WString.h",
				"/sketch/libraries.off/ArduinoJson/third-party/gtest-1.7.0/xcode/Config/FrameworkTarget.xcconfig",
				"/sketch/hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBoldOblique12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBold12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp",
				"/sketch/libraries/LED/LED.cpp",
				"/sketch/libraries/Color/Color.h",
				"/sketch/libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h",
				"/sketch/libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/LUFA/Drivers/Board/Board.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII/makefile",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/AlexAVR/avr/programmers.txt",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.no.h",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.h",
				"/sketch/hardware/AlexAVR/avr/platform.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/SimpleThrottle/SimpleThrottle.ino",
				"/sketch/libraries/Handler/Handler.cpp",
				"/sketch/libraries/Handler/examples/CanYouHandleIt/CanYouHandleIt.ino",
				"/sketch/libraries/Handler/Handler.h",
				"/sketch/libraries/LED/LED.h",
				"/sketch/libraries/Throttle/examples/GoGoGoTiny/GoGoGoTiny.ino",
				"/sketch/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/libraries/Throttle/Throttle.cpp",
				"/sketch/libraries/GPIO/src/PinGroup.h",
				"/sketch/libraries/TimerLib/PinEffector.h",
				"/sketch/libraries/TimerLib/utility/FastDelegate.h",
				"/sketch/LEDme/LED.h",
				"/sketch/libraries/Segment7/Segment7.pdf",
				"/sketch/libraries/StackArray/StackArray.h",
				"/sketch/hardware/AlexAVR/avr/boards.txt",
				"/sketch/libraries/TimerLib/SimpleTimer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/LED/library.properties",
				"/sketch/pinguino.bootloader.c",
				"/sketch/hardware/avr-openhardware/avr/avrdude.conf",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.cpp",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.h",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.cpp",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.h",
				"/sketch/hardware/Cosa/avr/platform.txt",
				"/sketch/hardware/Cosa/avr/sub-modules",
				"/sketch/libraries/Adafruit_GFX_Library/gfxfont.h",
				"/sketch/libraries/Pin/src/boards/attinyX5.h",
				"/sketch/ACS712/xACS712/xACS712/Configurations/Adafruit Trinket 5V-16MHz.xcconfig",
				"/sketch/hardware/AlexAVR/avr/programmers.txt",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/sketch/libraries/GPIO/src/GPIO.h",
				"/sketch/libraries/Pin/library.properties",
				"/sketch/libraries/Pin/src/boards/others.h",
				"/sketch/libraries/GPIO/library.properties",
				"/sketch/libraries/GPIO/src/GPIO.cpp",
				"/sketch/hardware/google-tiny/avr/cores/tiny/WProgram.h",
				"/sketch/Classy/.pioenvs/nodemcu/FrameworkArduino/Arduino.h",
				"/sketch/hardware/google-tiny/avr/cores/tiny/Arduino.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/neomatrix-serial-input/neomatrixserial/neomatrixserial.ino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/breadboard/avr/boards.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/FastLED/FastLED.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Chrono/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Delegate.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/WiringFrameworkDependencies.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Interrupts.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Timer.h",
				"/opt/smi8ng",
				"/opt/sping",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/examples/GoGoGo/GoGoGo.ino",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.cpp",
				"/Users/localadmin/.macosz/modules/alex/functions/gzipit",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Periodic/Periodic.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/UdpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/TcpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/DriverPWM.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/LICENSE",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Makefile-rboot.mk",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/.travis.yml",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/samples/Basic_Runloop/app/application.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/SmingCore.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Switch File Deluxe/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Timer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Delegate.h"
			],
			"find":
			{
				"height": 35.0
			},
			"find_in_files":
			{
				"height": 96.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"DeviceRequest",
					"tty",
					"runtime",
					"runtim",
					"byte",
					"open",
					"UInt",
					"UInt ",
					"UInt",
					"inha",
					"unsigned int8_t",
					"UInt",
					"smile_bmp",
					"UInt",
					"my_4511",
					"on",
					",",
					"my_4511",
					"IC_4511",
					"&sp",
					"const uint8_t \\*(.*)\\s*PROGMEM",
					"const uint8_t (.*)\\[\\]",
					"(sp",
					"uint8_t s",
					";\nuint8_t ",
					"7129",
					"Button 2",
					"analog",
					"ANALOg_MAX",
					"PWM",
					"speed",
					"button2",
					"button",
					"button2",
					"button1",
					"0x.., \\/\\* (.).*",
					"0x5B, /* 2 */",
					"*/\n",
					"0x.., \\/\\* (.).*",
					"0x7C, /* b */",
					"cursor",
					"setTextColor",
					"expi",
					"handl",
					"test",
					"begin",
					"matrix.",
					"matr",
					"());",
					"fillScreen",
					"Adafruit_NeoMatrix",
					"avrdude",
					"USBKEY",
					"BOARD",
					"digital_pin_to_bit_mask_PGM",
					"m1284p",
					"uni",
					"m1284p",
					"ing",
					"PULSE",
					"LEDClass",
					"enum",
					"#",
					"0x05",
					"0x054",
					"0x06",
					"1284",
					"05",
					"sig",
					"__cxa_pure_virtual",
					"__AVR_ATTiny",
					"__AVR_ATmega32U4__",
					"recipe.preproc.macros",
					"__cxa_pure_virtual",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"pioenvs/",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"GFX",
					"pure",
					"effe",
					"toggle\\(",
					"on\\(\\)",
					"on()",
					"on",
					"off",
					"#define.*PWM.*\\w[0-9]*",
					"#define.*ANALOG.*\\w[0-9]*",
					"#define.*255",
					"#define.*ANALOG.*255",
					"#define.*PWM.*255",
					"#define.*PWM.*",
					"PWM_RANGE",
					"PWM",
					"REGD",
					"DEF_",
					"DEF_THR",
					"FAST",
					"                           ",
					"FAST",
					"PWM",
					"sap",
					"line",
					"move",
					"up\"",
					"time",
					"className",
					"rightn",
					"Print",
					"print",
					"DEB",
					"\nDEBO",
					"DEBO",
					"\nDEBO",
					"DEBO",
					"rest",
					"define.*\\sON\\s",
					"rest",
					"digitalWrite",
					"define.*\\sON\\s",
					"define.*\\sON",
					"define.*ON",
					"\\bD5\\b",
					"D5",
					"ws",
					"isdi",
					"ud"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
					"uint8_t",
					"unsigned int",
					"int8_t",
					"unsigned int",
					"sp",
					"const PROGMEM uint8_t $1[]",
					"const uint8_t * $1",
					"(&sp",
					"const uint8_t s",
					",\n              ",
					"Button 2 (gas)",
					"brake",
					"gas",
					"\"$1\",",
					"",
					"LED"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/Volumes/5T/ServiceData/xdev/xcode-gcc"
				}
			],
			"groups":
			[
				{
					"selected": 1,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Volumes/5T/ServiceData/xdev/xcode-gcc/GCC 5.2.xcplugin/Contents/version.plist",
							"semi_transient": true,
							"settings":
							{
								"buffer_size": 456,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/XML/XML.sublime-syntax",
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/Volumes/esp-open-sdk/esp-open-sdk/crosstool-NG/.build/src/gmp-5.1.3/gmp-h.in",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 79864,
								"regions":
								{
								},
								"selection":
								[
									[
										2042,
										2042
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 511.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 25.0
			},
			"input":
			{
				"height": 36.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1360 741 0 0 1360 745 ",
			"project": "",
			"replace":
			{
				"height": 46.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"my",
						"My7Seg/My7Seg.ino"
					],
					[
						"my7",
						"libraries/ADC/doxygen/html/search/typedefs_73.html"
					],
					[
						"orig",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"4511",
						"libraries/ICs/4511.h"
					],
					[
						"my7se",
						"My7Seg/My7Seg.ino"
					],
					[
						"matrixt",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"cancom",
						"libraries/Alexduino/examples/CanCompile/CanCompile.ino"
					],
					[
						"led",
						"libraries/LED/LED.h"
					],
					[
						"sim",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"simpl",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"mys",
						"My7Seg/My7Seg.ino"
					],
					[
						"aledxdu",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"async",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"matrixtest",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde"
					],
					[
						"alexdui",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"wstrin",
						"hardware/AlexAVR/avr/cores/arduino/WString.h"
					],
					[
						"gfx",
						"libraries/Adafruit_GFX_Library/Adafruit_GFX.h"
					],
					[
						"gfxc",
						"hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h"
					],
					[
						"color",
						"libraries/Color/Color.h"
					],
					[
						"matri",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"pixel",
						"libraries/NeoPixelBus_by_Makuna/src/NeoPixelAnimator.h"
					],
					[
						"adaf",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"asyn",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"neopix",
						"libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h"
					],
					[
						"matrix",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"alexd",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"pingro",
						"libraries/GPIO/src/PinGroup.h"
					],
					[
						"pin",
						"libraries/Pin/src/Pin.h"
					],
					[
						"",
						"libraries/LED/LED.h"
					],
					[
						"stack",
						"libraries/StackArray/StackArray.h"
					],
					[
						"stackarray",
						"libraries/StackArray/StackArray.h"
					],
					[
						"pin.h",
						"libraries/Pin/src/Pin.h"
					],
					[
						"asyncd",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"led.",
						"LEDme/LED.h"
					],
					[
						"wpro",
						"hardware/google-tiny/avr/cores/tiny/WProgram.h"
					],
					[
						"arduino.h",
						"hardware/google-tiny/avr/cores/tiny/Arduino.h"
					],
					[
						"gogo",
						"Throttle/examples/GoGoGo/GoGoGo.ino"
					],
					[
						"throttl",
						"Throttle/Throttle.cpp"
					],
					[
						"throttle2016",
						"Throttle2016.h"
					],
					[
						"throttle",
						"Throttle2016.h"
					],
					[
						"dele",
						"Sming/SmingCore/Delegate.h"
					],
					[
						"timer",
						"Sming/SmingCore/Timer.h"
					],
					[
						"smingco",
						"Sming/SmingCore/SmingCore.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 319.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 95,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ui",
						"uint16_t"
					],
					[
						"setOutput",
						"setOutputLow"
					],
					[
						"rand",
						"randVal"
					],
					[
						"PWM",
						"PWMRANGE"
					],
					[
						"_C",
						"_CLEAR_Pin"
					],
					[
						"_l",
						"_level"
					],
					[
						"ga",
						"gasLight"
					],
					[
						"off",
						"offset"
					],
					[
						"Color",
						"colorCycle"
					],
					[
						"uint",
						"uint16_t"
					],
					[
						"NMe",
						"Adafruit_NeoMatrix"
					],
					[
						"S",
						"StackArray"
					],
					[
						"POR",
						"PORT_HIGH"
					],
					[
						"set",
						"setHigh"
					],
					[
						"board",
						"boards"
					],
					[
						"e",
						"endif"
					],
					[
						"DEF",
						"DEF_PWM"
					],
					[
						"be",
						"begin"
					],
					[
						"pri",
						"private"
					],
					[
						"chara",
						"character"
					],
					[
						"DE",
						"DEF_MAX_OUT"
					],
					[
						"THROTTLE_V_M",
						"THROTTLE_V_MAX"
					],
					[
						"OTA",
						"OTA_IP"
					],
					[
						"Up",
						"UPDATE_PIN"
					],
					[
						"ini",
						"initializeUs"
					],
					[
						"uin",
						"uint8_t"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/dotfiles/macosz/runcoms/zshrc",
					"settings":
					{
						"buffer_size": 11064,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/dotfiles/dotme/ssh/known_hosts",
					"settings":
					{
						"buffer_size": 49415,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Users/localadmin/.nanorc",
					"settings":
					{
						"buffer_size": 3554,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "",
					"file": "/Volumes/5T/ServiceData/local/Cellar/tuntap",
					"file_size": -1,
					"file_write_time": -1,
					"settings":
					{
						"buffer_size": 0,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 269.0,
				"last_filter": "conf",
				"selected_items":
				[
					[
						"conf",
						"Set Syntax: Generic Config"
					],
					[
						"focu",
						"Focus File on Sidebar"
					],
					[
						"sshc",
						"Set Syntax: SSH Config"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"path",
						"File: Copy Path"
					],
					[
						"c++",
						"Set Syntax: C++"
					],
					[
						"pat",
						"File: Copy Path"
					],
					[
						"move",
						"File: Move"
					],
					[
						"copy",
						"File: Copy Path"
					],
					[
						"focus",
						"Focus File on Sidebar"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"psth",
						"Permute Lines: Shuffle"
					],
					[
						"make",
						"Set Syntax: Makefile"
					],
					[
						"makef",
						"Set Syntax: Makefile"
					],
					[
						"refre",
						"Side Bar: Refresh"
					],
					[
						"refr",
						"Side Bar: Refresh"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"syc+",
						"Set Syntax: C++"
					],
					[
						"",
						"Copy File Path"
					],
					[
						"focud",
						"Focus File on Sidebar"
					],
					[
						"syn",
						"Set Syntax: C++"
					],
					[
						"sublime",
						"Colorsublime: Install Theme"
					],
					[
						"foc",
						"Focus File on Sidebar"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"cop",
						"Copy File Path"
					],
					[
						"ref",
						"Side Bar: Refresh"
					],
					[
						"color",
						"Colorsublime: Install Theme"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"read",
						"ReadmePlease"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"package",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"instl",
						"Package Control: Install Package"
					]
				],
				"width": 449.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/dotfiles",
				"/dotfiles/dotme",
				"/dotfiles/dotme/ssh"
			],
			"file_history":
			[
				"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/IOKit/usb/IOUSBHostDevice.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/rsub/rsub.sublime-settings",
				"/sketch/libraries/ADC/doxygen/html/search/typedefs_73.html",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/sketch/libraries/Alexduino/src/Alexduino.cpp",
				"/sketch/libraries.off/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/Pin.h",
				"/sketch/libraries/Pin/src/Pin.cpp",
				"/sketch/libraries/OneButton/OneButton.cpp",
				"/sketch/libraries/OneButton/OneButton.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
				"/Volumes/5T/_dl/ShiftRegister.h",
				"/sketch/libraries/Talkie/talkie.cpp",
				"/sketch/libraries/Talkie/README.md",
				"/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/Arduino.h",
				"/sketch/libraries/Alexduino/src/Alexduino.h",
				"/sketch/My7Seg/My7Seg.ino",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.h",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.cpp",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
				"/sketch/libraries/SevenSegment/SevenSegment.h",
				"/sketch/libraries/SevenSegment/SevenSegment.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/My7Seg/My7Seg.ino",
				"/sketch/libraries/ICs/4511.h",
				"/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
				"/sketch/libraries/ICs/4511.cpp",
				"/sketch/libraries.off/BCDTo7Seg/examples/b4511_counter/b4511_counter.ino",
				"/sketch/libraries/BCDTo7Seg.virgin/BCDTo7Seg.h",
				"/sketch/libraries/Talkie/examples/_2_Voltmeter/_2_Voltmeter.ino",
				"/sketch/libraries/Talkie/talkie.h",
				"/sketch/libraries/Potentiometer/Potentiometer.h",
				"/sketch/libraries/Potentiometer/Potentiometer.cpp",
				"/sketch/libraries/ansiterm/readme.md",
				"/sketch/libraries/AsyncDelay/src/AsyncDelay.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/WString.h",
				"/sketch/libraries.off/ArduinoJson/third-party/gtest-1.7.0/xcode/Config/FrameworkTarget.xcconfig",
				"/sketch/hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBoldOblique12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBold12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp",
				"/sketch/libraries/LED/LED.cpp",
				"/sketch/libraries/Color/Color.h",
				"/sketch/libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h",
				"/sketch/libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/LUFA/Drivers/Board/Board.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII/makefile",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/AlexAVR/avr/programmers.txt",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.no.h",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.h",
				"/sketch/hardware/AlexAVR/avr/platform.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/SimpleThrottle/SimpleThrottle.ino",
				"/sketch/libraries/Handler/Handler.cpp",
				"/sketch/libraries/Handler/examples/CanYouHandleIt/CanYouHandleIt.ino",
				"/sketch/libraries/Handler/Handler.h",
				"/sketch/libraries/LED/LED.h",
				"/sketch/libraries/Throttle/examples/GoGoGoTiny/GoGoGoTiny.ino",
				"/sketch/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/libraries/Throttle/Throttle.cpp",
				"/sketch/libraries/GPIO/src/PinGroup.h",
				"/sketch/libraries/TimerLib/PinEffector.h",
				"/sketch/libraries/TimerLib/utility/FastDelegate.h",
				"/sketch/LEDme/LED.h",
				"/sketch/libraries/Segment7/Segment7.pdf",
				"/sketch/libraries/StackArray/StackArray.h",
				"/sketch/hardware/AlexAVR/avr/boards.txt",
				"/sketch/libraries/TimerLib/SimpleTimer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/LED/library.properties",
				"/sketch/pinguino.bootloader.c",
				"/sketch/hardware/avr-openhardware/avr/avrdude.conf",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.cpp",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.h",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.cpp",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.h",
				"/sketch/hardware/Cosa/avr/platform.txt",
				"/sketch/hardware/Cosa/avr/sub-modules",
				"/sketch/libraries/Adafruit_GFX_Library/gfxfont.h",
				"/sketch/libraries/Pin/src/boards/attinyX5.h",
				"/sketch/ACS712/xACS712/xACS712/Configurations/Adafruit Trinket 5V-16MHz.xcconfig",
				"/sketch/hardware/AlexAVR/avr/programmers.txt",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/sketch/libraries/GPIO/src/GPIO.h",
				"/sketch/libraries/Pin/library.properties",
				"/sketch/libraries/Pin/src/boards/others.h",
				"/sketch/libraries/GPIO/library.properties",
				"/sketch/libraries/GPIO/src/GPIO.cpp",
				"/sketch/hardware/google-tiny/avr/cores/tiny/WProgram.h",
				"/sketch/Classy/.pioenvs/nodemcu/FrameworkArduino/Arduino.h",
				"/sketch/hardware/google-tiny/avr/cores/tiny/Arduino.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/neomatrix-serial-input/neomatrixserial/neomatrixserial.ino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/breadboard/avr/boards.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/FastLED/FastLED.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Chrono/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Delegate.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/WiringFrameworkDependencies.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Interrupts.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Timer.h",
				"/opt/smi8ng",
				"/opt/sping",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/examples/GoGoGo/GoGoGo.ino",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.cpp",
				"/Users/localadmin/.macosz/modules/alex/functions/gzipit",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Periodic/Periodic.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/UdpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/TcpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/DriverPWM.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/LICENSE",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Makefile-rboot.mk",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/.travis.yml",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/samples/Basic_Runloop/app/application.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/SmingCore.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Switch File Deluxe/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Timer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Delegate.h"
			],
			"find":
			{
				"height": 35.0
			},
			"find_in_files":
			{
				"height": 96.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"inde",
					"DeviceRequest",
					"tty",
					"runtime",
					"runtim",
					"byte",
					"open",
					"UInt",
					"UInt ",
					"UInt",
					"inha",
					"unsigned int8_t",
					"UInt",
					"smile_bmp",
					"UInt",
					"my_4511",
					"on",
					",",
					"my_4511",
					"IC_4511",
					"&sp",
					"const uint8_t \\*(.*)\\s*PROGMEM",
					"const uint8_t (.*)\\[\\]",
					"(sp",
					"uint8_t s",
					";\nuint8_t ",
					"7129",
					"Button 2",
					"analog",
					"ANALOg_MAX",
					"PWM",
					"speed",
					"button2",
					"button",
					"button2",
					"button1",
					"0x.., \\/\\* (.).*",
					"0x5B, /* 2 */",
					"*/\n",
					"0x.., \\/\\* (.).*",
					"0x7C, /* b */",
					"cursor",
					"setTextColor",
					"expi",
					"handl",
					"test",
					"begin",
					"matrix.",
					"matr",
					"());",
					"fillScreen",
					"Adafruit_NeoMatrix",
					"avrdude",
					"USBKEY",
					"BOARD",
					"digital_pin_to_bit_mask_PGM",
					"m1284p",
					"uni",
					"m1284p",
					"ing",
					"PULSE",
					"LEDClass",
					"enum",
					"#",
					"0x05",
					"0x054",
					"0x06",
					"1284",
					"05",
					"sig",
					"__cxa_pure_virtual",
					"__AVR_ATTiny",
					"__AVR_ATmega32U4__",
					"recipe.preproc.macros",
					"__cxa_pure_virtual",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"pioenvs/",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"GFX",
					"pure",
					"effe",
					"toggle\\(",
					"on\\(\\)",
					"on()",
					"on",
					"off",
					"#define.*PWM.*\\w[0-9]*",
					"#define.*ANALOG.*\\w[0-9]*",
					"#define.*255",
					"#define.*ANALOG.*255",
					"#define.*PWM.*255",
					"#define.*PWM.*",
					"PWM_RANGE",
					"PWM",
					"REGD",
					"DEF_",
					"DEF_THR",
					"FAST",
					"                           ",
					"FAST",
					"PWM",
					"sap",
					"line",
					"move",
					"up\"",
					"time",
					"className",
					"rightn",
					"Print",
					"print",
					"DEB",
					"\nDEBO",
					"DEBO",
					"\nDEBO",
					"DEBO",
					"rest",
					"define.*\\sON\\s",
					"rest",
					"digitalWrite",
					"define.*\\sON\\s",
					"define.*\\sON",
					"define.*ON",
					"\\bD5\\b",
					"D5",
					"ws",
					"isdi"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
					"uint8_t",
					"unsigned int",
					"int8_t",
					"unsigned int",
					"sp",
					"const PROGMEM uint8_t $1[]",
					"const uint8_t * $1",
					"(&sp",
					"const uint8_t s",
					",\n              ",
					"Button 2 (gas)",
					"brake",
					"gas",
					"\"$1\",",
					"",
					"LED"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/dotfiles"
				}
			],
			"groups":
			[
				{
					"selected": 3,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/dotfiles/macosz/runcoms/zshrc",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 11064,
								"regions":
								{
								},
								"selection":
								[
									[
										10972,
										10972
									]
								],
								"settings":
								{
									"syntax": "Packages/ShellScript/Shell-Unix-Generic.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 5984.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/dotfiles/dotme/ssh/known_hosts",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 49415,
								"regions":
								{
								},
								"selection":
								[
									[
										37350,
										37350
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 5441.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/Users/localadmin/.nanorc",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 3554,
								"regions":
								{
								},
								"selection":
								[
									[
										3526,
										3526
									]
								],
								"settings":
								{
									"syntax": "Packages/Generic Config/GenericConfig.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 1412.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "/Volumes/5T/ServiceData/local/Cellar/tuntap",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 0,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 25.0
			},
			"input":
			{
				"height": 36.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1360 741 0 0 1360 745 ",
			"project": "",
			"replace":
			{
				"height": 46.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"my",
						"My7Seg/My7Seg.ino"
					],
					[
						"my7",
						"libraries/ADC/doxygen/html/search/typedefs_73.html"
					],
					[
						"orig",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"4511",
						"libraries/ICs/4511.h"
					],
					[
						"my7se",
						"My7Seg/My7Seg.ino"
					],
					[
						"matrixt",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"cancom",
						"libraries/Alexduino/examples/CanCompile/CanCompile.ino"
					],
					[
						"led",
						"libraries/LED/LED.h"
					],
					[
						"sim",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"simpl",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"mys",
						"My7Seg/My7Seg.ino"
					],
					[
						"aledxdu",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"async",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"matrixtest",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde"
					],
					[
						"alexdui",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"wstrin",
						"hardware/AlexAVR/avr/cores/arduino/WString.h"
					],
					[
						"gfx",
						"libraries/Adafruit_GFX_Library/Adafruit_GFX.h"
					],
					[
						"gfxc",
						"hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h"
					],
					[
						"color",
						"libraries/Color/Color.h"
					],
					[
						"matri",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"pixel",
						"libraries/NeoPixelBus_by_Makuna/src/NeoPixelAnimator.h"
					],
					[
						"adaf",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"asyn",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"neopix",
						"libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h"
					],
					[
						"matrix",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"alexd",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"pingro",
						"libraries/GPIO/src/PinGroup.h"
					],
					[
						"pin",
						"libraries/Pin/src/Pin.h"
					],
					[
						"",
						"libraries/LED/LED.h"
					],
					[
						"stack",
						"libraries/StackArray/StackArray.h"
					],
					[
						"stackarray",
						"libraries/StackArray/StackArray.h"
					],
					[
						"pin.h",
						"libraries/Pin/src/Pin.h"
					],
					[
						"asyncd",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"led.",
						"LEDme/LED.h"
					],
					[
						"wpro",
						"hardware/google-tiny/avr/cores/tiny/WProgram.h"
					],
					[
						"arduino.h",
						"hardware/google-tiny/avr/cores/tiny/Arduino.h"
					],
					[
						"gogo",
						"Throttle/examples/GoGoGo/GoGoGo.ino"
					],
					[
						"throttl",
						"Throttle/Throttle.cpp"
					],
					[
						"throttle2016",
						"Throttle2016.h"
					],
					[
						"throttle",
						"Throttle2016.h"
					],
					[
						"dele",
						"Sming/SmingCore/Delegate.h"
					],
					[
						"timer",
						"Sming/SmingCore/Timer.h"
					],
					[
						"smingco",
						"Sming/SmingCore/SmingCore.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 319.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 96,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ui",
						"uint16_t"
					],
					[
						"setOutput",
						"setOutputLow"
					],
					[
						"rand",
						"randVal"
					],
					[
						"PWM",
						"PWMRANGE"
					],
					[
						"_C",
						"_CLEAR_Pin"
					],
					[
						"_l",
						"_level"
					],
					[
						"ga",
						"gasLight"
					],
					[
						"off",
						"offset"
					],
					[
						"Color",
						"colorCycle"
					],
					[
						"uint",
						"uint16_t"
					],
					[
						"NMe",
						"Adafruit_NeoMatrix"
					],
					[
						"S",
						"StackArray"
					],
					[
						"POR",
						"PORT_HIGH"
					],
					[
						"set",
						"setHigh"
					],
					[
						"board",
						"boards"
					],
					[
						"e",
						"endif"
					],
					[
						"DEF",
						"DEF_PWM"
					],
					[
						"be",
						"begin"
					],
					[
						"pri",
						"private"
					],
					[
						"chara",
						"character"
					],
					[
						"DE",
						"DEF_MAX_OUT"
					],
					[
						"THROTTLE_V_M",
						"THROTTLE_V_MAX"
					],
					[
						"OTA",
						"OTA_IP"
					],
					[
						"Up",
						"UPDATE_PIN"
					],
					[
						"ini",
						"initializeUs"
					],
					[
						"uin",
						"uint8_t"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/Volumes/5T/_dl/tuntap_20150118.tar Folder/README.installer",
					"settings":
					{
						"buffer_size": 278,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 269.0,
				"last_filter": "conf",
				"selected_items":
				[
					[
						"conf",
						"Set Syntax: Generic Config"
					],
					[
						"focu",
						"Focus File on Sidebar"
					],
					[
						"sshc",
						"Set Syntax: SSH Config"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"path",
						"File: Copy Path"
					],
					[
						"c++",
						"Set Syntax: C++"
					],
					[
						"pat",
						"File: Copy Path"
					],
					[
						"move",
						"File: Move"
					],
					[
						"copy",
						"File: Copy Path"
					],
					[
						"focus",
						"Focus File on Sidebar"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"psth",
						"Permute Lines: Shuffle"
					],
					[
						"make",
						"Set Syntax: Makefile"
					],
					[
						"makef",
						"Set Syntax: Makefile"
					],
					[
						"refre",
						"Side Bar: Refresh"
					],
					[
						"refr",
						"Side Bar: Refresh"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"syc+",
						"Set Syntax: C++"
					],
					[
						"",
						"Copy File Path"
					],
					[
						"focud",
						"Focus File on Sidebar"
					],
					[
						"syn",
						"Set Syntax: C++"
					],
					[
						"sublime",
						"Colorsublime: Install Theme"
					],
					[
						"foc",
						"Focus File on Sidebar"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"cop",
						"Copy File Path"
					],
					[
						"ref",
						"Side Bar: Refresh"
					],
					[
						"color",
						"Colorsublime: Install Theme"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"read",
						"ReadmePlease"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"package",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"instl",
						"Package Control: Install Package"
					]
				],
				"width": 449.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/Volumes/5T/_dl/tuntap_20150118.tar Folder"
			],
			"file_history":
			[
				"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/IOKit/usb/IOUSBHostDevice.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/rsub/rsub.sublime-settings",
				"/sketch/libraries/ADC/doxygen/html/search/typedefs_73.html",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/sketch/libraries/Alexduino/src/Alexduino.cpp",
				"/sketch/libraries.off/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/Pin.h",
				"/sketch/libraries/Pin/src/Pin.cpp",
				"/sketch/libraries/OneButton/OneButton.cpp",
				"/sketch/libraries/OneButton/OneButton.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
				"/Volumes/5T/_dl/ShiftRegister.h",
				"/sketch/libraries/Talkie/talkie.cpp",
				"/sketch/libraries/Talkie/README.md",
				"/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/Arduino.h",
				"/sketch/libraries/Alexduino/src/Alexduino.h",
				"/sketch/My7Seg/My7Seg.ino",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.h",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.cpp",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
				"/sketch/libraries/SevenSegment/SevenSegment.h",
				"/sketch/libraries/SevenSegment/SevenSegment.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/My7Seg/My7Seg.ino",
				"/sketch/libraries/ICs/4511.h",
				"/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
				"/sketch/libraries/ICs/4511.cpp",
				"/sketch/libraries.off/BCDTo7Seg/examples/b4511_counter/b4511_counter.ino",
				"/sketch/libraries/BCDTo7Seg.virgin/BCDTo7Seg.h",
				"/sketch/libraries/Talkie/examples/_2_Voltmeter/_2_Voltmeter.ino",
				"/sketch/libraries/Talkie/talkie.h",
				"/sketch/libraries/Potentiometer/Potentiometer.h",
				"/sketch/libraries/Potentiometer/Potentiometer.cpp",
				"/sketch/libraries/ansiterm/readme.md",
				"/sketch/libraries/AsyncDelay/src/AsyncDelay.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/WString.h",
				"/sketch/libraries.off/ArduinoJson/third-party/gtest-1.7.0/xcode/Config/FrameworkTarget.xcconfig",
				"/sketch/hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBoldOblique12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBold12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp",
				"/sketch/libraries/LED/LED.cpp",
				"/sketch/libraries/Color/Color.h",
				"/sketch/libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h",
				"/sketch/libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/LUFA/Drivers/Board/Board.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII/makefile",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/AlexAVR/avr/programmers.txt",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.no.h",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.h",
				"/sketch/hardware/AlexAVR/avr/platform.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/SimpleThrottle/SimpleThrottle.ino",
				"/sketch/libraries/Handler/Handler.cpp",
				"/sketch/libraries/Handler/examples/CanYouHandleIt/CanYouHandleIt.ino",
				"/sketch/libraries/Handler/Handler.h",
				"/sketch/libraries/LED/LED.h",
				"/sketch/libraries/Throttle/examples/GoGoGoTiny/GoGoGoTiny.ino",
				"/sketch/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/libraries/Throttle/Throttle.cpp",
				"/sketch/libraries/GPIO/src/PinGroup.h",
				"/sketch/libraries/TimerLib/PinEffector.h",
				"/sketch/libraries/TimerLib/utility/FastDelegate.h",
				"/sketch/LEDme/LED.h",
				"/sketch/libraries/Segment7/Segment7.pdf",
				"/sketch/libraries/StackArray/StackArray.h",
				"/sketch/hardware/AlexAVR/avr/boards.txt",
				"/sketch/libraries/TimerLib/SimpleTimer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/LED/library.properties",
				"/sketch/pinguino.bootloader.c",
				"/sketch/hardware/avr-openhardware/avr/avrdude.conf",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.cpp",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.h",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.cpp",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.h",
				"/sketch/hardware/Cosa/avr/platform.txt",
				"/sketch/hardware/Cosa/avr/sub-modules",
				"/sketch/libraries/Adafruit_GFX_Library/gfxfont.h",
				"/sketch/libraries/Pin/src/boards/attinyX5.h",
				"/sketch/ACS712/xACS712/xACS712/Configurations/Adafruit Trinket 5V-16MHz.xcconfig",
				"/sketch/hardware/AlexAVR/avr/programmers.txt",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/sketch/libraries/GPIO/src/GPIO.h",
				"/sketch/libraries/Pin/library.properties",
				"/sketch/libraries/Pin/src/boards/others.h",
				"/sketch/libraries/GPIO/library.properties",
				"/sketch/libraries/GPIO/src/GPIO.cpp",
				"/sketch/hardware/google-tiny/avr/cores/tiny/WProgram.h",
				"/sketch/Classy/.pioenvs/nodemcu/FrameworkArduino/Arduino.h",
				"/sketch/hardware/google-tiny/avr/cores/tiny/Arduino.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/neomatrix-serial-input/neomatrixserial/neomatrixserial.ino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/breadboard/avr/boards.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/FastLED/FastLED.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Chrono/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Delegate.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/WiringFrameworkDependencies.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Interrupts.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Timer.h",
				"/opt/smi8ng",
				"/opt/sping",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/examples/GoGoGo/GoGoGo.ino",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.cpp",
				"/Users/localadmin/.macosz/modules/alex/functions/gzipit",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Periodic/Periodic.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/UdpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/TcpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/DriverPWM.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/LICENSE",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Makefile-rboot.mk",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/.travis.yml",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/samples/Basic_Runloop/app/application.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/SmingCore.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Switch File Deluxe/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Timer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Delegate.h"
			],
			"find":
			{
				"height": 25.0
			},
			"find_in_files":
			{
				"height": 96.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"inde",
					"DeviceRequest",
					"tty",
					"runtime",
					"runtim",
					"byte",
					"open",
					"UInt",
					"UInt ",
					"UInt",
					"inha",
					"unsigned int8_t",
					"UInt",
					"smile_bmp",
					"UInt",
					"my_4511",
					"on",
					",",
					"my_4511",
					"IC_4511",
					"&sp",
					"const uint8_t \\*(.*)\\s*PROGMEM",
					"const uint8_t (.*)\\[\\]",
					"(sp",
					"uint8_t s",
					";\nuint8_t ",
					"7129",
					"Button 2",
					"analog",
					"ANALOg_MAX",
					"PWM",
					"speed",
					"button2",
					"button",
					"button2",
					"button1",
					"0x.., \\/\\* (.).*",
					"0x5B, /* 2 */",
					"*/\n",
					"0x.., \\/\\* (.).*",
					"0x7C, /* b */",
					"cursor",
					"setTextColor",
					"expi",
					"handl",
					"test",
					"begin",
					"matrix.",
					"matr",
					"());",
					"fillScreen",
					"Adafruit_NeoMatrix",
					"avrdude",
					"USBKEY",
					"BOARD",
					"digital_pin_to_bit_mask_PGM",
					"m1284p",
					"uni",
					"m1284p",
					"ing",
					"PULSE",
					"LEDClass",
					"enum",
					"#",
					"0x05",
					"0x054",
					"0x06",
					"1284",
					"05",
					"sig",
					"__cxa_pure_virtual",
					"__AVR_ATTiny",
					"__AVR_ATmega32U4__",
					"recipe.preproc.macros",
					"__cxa_pure_virtual",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"pioenvs/",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"GFX",
					"pure",
					"effe",
					"toggle\\(",
					"on\\(\\)",
					"on()",
					"on",
					"off",
					"#define.*PWM.*\\w[0-9]*",
					"#define.*ANALOG.*\\w[0-9]*",
					"#define.*255",
					"#define.*ANALOG.*255",
					"#define.*PWM.*255",
					"#define.*PWM.*",
					"PWM_RANGE",
					"PWM",
					"REGD",
					"DEF_",
					"DEF_THR",
					"FAST",
					"                           ",
					"FAST",
					"PWM",
					"sap",
					"line",
					"move",
					"up\"",
					"time",
					"className",
					"rightn",
					"Print",
					"print",
					"DEB",
					"\nDEBO",
					"DEBO",
					"\nDEBO",
					"DEBO",
					"rest",
					"define.*\\sON\\s",
					"rest",
					"digitalWrite",
					"define.*\\sON\\s",
					"define.*\\sON",
					"define.*ON",
					"\\bD5\\b",
					"D5",
					"ws",
					"isdi"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
					"uint8_t",
					"unsigned int",
					"int8_t",
					"unsigned int",
					"sp",
					"const PROGMEM uint8_t $1[]",
					"const uint8_t * $1",
					"(&sp",
					"const uint8_t s",
					",\n              ",
					"Button 2 (gas)",
					"brake",
					"gas",
					"\"$1\",",
					"",
					"LED"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/Volumes/5T/_dl/tuntap_20150118.tar Folder"
				}
			],
			"groups":
			[
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Volumes/5T/_dl/tuntap_20150118.tar Folder/README.installer",
							"semi_transient": true,
							"settings":
							{
								"buffer_size": 278,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 25.0
			},
			"input":
			{
				"height": 36.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1360 741 0 0 1360 745 ",
			"project": "",
			"replace":
			{
				"height": 46.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"my",
						"My7Seg/My7Seg.ino"
					],
					[
						"my7",
						"libraries/ADC/doxygen/html/search/typedefs_73.html"
					],
					[
						"orig",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"4511",
						"libraries/ICs/4511.h"
					],
					[
						"my7se",
						"My7Seg/My7Seg.ino"
					],
					[
						"matrixt",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"cancom",
						"libraries/Alexduino/examples/CanCompile/CanCompile.ino"
					],
					[
						"led",
						"libraries/LED/LED.h"
					],
					[
						"sim",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"simpl",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"mys",
						"My7Seg/My7Seg.ino"
					],
					[
						"aledxdu",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"async",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"matrixtest",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde"
					],
					[
						"alexdui",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"wstrin",
						"hardware/AlexAVR/avr/cores/arduino/WString.h"
					],
					[
						"gfx",
						"libraries/Adafruit_GFX_Library/Adafruit_GFX.h"
					],
					[
						"gfxc",
						"hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h"
					],
					[
						"color",
						"libraries/Color/Color.h"
					],
					[
						"matri",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"pixel",
						"libraries/NeoPixelBus_by_Makuna/src/NeoPixelAnimator.h"
					],
					[
						"adaf",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"asyn",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"neopix",
						"libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h"
					],
					[
						"matrix",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"alexd",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"pingro",
						"libraries/GPIO/src/PinGroup.h"
					],
					[
						"pin",
						"libraries/Pin/src/Pin.h"
					],
					[
						"",
						"libraries/LED/LED.h"
					],
					[
						"stack",
						"libraries/StackArray/StackArray.h"
					],
					[
						"stackarray",
						"libraries/StackArray/StackArray.h"
					],
					[
						"pin.h",
						"libraries/Pin/src/Pin.h"
					],
					[
						"asyncd",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"led.",
						"LEDme/LED.h"
					],
					[
						"wpro",
						"hardware/google-tiny/avr/cores/tiny/WProgram.h"
					],
					[
						"arduino.h",
						"hardware/google-tiny/avr/cores/tiny/Arduino.h"
					],
					[
						"gogo",
						"Throttle/examples/GoGoGo/GoGoGo.ino"
					],
					[
						"throttl",
						"Throttle/Throttle.cpp"
					],
					[
						"throttle2016",
						"Throttle2016.h"
					],
					[
						"throttle",
						"Throttle2016.h"
					],
					[
						"dele",
						"Sming/SmingCore/Delegate.h"
					],
					[
						"timer",
						"Sming/SmingCore/Timer.h"
					],
					[
						"smingco",
						"Sming/SmingCore/SmingCore.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 319.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 97,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ui",
						"uint16_t"
					],
					[
						"setOutput",
						"setOutputLow"
					],
					[
						"rand",
						"randVal"
					],
					[
						"PWM",
						"PWMRANGE"
					],
					[
						"_C",
						"_CLEAR_Pin"
					],
					[
						"_l",
						"_level"
					],
					[
						"ga",
						"gasLight"
					],
					[
						"off",
						"offset"
					],
					[
						"Color",
						"colorCycle"
					],
					[
						"uint",
						"uint16_t"
					],
					[
						"NMe",
						"Adafruit_NeoMatrix"
					],
					[
						"S",
						"StackArray"
					],
					[
						"POR",
						"PORT_HIGH"
					],
					[
						"set",
						"setHigh"
					],
					[
						"board",
						"boards"
					],
					[
						"e",
						"endif"
					],
					[
						"DEF",
						"DEF_PWM"
					],
					[
						"be",
						"begin"
					],
					[
						"pri",
						"private"
					],
					[
						"chara",
						"character"
					],
					[
						"DE",
						"DEF_MAX_OUT"
					],
					[
						"THROTTLE_V_M",
						"THROTTLE_V_MAX"
					],
					[
						"OTA",
						"OTA_IP"
					],
					[
						"Up",
						"UPDATE_PIN"
					],
					[
						"ini",
						"initializeUs"
					],
					[
						"uin",
						"uint8_t"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/usr/include/launch.h",
					"settings":
					{
						"buffer_size": 15518,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 229.0,
				"last_filter": "path",
				"selected_items":
				[
					[
						"path",
						"File: Copy Path"
					],
					[
						"name",
						"File: Copy Name"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"coff",
						"Set Syntax: CoffeeScript"
					],
					[
						"gith",
						"GitHub Flavored Markdown: Preview"
					],
					[
						"conf",
						"Set Syntax: Generic Config"
					],
					[
						"focu",
						"Focus File on Sidebar"
					],
					[
						"sshc",
						"Set Syntax: SSH Config"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"c++",
						"Set Syntax: C++"
					],
					[
						"pat",
						"File: Copy Path"
					],
					[
						"move",
						"File: Move"
					],
					[
						"copy",
						"File: Copy Path"
					],
					[
						"focus",
						"Focus File on Sidebar"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"psth",
						"Permute Lines: Shuffle"
					],
					[
						"make",
						"Set Syntax: Makefile"
					],
					[
						"makef",
						"Set Syntax: Makefile"
					],
					[
						"refre",
						"Side Bar: Refresh"
					],
					[
						"refr",
						"Side Bar: Refresh"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"syc+",
						"Set Syntax: C++"
					],
					[
						"",
						"Copy File Path"
					],
					[
						"focud",
						"Focus File on Sidebar"
					],
					[
						"syn",
						"Set Syntax: C++"
					],
					[
						"sublime",
						"Colorsublime: Install Theme"
					],
					[
						"foc",
						"Focus File on Sidebar"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"cop",
						"Copy File Path"
					],
					[
						"ref",
						"Side Bar: Refresh"
					],
					[
						"color",
						"Colorsublime: Install Theme"
					],
					[
						"read",
						"ReadmePlease"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"package",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"instl",
						"Package Control: Install Package"
					]
				],
				"width": 449.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/IOKit/usb/IOUSBHostDevice.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/rsub/rsub.sublime-settings",
				"/sketch/libraries/ADC/doxygen/html/search/typedefs_73.html",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/sketch/libraries/Alexduino/src/Alexduino.cpp",
				"/sketch/libraries.off/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/Pin.h",
				"/sketch/libraries/Pin/src/Pin.cpp",
				"/sketch/libraries/OneButton/OneButton.cpp",
				"/sketch/libraries/OneButton/OneButton.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
				"/Volumes/5T/_dl/ShiftRegister.h",
				"/sketch/libraries/Talkie/talkie.cpp",
				"/sketch/libraries/Talkie/README.md",
				"/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/Arduino.h",
				"/sketch/libraries/Alexduino/src/Alexduino.h",
				"/sketch/My7Seg/My7Seg.ino",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.h",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.cpp",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
				"/sketch/libraries/SevenSegment/SevenSegment.h",
				"/sketch/libraries/SevenSegment/SevenSegment.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/My7Seg/My7Seg.ino",
				"/sketch/libraries/ICs/4511.h",
				"/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
				"/sketch/libraries/ICs/4511.cpp",
				"/sketch/libraries.off/BCDTo7Seg/examples/b4511_counter/b4511_counter.ino",
				"/sketch/libraries/BCDTo7Seg.virgin/BCDTo7Seg.h",
				"/sketch/libraries/Talkie/examples/_2_Voltmeter/_2_Voltmeter.ino",
				"/sketch/libraries/Talkie/talkie.h",
				"/sketch/libraries/Potentiometer/Potentiometer.h",
				"/sketch/libraries/Potentiometer/Potentiometer.cpp",
				"/sketch/libraries/ansiterm/readme.md",
				"/sketch/libraries/AsyncDelay/src/AsyncDelay.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/WString.h",
				"/sketch/libraries.off/ArduinoJson/third-party/gtest-1.7.0/xcode/Config/FrameworkTarget.xcconfig",
				"/sketch/hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBoldOblique12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBold12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp",
				"/sketch/libraries/LED/LED.cpp",
				"/sketch/libraries/Color/Color.h",
				"/sketch/libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h",
				"/sketch/libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/LUFA/Drivers/Board/Board.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII/makefile",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/AlexAVR/avr/programmers.txt",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.no.h",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.h",
				"/sketch/hardware/AlexAVR/avr/platform.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/SimpleThrottle/SimpleThrottle.ino",
				"/sketch/libraries/Handler/Handler.cpp",
				"/sketch/libraries/Handler/examples/CanYouHandleIt/CanYouHandleIt.ino",
				"/sketch/libraries/Handler/Handler.h",
				"/sketch/libraries/LED/LED.h",
				"/sketch/libraries/Throttle/examples/GoGoGoTiny/GoGoGoTiny.ino",
				"/sketch/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/libraries/Throttle/Throttle.cpp",
				"/sketch/libraries/GPIO/src/PinGroup.h",
				"/sketch/libraries/TimerLib/PinEffector.h",
				"/sketch/libraries/TimerLib/utility/FastDelegate.h",
				"/sketch/LEDme/LED.h",
				"/sketch/libraries/Segment7/Segment7.pdf",
				"/sketch/libraries/StackArray/StackArray.h",
				"/sketch/hardware/AlexAVR/avr/boards.txt",
				"/sketch/libraries/TimerLib/SimpleTimer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/LED/library.properties",
				"/sketch/pinguino.bootloader.c",
				"/sketch/hardware/avr-openhardware/avr/avrdude.conf",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.cpp",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.h",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.cpp",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.h",
				"/sketch/hardware/Cosa/avr/platform.txt",
				"/sketch/hardware/Cosa/avr/sub-modules",
				"/sketch/libraries/Adafruit_GFX_Library/gfxfont.h",
				"/sketch/libraries/Pin/src/boards/attinyX5.h",
				"/sketch/ACS712/xACS712/xACS712/Configurations/Adafruit Trinket 5V-16MHz.xcconfig",
				"/sketch/hardware/AlexAVR/avr/programmers.txt",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/sketch/libraries/GPIO/src/GPIO.h",
				"/sketch/libraries/Pin/library.properties",
				"/sketch/libraries/Pin/src/boards/others.h",
				"/sketch/libraries/GPIO/library.properties",
				"/sketch/libraries/GPIO/src/GPIO.cpp",
				"/sketch/hardware/google-tiny/avr/cores/tiny/WProgram.h",
				"/sketch/Classy/.pioenvs/nodemcu/FrameworkArduino/Arduino.h",
				"/sketch/hardware/google-tiny/avr/cores/tiny/Arduino.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/neomatrix-serial-input/neomatrixserial/neomatrixserial.ino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/breadboard/avr/boards.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/FastLED/FastLED.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Chrono/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Delegate.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/WiringFrameworkDependencies.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Interrupts.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Timer.h",
				"/opt/smi8ng",
				"/opt/sping",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/examples/GoGoGo/GoGoGo.ino",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.cpp",
				"/Users/localadmin/.macosz/modules/alex/functions/gzipit",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Periodic/Periodic.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/UdpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/TcpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/DriverPWM.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/LICENSE",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Makefile-rboot.mk",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/.travis.yml",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/samples/Basic_Runloop/app/application.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/SmingCore.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Switch File Deluxe/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Timer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Delegate.h"
			],
			"find":
			{
				"height": 25.0
			},
			"find_in_files":
			{
				"height": 96.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"(",
					");",
					"inde",
					"DeviceRequest",
					"tty",
					"runtime",
					"runtim",
					"byte",
					"open",
					"UInt",
					"UInt ",
					"UInt",
					"inha",
					"unsigned int8_t",
					"UInt",
					"smile_bmp",
					"UInt",
					"my_4511",
					"on",
					",",
					"my_4511",
					"IC_4511",
					"&sp",
					"const uint8_t \\*(.*)\\s*PROGMEM",
					"const uint8_t (.*)\\[\\]",
					"(sp",
					"uint8_t s",
					";\nuint8_t ",
					"7129",
					"Button 2",
					"analog",
					"ANALOg_MAX",
					"PWM",
					"speed",
					"button2",
					"button",
					"button2",
					"button1",
					"0x.., \\/\\* (.).*",
					"0x5B, /* 2 */",
					"*/\n",
					"0x.., \\/\\* (.).*",
					"0x7C, /* b */",
					"cursor",
					"setTextColor",
					"expi",
					"handl",
					"test",
					"begin",
					"matrix.",
					"matr",
					"());",
					"fillScreen",
					"Adafruit_NeoMatrix",
					"avrdude",
					"USBKEY",
					"BOARD",
					"digital_pin_to_bit_mask_PGM",
					"m1284p",
					"uni",
					"m1284p",
					"ing",
					"PULSE",
					"LEDClass",
					"enum",
					"#",
					"0x05",
					"0x054",
					"0x06",
					"1284",
					"05",
					"sig",
					"__cxa_pure_virtual",
					"__AVR_ATTiny",
					"__AVR_ATmega32U4__",
					"recipe.preproc.macros",
					"__cxa_pure_virtual",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"pioenvs/",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"GFX",
					"pure",
					"effe",
					"toggle\\(",
					"on\\(\\)",
					"on()",
					"on",
					"off",
					"#define.*PWM.*\\w[0-9]*",
					"#define.*ANALOG.*\\w[0-9]*",
					"#define.*255",
					"#define.*ANALOG.*255",
					"#define.*PWM.*255",
					"#define.*PWM.*",
					"PWM_RANGE",
					"PWM",
					"REGD",
					"DEF_",
					"DEF_THR",
					"FAST",
					"                           ",
					"FAST",
					"PWM",
					"sap",
					"line",
					"move",
					"up\"",
					"time",
					"className",
					"rightn",
					"Print",
					"print",
					"DEB",
					"\nDEBO",
					"DEBO",
					"\nDEBO",
					"DEBO",
					"rest",
					"define.*\\sON\\s",
					"rest",
					"digitalWrite",
					"define.*\\sON\\s",
					"define.*\\sON",
					"define.*ON",
					"\\bD5\\b",
					"D5"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"",
					"uint8_t",
					"unsigned int",
					"int8_t",
					"unsigned int",
					"sp",
					"const PROGMEM uint8_t $1[]",
					"const uint8_t * $1",
					"(&sp",
					"const uint8_t s",
					",\n              ",
					"Button 2 (gas)",
					"brake",
					"gas",
					"\"$1\",",
					"",
					"LED"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"groups":
			[
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/usr/include/launch.h",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 15518,
								"regions":
								{
								},
								"selection":
								[
									[
										5383,
										5383
									]
								],
								"settings":
								{
									"syntax": "Packages/C++/C++.sublime-syntax",
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 1497.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 25.0
			},
			"input":
			{
				"height": 36.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1360 741 0 0 1360 745 ",
			"project": "",
			"replace":
			{
				"height": 46.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"my",
						"My7Seg/My7Seg.ino"
					],
					[
						"my7",
						"libraries/ADC/doxygen/html/search/typedefs_73.html"
					],
					[
						"orig",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"4511",
						"libraries/ICs/4511.h"
					],
					[
						"my7se",
						"My7Seg/My7Seg.ino"
					],
					[
						"matrixt",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"cancom",
						"libraries/Alexduino/examples/CanCompile/CanCompile.ino"
					],
					[
						"led",
						"libraries/LED/LED.h"
					],
					[
						"sim",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"simpl",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"mys",
						"My7Seg/My7Seg.ino"
					],
					[
						"aledxdu",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"async",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"matrixtest",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde"
					],
					[
						"alexdui",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"wstrin",
						"hardware/AlexAVR/avr/cores/arduino/WString.h"
					],
					[
						"gfx",
						"libraries/Adafruit_GFX_Library/Adafruit_GFX.h"
					],
					[
						"gfxc",
						"hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h"
					],
					[
						"color",
						"libraries/Color/Color.h"
					],
					[
						"matri",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"pixel",
						"libraries/NeoPixelBus_by_Makuna/src/NeoPixelAnimator.h"
					],
					[
						"adaf",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"asyn",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"neopix",
						"libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h"
					],
					[
						"matrix",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"alexd",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"pingro",
						"libraries/GPIO/src/PinGroup.h"
					],
					[
						"pin",
						"libraries/Pin/src/Pin.h"
					],
					[
						"",
						"libraries/LED/LED.h"
					],
					[
						"stack",
						"libraries/StackArray/StackArray.h"
					],
					[
						"stackarray",
						"libraries/StackArray/StackArray.h"
					],
					[
						"pin.h",
						"libraries/Pin/src/Pin.h"
					],
					[
						"asyncd",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"led.",
						"LEDme/LED.h"
					],
					[
						"wpro",
						"hardware/google-tiny/avr/cores/tiny/WProgram.h"
					],
					[
						"arduino.h",
						"hardware/google-tiny/avr/cores/tiny/Arduino.h"
					],
					[
						"gogo",
						"Throttle/examples/GoGoGo/GoGoGo.ino"
					],
					[
						"throttl",
						"Throttle/Throttle.cpp"
					],
					[
						"throttle2016",
						"Throttle2016.h"
					],
					[
						"throttle",
						"Throttle2016.h"
					],
					[
						"dele",
						"Sming/SmingCore/Delegate.h"
					],
					[
						"timer",
						"Sming/SmingCore/Timer.h"
					],
					[
						"smingco",
						"Sming/SmingCore/SmingCore.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 319.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 101,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ui",
						"uint16_t"
					],
					[
						"setOutput",
						"setOutputLow"
					],
					[
						"rand",
						"randVal"
					],
					[
						"PWM",
						"PWMRANGE"
					],
					[
						"_C",
						"_CLEAR_Pin"
					],
					[
						"_l",
						"_level"
					],
					[
						"ga",
						"gasLight"
					],
					[
						"off",
						"offset"
					],
					[
						"Color",
						"colorCycle"
					],
					[
						"uint",
						"uint16_t"
					],
					[
						"NMe",
						"Adafruit_NeoMatrix"
					],
					[
						"S",
						"StackArray"
					],
					[
						"POR",
						"PORT_HIGH"
					],
					[
						"set",
						"setHigh"
					],
					[
						"board",
						"boards"
					],
					[
						"e",
						"endif"
					],
					[
						"DEF",
						"DEF_PWM"
					],
					[
						"be",
						"begin"
					],
					[
						"pri",
						"private"
					],
					[
						"chara",
						"character"
					],
					[
						"DE",
						"DEF_MAX_OUT"
					],
					[
						"THROTTLE_V_M",
						"THROTTLE_V_MAX"
					],
					[
						"OTA",
						"OTA_IP"
					],
					[
						"Up",
						"UPDATE_PIN"
					],
					[
						"ini",
						"initializeUs"
					],
					[
						"uin",
						"uint8_t"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/Volumes/5T/ServiceData/GoogleDrive/_Unsaved/Unsaved JS  CodeRunner Document 12.js",
					"settings":
					{
						"buffer_size": 908,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 249.0,
				"last_filter": "path",
				"selected_items":
				[
					[
						"path",
						"File: Copy Path"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"pat",
						"File: Copy Path"
					],
					[
						"name",
						"File: Copy Name"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"coff",
						"Set Syntax: CoffeeScript"
					],
					[
						"gith",
						"GitHub Flavored Markdown: Preview"
					],
					[
						"conf",
						"Set Syntax: Generic Config"
					],
					[
						"focu",
						"Focus File on Sidebar"
					],
					[
						"sshc",
						"Set Syntax: SSH Config"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"c++",
						"Set Syntax: C++"
					],
					[
						"move",
						"File: Move"
					],
					[
						"copy",
						"File: Copy Path"
					],
					[
						"focus",
						"Focus File on Sidebar"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"psth",
						"Permute Lines: Shuffle"
					],
					[
						"make",
						"Set Syntax: Makefile"
					],
					[
						"makef",
						"Set Syntax: Makefile"
					],
					[
						"refre",
						"Side Bar: Refresh"
					],
					[
						"refr",
						"Side Bar: Refresh"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"syc+",
						"Set Syntax: C++"
					],
					[
						"",
						"Copy File Path"
					],
					[
						"focud",
						"Focus File on Sidebar"
					],
					[
						"syn",
						"Set Syntax: C++"
					],
					[
						"sublime",
						"Colorsublime: Install Theme"
					],
					[
						"foc",
						"Focus File on Sidebar"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"cop",
						"Copy File Path"
					],
					[
						"ref",
						"Side Bar: Refresh"
					],
					[
						"color",
						"Colorsublime: Install Theme"
					],
					[
						"read",
						"ReadmePlease"
					],
					[
						"package",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"instl",
						"Package Control: Install Package"
					]
				],
				"width": 467.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/Volumes/5T/ServiceData/GoogleDrive/_Unsaved"
			],
			"file_history":
			[
				"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/IOKit/usb/IOUSBHostDevice.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/rsub/rsub.sublime-settings",
				"/sketch/libraries/ADC/doxygen/html/search/typedefs_73.html",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/sketch/libraries/Alexduino/src/Alexduino.cpp",
				"/sketch/libraries.off/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/Pin.h",
				"/sketch/libraries/Pin/src/Pin.cpp",
				"/sketch/libraries/OneButton/OneButton.cpp",
				"/sketch/libraries/OneButton/OneButton.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
				"/Volumes/5T/_dl/ShiftRegister.h",
				"/sketch/libraries/Talkie/talkie.cpp",
				"/sketch/libraries/Talkie/README.md",
				"/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/Arduino.h",
				"/sketch/libraries/Alexduino/src/Alexduino.h",
				"/sketch/My7Seg/My7Seg.ino",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.h",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.cpp",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
				"/sketch/libraries/SevenSegment/SevenSegment.h",
				"/sketch/libraries/SevenSegment/SevenSegment.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/My7Seg/My7Seg.ino",
				"/sketch/libraries/ICs/4511.h",
				"/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
				"/sketch/libraries/ICs/4511.cpp",
				"/sketch/libraries.off/BCDTo7Seg/examples/b4511_counter/b4511_counter.ino",
				"/sketch/libraries/BCDTo7Seg.virgin/BCDTo7Seg.h",
				"/sketch/libraries/Talkie/examples/_2_Voltmeter/_2_Voltmeter.ino",
				"/sketch/libraries/Talkie/talkie.h",
				"/sketch/libraries/Potentiometer/Potentiometer.h",
				"/sketch/libraries/Potentiometer/Potentiometer.cpp",
				"/sketch/libraries/ansiterm/readme.md",
				"/sketch/libraries/AsyncDelay/src/AsyncDelay.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/WString.h",
				"/sketch/libraries.off/ArduinoJson/third-party/gtest-1.7.0/xcode/Config/FrameworkTarget.xcconfig",
				"/sketch/hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBoldOblique12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBold12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp",
				"/sketch/libraries/LED/LED.cpp",
				"/sketch/libraries/Color/Color.h",
				"/sketch/libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h",
				"/sketch/libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/LUFA/Drivers/Board/Board.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII/makefile",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/AlexAVR/avr/programmers.txt",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.no.h",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.h",
				"/sketch/hardware/AlexAVR/avr/platform.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/SimpleThrottle/SimpleThrottle.ino",
				"/sketch/libraries/Handler/Handler.cpp",
				"/sketch/libraries/Handler/examples/CanYouHandleIt/CanYouHandleIt.ino",
				"/sketch/libraries/Handler/Handler.h",
				"/sketch/libraries/LED/LED.h",
				"/sketch/libraries/Throttle/examples/GoGoGoTiny/GoGoGoTiny.ino",
				"/sketch/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/libraries/Throttle/Throttle.cpp",
				"/sketch/libraries/GPIO/src/PinGroup.h",
				"/sketch/libraries/TimerLib/PinEffector.h",
				"/sketch/libraries/TimerLib/utility/FastDelegate.h",
				"/sketch/LEDme/LED.h",
				"/sketch/libraries/Segment7/Segment7.pdf",
				"/sketch/libraries/StackArray/StackArray.h",
				"/sketch/hardware/AlexAVR/avr/boards.txt",
				"/sketch/libraries/TimerLib/SimpleTimer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/LED/library.properties",
				"/sketch/pinguino.bootloader.c",
				"/sketch/hardware/avr-openhardware/avr/avrdude.conf",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.cpp",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.h",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.cpp",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.h",
				"/sketch/hardware/Cosa/avr/platform.txt",
				"/sketch/hardware/Cosa/avr/sub-modules",
				"/sketch/libraries/Adafruit_GFX_Library/gfxfont.h",
				"/sketch/libraries/Pin/src/boards/attinyX5.h",
				"/sketch/ACS712/xACS712/xACS712/Configurations/Adafruit Trinket 5V-16MHz.xcconfig",
				"/sketch/hardware/AlexAVR/avr/programmers.txt",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/sketch/libraries/GPIO/src/GPIO.h",
				"/sketch/libraries/Pin/library.properties",
				"/sketch/libraries/Pin/src/boards/others.h",
				"/sketch/libraries/GPIO/library.properties",
				"/sketch/libraries/GPIO/src/GPIO.cpp",
				"/sketch/hardware/google-tiny/avr/cores/tiny/WProgram.h",
				"/sketch/Classy/.pioenvs/nodemcu/FrameworkArduino/Arduino.h",
				"/sketch/hardware/google-tiny/avr/cores/tiny/Arduino.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/neomatrix-serial-input/neomatrixserial/neomatrixserial.ino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/breadboard/avr/boards.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/FastLED/FastLED.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Chrono/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Delegate.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/WiringFrameworkDependencies.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Interrupts.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Timer.h",
				"/opt/smi8ng",
				"/opt/sping",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/examples/GoGoGo/GoGoGo.ino",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.cpp",
				"/Users/localadmin/.macosz/modules/alex/functions/gzipit",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Periodic/Periodic.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/UdpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/TcpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/DriverPWM.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/LICENSE",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Makefile-rboot.mk",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/.travis.yml",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/samples/Basic_Runloop/app/application.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/SmingCore.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Switch File Deluxe/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Timer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Delegate.h"
			],
			"find":
			{
				"height": 25.0
			},
			"find_in_files":
			{
				"height": 96.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"(",
					");",
					"inde",
					"DeviceRequest",
					"tty",
					"runtime",
					"runtim",
					"byte",
					"open",
					"UInt",
					"UInt ",
					"UInt",
					"inha",
					"unsigned int8_t",
					"UInt",
					"smile_bmp",
					"UInt",
					"my_4511",
					"on",
					",",
					"my_4511",
					"IC_4511",
					"&sp",
					"const uint8_t \\*(.*)\\s*PROGMEM",
					"const uint8_t (.*)\\[\\]",
					"(sp",
					"uint8_t s",
					";\nuint8_t ",
					"7129",
					"Button 2",
					"analog",
					"ANALOg_MAX",
					"PWM",
					"speed",
					"button2",
					"button",
					"button2",
					"button1",
					"0x.., \\/\\* (.).*",
					"0x5B, /* 2 */",
					"*/\n",
					"0x.., \\/\\* (.).*",
					"0x7C, /* b */",
					"cursor",
					"setTextColor",
					"expi",
					"handl",
					"test",
					"begin",
					"matrix.",
					"matr",
					"());",
					"fillScreen",
					"Adafruit_NeoMatrix",
					"avrdude",
					"USBKEY",
					"BOARD",
					"digital_pin_to_bit_mask_PGM",
					"m1284p",
					"uni",
					"m1284p",
					"ing",
					"PULSE",
					"LEDClass",
					"enum",
					"#",
					"0x05",
					"0x054",
					"0x06",
					"1284",
					"05",
					"sig",
					"__cxa_pure_virtual",
					"__AVR_ATTiny",
					"__AVR_ATmega32U4__",
					"recipe.preproc.macros",
					"__cxa_pure_virtual",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"pioenvs/",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"GFX",
					"pure",
					"effe",
					"toggle\\(",
					"on\\(\\)",
					"on()",
					"on",
					"off",
					"#define.*PWM.*\\w[0-9]*",
					"#define.*ANALOG.*\\w[0-9]*",
					"#define.*255",
					"#define.*ANALOG.*255",
					"#define.*PWM.*255",
					"#define.*PWM.*",
					"PWM_RANGE",
					"PWM",
					"REGD",
					"DEF_",
					"DEF_THR",
					"FAST",
					"                           ",
					"FAST",
					"PWM",
					"sap",
					"line",
					"move",
					"up\"",
					"time",
					"className",
					"rightn",
					"Print",
					"print",
					"DEB",
					"\nDEBO",
					"DEBO",
					"\nDEBO",
					"DEBO",
					"rest",
					"define.*\\sON\\s",
					"rest",
					"digitalWrite",
					"define.*\\sON\\s",
					"define.*\\sON",
					"define.*ON",
					"\\bD5\\b",
					"D5"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"",
					"uint8_t",
					"unsigned int",
					"int8_t",
					"unsigned int",
					"sp",
					"const PROGMEM uint8_t $1[]",
					"const uint8_t * $1",
					"(&sp",
					"const uint8_t s",
					",\n              ",
					"Button 2 (gas)",
					"brake",
					"gas",
					"\"$1\",",
					"",
					"LED"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/Volumes/5T/ServiceData/GoogleDrive/_Unsaved"
				}
			],
			"groups":
			[
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Volumes/5T/ServiceData/GoogleDrive/_Unsaved/Unsaved JS  CodeRunner Document 12.js",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 908,
								"regions":
								{
								},
								"selection":
								[
									[
										906,
										906
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458408748.51,
									"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 1.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 25.0
			},
			"input":
			{
				"height": 36.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1360 741 0 0 1360 745 ",
			"project": "",
			"replace":
			{
				"height": 46.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"my",
						"My7Seg/My7Seg.ino"
					],
					[
						"my7",
						"libraries/ADC/doxygen/html/search/typedefs_73.html"
					],
					[
						"orig",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"4511",
						"libraries/ICs/4511.h"
					],
					[
						"my7se",
						"My7Seg/My7Seg.ino"
					],
					[
						"matrixt",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"cancom",
						"libraries/Alexduino/examples/CanCompile/CanCompile.ino"
					],
					[
						"led",
						"libraries/LED/LED.h"
					],
					[
						"sim",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"simpl",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"mys",
						"My7Seg/My7Seg.ino"
					],
					[
						"aledxdu",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"async",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"matrixtest",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde"
					],
					[
						"alexdui",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"wstrin",
						"hardware/AlexAVR/avr/cores/arduino/WString.h"
					],
					[
						"gfx",
						"libraries/Adafruit_GFX_Library/Adafruit_GFX.h"
					],
					[
						"gfxc",
						"hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h"
					],
					[
						"color",
						"libraries/Color/Color.h"
					],
					[
						"matri",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"pixel",
						"libraries/NeoPixelBus_by_Makuna/src/NeoPixelAnimator.h"
					],
					[
						"adaf",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"asyn",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"neopix",
						"libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h"
					],
					[
						"matrix",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"alexd",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"pingro",
						"libraries/GPIO/src/PinGroup.h"
					],
					[
						"pin",
						"libraries/Pin/src/Pin.h"
					],
					[
						"",
						"libraries/LED/LED.h"
					],
					[
						"stack",
						"libraries/StackArray/StackArray.h"
					],
					[
						"stackarray",
						"libraries/StackArray/StackArray.h"
					],
					[
						"pin.h",
						"libraries/Pin/src/Pin.h"
					],
					[
						"asyncd",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"led.",
						"LEDme/LED.h"
					],
					[
						"wpro",
						"hardware/google-tiny/avr/cores/tiny/WProgram.h"
					],
					[
						"arduino.h",
						"hardware/google-tiny/avr/cores/tiny/Arduino.h"
					],
					[
						"gogo",
						"Throttle/examples/GoGoGo/GoGoGo.ino"
					],
					[
						"throttl",
						"Throttle/Throttle.cpp"
					],
					[
						"throttle2016",
						"Throttle2016.h"
					],
					[
						"throttle",
						"Throttle2016.h"
					],
					[
						"dele",
						"Sming/SmingCore/Delegate.h"
					],
					[
						"timer",
						"Sming/SmingCore/Timer.h"
					],
					[
						"smingco",
						"Sming/SmingCore/SmingCore.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": true,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 319.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 103,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ui",
						"uint16_t"
					],
					[
						"setOutput",
						"setOutputLow"
					],
					[
						"rand",
						"randVal"
					],
					[
						"PWM",
						"PWMRANGE"
					],
					[
						"_C",
						"_CLEAR_Pin"
					],
					[
						"_l",
						"_level"
					],
					[
						"ga",
						"gasLight"
					],
					[
						"off",
						"offset"
					],
					[
						"Color",
						"colorCycle"
					],
					[
						"uint",
						"uint16_t"
					],
					[
						"NMe",
						"Adafruit_NeoMatrix"
					],
					[
						"S",
						"StackArray"
					],
					[
						"POR",
						"PORT_HIGH"
					],
					[
						"set",
						"setHigh"
					],
					[
						"board",
						"boards"
					],
					[
						"e",
						"endif"
					],
					[
						"DEF",
						"DEF_PWM"
					],
					[
						"be",
						"begin"
					],
					[
						"pri",
						"private"
					],
					[
						"chara",
						"character"
					],
					[
						"DE",
						"DEF_MAX_OUT"
					],
					[
						"THROTTLE_V_M",
						"THROTTLE_V_MAX"
					],
					[
						"OTA",
						"OTA_IP"
					],
					[
						"Up",
						"UPDATE_PIN"
					],
					[
						"ini",
						"initializeUs"
					],
					[
						"uin",
						"uint8_t"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/Volumes/5T/_dl/src-2/CirSim.java",
					"settings":
					{
						"buffer_size": 92209,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 329.0,
				"last_filter": "plist",
				"selected_items":
				[
					[
						"plist",
						"Plist Binary: Toggle XML & Binary"
					],
					[
						"bina",
						"Plist Binary: Toggle XML & Binary"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"pat",
						"File: Copy Path"
					],
					[
						"path",
						"File: Copy Path"
					],
					[
						"name",
						"File: Copy Name"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"coff",
						"Set Syntax: CoffeeScript"
					],
					[
						"gith",
						"GitHub Flavored Markdown: Preview"
					],
					[
						"conf",
						"Set Syntax: Generic Config"
					],
					[
						"focu",
						"Focus File on Sidebar"
					],
					[
						"sshc",
						"Set Syntax: SSH Config"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"c++",
						"Set Syntax: C++"
					],
					[
						"move",
						"File: Move"
					],
					[
						"copy",
						"File: Copy Path"
					],
					[
						"focus",
						"Focus File on Sidebar"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"psth",
						"Permute Lines: Shuffle"
					],
					[
						"make",
						"Set Syntax: Makefile"
					],
					[
						"makef",
						"Set Syntax: Makefile"
					],
					[
						"refre",
						"Side Bar: Refresh"
					],
					[
						"refr",
						"Side Bar: Refresh"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"syc+",
						"Set Syntax: C++"
					],
					[
						"",
						"Copy File Path"
					],
					[
						"focud",
						"Focus File on Sidebar"
					],
					[
						"syn",
						"Set Syntax: C++"
					],
					[
						"sublime",
						"Colorsublime: Install Theme"
					],
					[
						"foc",
						"Focus File on Sidebar"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"cop",
						"Copy File Path"
					],
					[
						"ref",
						"Side Bar: Refresh"
					],
					[
						"color",
						"Colorsublime: Install Theme"
					],
					[
						"read",
						"ReadmePlease"
					],
					[
						"package",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"instl",
						"Package Control: Install Package"
					]
				],
				"width": 449.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/Volumes/5T/_dl/src-2"
			],
			"file_history":
			[
				"/Library/Preferences/com.apple.windowserver.plist",
				"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/IOKit/usb/IOUSBHostDevice.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/rsub/rsub.sublime-settings",
				"/sketch/libraries/ADC/doxygen/html/search/typedefs_73.html",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/sketch/libraries/Alexduino/src/Alexduino.cpp",
				"/sketch/libraries.off/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/Pin.h",
				"/sketch/libraries/Pin/src/Pin.cpp",
				"/sketch/libraries/OneButton/OneButton.cpp",
				"/sketch/libraries/OneButton/OneButton.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
				"/Volumes/5T/_dl/ShiftRegister.h",
				"/sketch/libraries/Talkie/talkie.cpp",
				"/sketch/libraries/Talkie/README.md",
				"/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/Arduino.h",
				"/sketch/libraries/Alexduino/src/Alexduino.h",
				"/sketch/My7Seg/My7Seg.ino",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.h",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.cpp",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
				"/sketch/libraries/SevenSegment/SevenSegment.h",
				"/sketch/libraries/SevenSegment/SevenSegment.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/My7Seg/My7Seg.ino",
				"/sketch/libraries/ICs/4511.h",
				"/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
				"/sketch/libraries/ICs/4511.cpp",
				"/sketch/libraries.off/BCDTo7Seg/examples/b4511_counter/b4511_counter.ino",
				"/sketch/libraries/BCDTo7Seg.virgin/BCDTo7Seg.h",
				"/sketch/libraries/Talkie/examples/_2_Voltmeter/_2_Voltmeter.ino",
				"/sketch/libraries/Talkie/talkie.h",
				"/sketch/libraries/Potentiometer/Potentiometer.h",
				"/sketch/libraries/Potentiometer/Potentiometer.cpp",
				"/sketch/libraries/ansiterm/readme.md",
				"/sketch/libraries/AsyncDelay/src/AsyncDelay.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/WString.h",
				"/sketch/libraries.off/ArduinoJson/third-party/gtest-1.7.0/xcode/Config/FrameworkTarget.xcconfig",
				"/sketch/hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBoldOblique12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBold12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp",
				"/sketch/libraries/LED/LED.cpp",
				"/sketch/libraries/Color/Color.h",
				"/sketch/libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h",
				"/sketch/libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/LUFA/Drivers/Board/Board.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII/makefile",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/AlexAVR/avr/programmers.txt",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.no.h",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.h",
				"/sketch/hardware/AlexAVR/avr/platform.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/SimpleThrottle/SimpleThrottle.ino",
				"/sketch/libraries/Handler/Handler.cpp",
				"/sketch/libraries/Handler/examples/CanYouHandleIt/CanYouHandleIt.ino",
				"/sketch/libraries/Handler/Handler.h",
				"/sketch/libraries/LED/LED.h",
				"/sketch/libraries/Throttle/examples/GoGoGoTiny/GoGoGoTiny.ino",
				"/sketch/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/libraries/Throttle/Throttle.cpp",
				"/sketch/libraries/GPIO/src/PinGroup.h",
				"/sketch/libraries/TimerLib/PinEffector.h",
				"/sketch/libraries/TimerLib/utility/FastDelegate.h",
				"/sketch/LEDme/LED.h",
				"/sketch/libraries/Segment7/Segment7.pdf",
				"/sketch/libraries/StackArray/StackArray.h",
				"/sketch/hardware/AlexAVR/avr/boards.txt",
				"/sketch/libraries/TimerLib/SimpleTimer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/LED/library.properties",
				"/sketch/pinguino.bootloader.c",
				"/sketch/hardware/avr-openhardware/avr/avrdude.conf",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.cpp",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.h",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.cpp",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.h",
				"/sketch/hardware/Cosa/avr/platform.txt",
				"/sketch/hardware/Cosa/avr/sub-modules",
				"/sketch/libraries/Adafruit_GFX_Library/gfxfont.h",
				"/sketch/libraries/Pin/src/boards/attinyX5.h",
				"/sketch/ACS712/xACS712/xACS712/Configurations/Adafruit Trinket 5V-16MHz.xcconfig",
				"/sketch/hardware/AlexAVR/avr/programmers.txt",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/sketch/libraries/GPIO/src/GPIO.h",
				"/sketch/libraries/Pin/library.properties",
				"/sketch/libraries/Pin/src/boards/others.h",
				"/sketch/libraries/GPIO/library.properties",
				"/sketch/libraries/GPIO/src/GPIO.cpp",
				"/sketch/hardware/google-tiny/avr/cores/tiny/WProgram.h",
				"/sketch/Classy/.pioenvs/nodemcu/FrameworkArduino/Arduino.h",
				"/sketch/hardware/google-tiny/avr/cores/tiny/Arduino.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/neomatrix-serial-input/neomatrixserial/neomatrixserial.ino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/breadboard/avr/boards.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/FastLED/FastLED.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Chrono/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Delegate.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/WiringFrameworkDependencies.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Interrupts.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Timer.h",
				"/opt/smi8ng",
				"/opt/sping",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/examples/GoGoGo/GoGoGo.ino",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.cpp",
				"/Users/localadmin/.macosz/modules/alex/functions/gzipit",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Periodic/Periodic.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/UdpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/TcpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/DriverPWM.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/LICENSE",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Makefile-rboot.mk",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/.travis.yml",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/samples/Basic_Runloop/app/application.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/SmingCore.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Switch File Deluxe/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Timer.h"
			],
			"find":
			{
				"height": 25.0
			},
			"find_in_files":
			{
				"height": 96.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"Quartz2DExtremeEnabled",
					"com.apple.windowserver.plist",
					"(",
					");",
					"inde",
					"DeviceRequest",
					"tty",
					"runtime",
					"runtim",
					"byte",
					"open",
					"UInt",
					"UInt ",
					"UInt",
					"inha",
					"unsigned int8_t",
					"UInt",
					"smile_bmp",
					"UInt",
					"my_4511",
					"on",
					",",
					"my_4511",
					"IC_4511",
					"&sp",
					"const uint8_t \\*(.*)\\s*PROGMEM",
					"const uint8_t (.*)\\[\\]",
					"(sp",
					"uint8_t s",
					";\nuint8_t ",
					"7129",
					"Button 2",
					"analog",
					"ANALOg_MAX",
					"PWM",
					"speed",
					"button2",
					"button",
					"button2",
					"button1",
					"0x.., \\/\\* (.).*",
					"0x5B, /* 2 */",
					"*/\n",
					"0x.., \\/\\* (.).*",
					"0x7C, /* b */",
					"cursor",
					"setTextColor",
					"expi",
					"handl",
					"test",
					"begin",
					"matrix.",
					"matr",
					"());",
					"fillScreen",
					"Adafruit_NeoMatrix",
					"avrdude",
					"USBKEY",
					"BOARD",
					"digital_pin_to_bit_mask_PGM",
					"m1284p",
					"uni",
					"m1284p",
					"ing",
					"PULSE",
					"LEDClass",
					"enum",
					"#",
					"0x05",
					"0x054",
					"0x06",
					"1284",
					"05",
					"sig",
					"__cxa_pure_virtual",
					"__AVR_ATTiny",
					"__AVR_ATmega32U4__",
					"recipe.preproc.macros",
					"__cxa_pure_virtual",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"pioenvs/",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"GFX",
					"pure",
					"effe",
					"toggle\\(",
					"on\\(\\)",
					"on()",
					"on",
					"off",
					"#define.*PWM.*\\w[0-9]*",
					"#define.*ANALOG.*\\w[0-9]*",
					"#define.*255",
					"#define.*ANALOG.*255",
					"#define.*PWM.*255",
					"#define.*PWM.*",
					"PWM_RANGE",
					"PWM",
					"REGD",
					"DEF_",
					"DEF_THR",
					"FAST",
					"                           ",
					"FAST",
					"PWM",
					"sap",
					"line",
					"move",
					"up\"",
					"time",
					"className",
					"rightn",
					"Print",
					"print",
					"DEB",
					"\nDEBO",
					"DEBO",
					"\nDEBO",
					"DEBO",
					"rest",
					"define.*\\sON\\s",
					"rest",
					"digitalWrite",
					"define.*\\sON\\s",
					"define.*\\sON",
					"define.*ON"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"",
					"uint8_t",
					"unsigned int",
					"int8_t",
					"unsigned int",
					"sp",
					"const PROGMEM uint8_t $1[]",
					"const uint8_t * $1",
					"(&sp",
					"const uint8_t s",
					",\n              ",
					"Button 2 (gas)",
					"brake",
					"gas",
					"\"$1\",",
					"",
					"LED"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/Volumes/5T/_dl/src-2"
				}
			],
			"groups":
			[
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Volumes/5T/_dl/src-2/CirSim.java",
							"semi_transient": true,
							"settings":
							{
								"buffer_size": 92209,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458490725.38,
									"syntax": "Packages/Java/Java.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 4399.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 25.0
			},
			"input":
			{
				"height": 36.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1360 741 0 0 1360 745 ",
			"project": "",
			"replace":
			{
				"height": 46.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"my",
						"My7Seg/My7Seg.ino"
					],
					[
						"my7",
						"libraries/ADC/doxygen/html/search/typedefs_73.html"
					],
					[
						"orig",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"4511",
						"libraries/ICs/4511.h"
					],
					[
						"my7se",
						"My7Seg/My7Seg.ino"
					],
					[
						"matrixt",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"cancom",
						"libraries/Alexduino/examples/CanCompile/CanCompile.ino"
					],
					[
						"led",
						"libraries/LED/LED.h"
					],
					[
						"sim",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"simpl",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"mys",
						"My7Seg/My7Seg.ino"
					],
					[
						"aledxdu",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"async",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"matrixtest",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde"
					],
					[
						"alexdui",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"wstrin",
						"hardware/AlexAVR/avr/cores/arduino/WString.h"
					],
					[
						"gfx",
						"libraries/Adafruit_GFX_Library/Adafruit_GFX.h"
					],
					[
						"gfxc",
						"hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h"
					],
					[
						"color",
						"libraries/Color/Color.h"
					],
					[
						"matri",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"pixel",
						"libraries/NeoPixelBus_by_Makuna/src/NeoPixelAnimator.h"
					],
					[
						"adaf",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"asyn",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"neopix",
						"libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h"
					],
					[
						"matrix",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"alexd",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"pingro",
						"libraries/GPIO/src/PinGroup.h"
					],
					[
						"pin",
						"libraries/Pin/src/Pin.h"
					],
					[
						"",
						"libraries/LED/LED.h"
					],
					[
						"stack",
						"libraries/StackArray/StackArray.h"
					],
					[
						"stackarray",
						"libraries/StackArray/StackArray.h"
					],
					[
						"pin.h",
						"libraries/Pin/src/Pin.h"
					],
					[
						"asyncd",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"led.",
						"LEDme/LED.h"
					],
					[
						"wpro",
						"hardware/google-tiny/avr/cores/tiny/WProgram.h"
					],
					[
						"arduino.h",
						"hardware/google-tiny/avr/cores/tiny/Arduino.h"
					],
					[
						"gogo",
						"Throttle/examples/GoGoGo/GoGoGo.ino"
					],
					[
						"throttl",
						"Throttle/Throttle.cpp"
					],
					[
						"throttle2016",
						"Throttle2016.h"
					],
					[
						"throttle",
						"Throttle2016.h"
					],
					[
						"dele",
						"Sming/SmingCore/Delegate.h"
					],
					[
						"timer",
						"Sming/SmingCore/Timer.h"
					],
					[
						"smingco",
						"Sming/SmingCore/SmingCore.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": true,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 319.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 104,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ui",
						"uint16_t"
					],
					[
						"setOutput",
						"setOutputLow"
					],
					[
						"rand",
						"randVal"
					],
					[
						"PWM",
						"PWMRANGE"
					],
					[
						"_C",
						"_CLEAR_Pin"
					],
					[
						"_l",
						"_level"
					],
					[
						"ga",
						"gasLight"
					],
					[
						"off",
						"offset"
					],
					[
						"Color",
						"colorCycle"
					],
					[
						"uint",
						"uint16_t"
					],
					[
						"NMe",
						"Adafruit_NeoMatrix"
					],
					[
						"S",
						"StackArray"
					],
					[
						"POR",
						"PORT_HIGH"
					],
					[
						"set",
						"setHigh"
					],
					[
						"board",
						"boards"
					],
					[
						"e",
						"endif"
					],
					[
						"DEF",
						"DEF_PWM"
					],
					[
						"be",
						"begin"
					],
					[
						"pri",
						"private"
					],
					[
						"chara",
						"character"
					],
					[
						"DE",
						"DEF_MAX_OUT"
					],
					[
						"THROTTLE_V_M",
						"THROTTLE_V_MAX"
					],
					[
						"OTA",
						"OTA_IP"
					],
					[
						"Up",
						"UPDATE_PIN"
					],
					[
						"ini",
						"initializeUs"
					],
					[
						"uin",
						"uint8_t"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino.orig/simuino.c",
					"settings":
					{
						"buffer_size": 21563,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino.orig/simuino.h",
					"settings":
					{
						"buffer_size": 2599,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino.orig/simuino_lib.c",
					"settings":
					{
						"buffer_size": 41660,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 289.0,
				"last_filter": "inst",
				"selected_items":
				[
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"plist",
						"Plist Binary: Toggle XML & Binary"
					],
					[
						"bina",
						"Plist Binary: Toggle XML & Binary"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"pat",
						"File: Copy Path"
					],
					[
						"path",
						"File: Copy Path"
					],
					[
						"name",
						"File: Copy Name"
					],
					[
						"coff",
						"Set Syntax: CoffeeScript"
					],
					[
						"gith",
						"GitHub Flavored Markdown: Preview"
					],
					[
						"conf",
						"Set Syntax: Generic Config"
					],
					[
						"focu",
						"Focus File on Sidebar"
					],
					[
						"sshc",
						"Set Syntax: SSH Config"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"c++",
						"Set Syntax: C++"
					],
					[
						"move",
						"File: Move"
					],
					[
						"copy",
						"File: Copy Path"
					],
					[
						"focus",
						"Focus File on Sidebar"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"psth",
						"Permute Lines: Shuffle"
					],
					[
						"make",
						"Set Syntax: Makefile"
					],
					[
						"makef",
						"Set Syntax: Makefile"
					],
					[
						"refre",
						"Side Bar: Refresh"
					],
					[
						"refr",
						"Side Bar: Refresh"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"syc+",
						"Set Syntax: C++"
					],
					[
						"",
						"Copy File Path"
					],
					[
						"focud",
						"Focus File on Sidebar"
					],
					[
						"syn",
						"Set Syntax: C++"
					],
					[
						"sublime",
						"Colorsublime: Install Theme"
					],
					[
						"foc",
						"Focus File on Sidebar"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"cop",
						"Copy File Path"
					],
					[
						"ref",
						"Side Bar: Refresh"
					],
					[
						"color",
						"Colorsublime: Install Theme"
					],
					[
						"read",
						"ReadmePlease"
					],
					[
						"package",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"instl",
						"Package Control: Install Package"
					]
				],
				"width": 449.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino.orig",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino.orig/servuino"
			],
			"file_history":
			[
				"/usr/include/ncurses.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino.orig/simuino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino/.git/MERGE_MSG",
				"/Library/Preferences/com.apple.windowserver.plist",
				"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/IOKit/usb/IOUSBHostDevice.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/rsub/rsub.sublime-settings",
				"/sketch/libraries/ADC/doxygen/html/search/typedefs_73.html",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/sketch/libraries/Alexduino/src/Alexduino.cpp",
				"/sketch/libraries.off/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/Pin.h",
				"/sketch/libraries/Pin/src/Pin.cpp",
				"/sketch/libraries/OneButton/OneButton.cpp",
				"/sketch/libraries/OneButton/OneButton.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
				"/Volumes/5T/_dl/ShiftRegister.h",
				"/sketch/libraries/Talkie/talkie.cpp",
				"/sketch/libraries/Talkie/README.md",
				"/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/Arduino.h",
				"/sketch/libraries/Alexduino/src/Alexduino.h",
				"/sketch/My7Seg/My7Seg.ino",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.h",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.cpp",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
				"/sketch/libraries/SevenSegment/SevenSegment.h",
				"/sketch/libraries/SevenSegment/SevenSegment.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/My7Seg/My7Seg.ino",
				"/sketch/libraries/ICs/4511.h",
				"/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
				"/sketch/libraries/ICs/4511.cpp",
				"/sketch/libraries.off/BCDTo7Seg/examples/b4511_counter/b4511_counter.ino",
				"/sketch/libraries/BCDTo7Seg.virgin/BCDTo7Seg.h",
				"/sketch/libraries/Talkie/examples/_2_Voltmeter/_2_Voltmeter.ino",
				"/sketch/libraries/Talkie/talkie.h",
				"/sketch/libraries/Potentiometer/Potentiometer.h",
				"/sketch/libraries/Potentiometer/Potentiometer.cpp",
				"/sketch/libraries/ansiterm/readme.md",
				"/sketch/libraries/AsyncDelay/src/AsyncDelay.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/WString.h",
				"/sketch/libraries.off/ArduinoJson/third-party/gtest-1.7.0/xcode/Config/FrameworkTarget.xcconfig",
				"/sketch/hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBoldOblique12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBold12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp",
				"/sketch/libraries/LED/LED.cpp",
				"/sketch/libraries/Color/Color.h",
				"/sketch/libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h",
				"/sketch/libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/LUFA/Drivers/Board/Board.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII/makefile",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/AlexAVR/avr/programmers.txt",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.no.h",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.h",
				"/sketch/hardware/AlexAVR/avr/platform.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/SimpleThrottle/SimpleThrottle.ino",
				"/sketch/libraries/Handler/Handler.cpp",
				"/sketch/libraries/Handler/examples/CanYouHandleIt/CanYouHandleIt.ino",
				"/sketch/libraries/Handler/Handler.h",
				"/sketch/libraries/LED/LED.h",
				"/sketch/libraries/Throttle/examples/GoGoGoTiny/GoGoGoTiny.ino",
				"/sketch/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/libraries/Throttle/Throttle.cpp",
				"/sketch/libraries/GPIO/src/PinGroup.h",
				"/sketch/libraries/TimerLib/PinEffector.h",
				"/sketch/libraries/TimerLib/utility/FastDelegate.h",
				"/sketch/LEDme/LED.h",
				"/sketch/libraries/Segment7/Segment7.pdf",
				"/sketch/libraries/StackArray/StackArray.h",
				"/sketch/hardware/AlexAVR/avr/boards.txt",
				"/sketch/libraries/TimerLib/SimpleTimer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/LED/library.properties",
				"/sketch/pinguino.bootloader.c",
				"/sketch/hardware/avr-openhardware/avr/avrdude.conf",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.cpp",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.h",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.cpp",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.h",
				"/sketch/hardware/Cosa/avr/platform.txt",
				"/sketch/hardware/Cosa/avr/sub-modules",
				"/sketch/libraries/Adafruit_GFX_Library/gfxfont.h",
				"/sketch/libraries/Pin/src/boards/attinyX5.h",
				"/sketch/ACS712/xACS712/xACS712/Configurations/Adafruit Trinket 5V-16MHz.xcconfig",
				"/sketch/hardware/AlexAVR/avr/programmers.txt",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/sketch/libraries/GPIO/src/GPIO.h",
				"/sketch/libraries/Pin/library.properties",
				"/sketch/libraries/Pin/src/boards/others.h",
				"/sketch/libraries/GPIO/library.properties",
				"/sketch/libraries/GPIO/src/GPIO.cpp",
				"/sketch/hardware/google-tiny/avr/cores/tiny/WProgram.h",
				"/sketch/Classy/.pioenvs/nodemcu/FrameworkArduino/Arduino.h",
				"/sketch/hardware/google-tiny/avr/cores/tiny/Arduino.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/neomatrix-serial-input/neomatrixserial/neomatrixserial.ino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/breadboard/avr/boards.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/FastLED/FastLED.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Chrono/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Delegate.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/WiringFrameworkDependencies.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Interrupts.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Timer.h",
				"/opt/smi8ng",
				"/opt/sping",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/examples/GoGoGo/GoGoGo.ino",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.cpp",
				"/Users/localadmin/.macosz/modules/alex/functions/gzipit",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Periodic/Periodic.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/UdpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/TcpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/DriverPWM.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/LICENSE",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Makefile-rboot.mk",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/.travis.yml",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/samples/Basic_Runloop/app/application.cpp"
			],
			"find":
			{
				"height": 35.0
			},
			"find_in_files":
			{
				"height": 96.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"ncurses",
					"if\\((p=.*\\))\\)",
					"while\\((p=.*\\))\\)",
					",-1",
					",-01",
					"while\\((p=.*\\))\\)",
					"if\\((p=.*\\))\\)",
					"\\(p=",
					"\\wp=",
					"\\bp=",
					"p=",
					"editor",
					"Quartz2DExtremeEnabled",
					"com.apple.windowserver.plist",
					"(",
					");",
					"inde",
					"DeviceRequest",
					"tty",
					"runtime",
					"runtim",
					"byte",
					"open",
					"UInt",
					"UInt ",
					"UInt",
					"inha",
					"unsigned int8_t",
					"UInt",
					"smile_bmp",
					"UInt",
					"my_4511",
					"on",
					",",
					"my_4511",
					"IC_4511",
					"&sp",
					"const uint8_t \\*(.*)\\s*PROGMEM",
					"const uint8_t (.*)\\[\\]",
					"(sp",
					"uint8_t s",
					";\nuint8_t ",
					"7129",
					"Button 2",
					"analog",
					"ANALOg_MAX",
					"PWM",
					"speed",
					"button2",
					"button",
					"button2",
					"button1",
					"0x.., \\/\\* (.).*",
					"0x5B, /* 2 */",
					"*/\n",
					"0x.., \\/\\* (.).*",
					"0x7C, /* b */",
					"cursor",
					"setTextColor",
					"expi",
					"handl",
					"test",
					"begin",
					"matrix.",
					"matr",
					"());",
					"fillScreen",
					"Adafruit_NeoMatrix",
					"avrdude",
					"USBKEY",
					"BOARD",
					"digital_pin_to_bit_mask_PGM",
					"m1284p",
					"uni",
					"m1284p",
					"ing",
					"PULSE",
					"LEDClass",
					"enum",
					"#",
					"0x05",
					"0x054",
					"0x06",
					"1284",
					"05",
					"sig",
					"__cxa_pure_virtual",
					"__AVR_ATTiny",
					"__AVR_ATmega32U4__",
					"recipe.preproc.macros",
					"__cxa_pure_virtual",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"pioenvs/",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"GFX",
					"pure",
					"effe",
					"toggle\\(",
					"on\\(\\)",
					"on()",
					"on",
					"off",
					"#define.*PWM.*\\w[0-9]*",
					"#define.*ANALOG.*\\w[0-9]*",
					"#define.*255",
					"#define.*ANALOG.*255",
					"#define.*PWM.*255",
					"#define.*PWM.*",
					"PWM_RANGE",
					"PWM",
					"REGD",
					"DEF_",
					"DEF_THR",
					"FAST",
					"                           ",
					"FAST",
					"PWM",
					"sap",
					"line",
					"move",
					"up\"",
					"time",
					"className",
					"rightn",
					"Print",
					"print"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
					"if(($1))",
					"while(($1))",
					"if(($1))",
					"if(($1)))",
					"",
					"uint8_t",
					"unsigned int",
					"int8_t",
					"unsigned int",
					"sp",
					"const PROGMEM uint8_t $1[]",
					"const uint8_t * $1",
					"(&sp",
					"const uint8_t s",
					",\n              ",
					"Button 2 (gas)",
					"brake",
					"gas",
					"\"$1\",",
					"",
					"LED"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino.orig"
				}
			],
			"groups":
			[
				{
					"selected": 2,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino.orig/simuino.c",
							"semi_transient": true,
							"settings":
							{
								"buffer_size": 21563,
								"regions":
								{
								},
								"selection":
								[
									[
										21143,
										21143
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458509440.31,
									"syntax": "Packages/C++/C.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 15419.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino.orig/simuino.h",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 2599,
								"regions":
								{
								},
								"selection":
								[
									[
										1626,
										1626
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458509495.98,
									"syntax": "Packages/C++/C++.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 408.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino.orig/simuino_lib.c",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 41660,
								"regions":
								{
								},
								"selection":
								[
									[
										10236,
										10241
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458509783.73,
									"syntax": "Packages/C++/C.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 8137.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 25.0
			},
			"input":
			{
				"height": 36.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1360 741 0 0 1360 745 ",
			"project": "",
			"replace":
			{
				"height": 46.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"my",
						"My7Seg/My7Seg.ino"
					],
					[
						"my7",
						"libraries/ADC/doxygen/html/search/typedefs_73.html"
					],
					[
						"orig",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"4511",
						"libraries/ICs/4511.h"
					],
					[
						"my7se",
						"My7Seg/My7Seg.ino"
					],
					[
						"matrixt",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"cancom",
						"libraries/Alexduino/examples/CanCompile/CanCompile.ino"
					],
					[
						"led",
						"libraries/LED/LED.h"
					],
					[
						"sim",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"simpl",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"mys",
						"My7Seg/My7Seg.ino"
					],
					[
						"aledxdu",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"async",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"matrixtest",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde"
					],
					[
						"alexdui",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"wstrin",
						"hardware/AlexAVR/avr/cores/arduino/WString.h"
					],
					[
						"gfx",
						"libraries/Adafruit_GFX_Library/Adafruit_GFX.h"
					],
					[
						"gfxc",
						"hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h"
					],
					[
						"color",
						"libraries/Color/Color.h"
					],
					[
						"matri",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"pixel",
						"libraries/NeoPixelBus_by_Makuna/src/NeoPixelAnimator.h"
					],
					[
						"adaf",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"asyn",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"neopix",
						"libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h"
					],
					[
						"matrix",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"alexd",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"pingro",
						"libraries/GPIO/src/PinGroup.h"
					],
					[
						"pin",
						"libraries/Pin/src/Pin.h"
					],
					[
						"",
						"libraries/LED/LED.h"
					],
					[
						"stack",
						"libraries/StackArray/StackArray.h"
					],
					[
						"stackarray",
						"libraries/StackArray/StackArray.h"
					],
					[
						"pin.h",
						"libraries/Pin/src/Pin.h"
					],
					[
						"asyncd",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"led.",
						"LEDme/LED.h"
					],
					[
						"wpro",
						"hardware/google-tiny/avr/cores/tiny/WProgram.h"
					],
					[
						"arduino.h",
						"hardware/google-tiny/avr/cores/tiny/Arduino.h"
					],
					[
						"gogo",
						"Throttle/examples/GoGoGo/GoGoGo.ino"
					],
					[
						"throttl",
						"Throttle/Throttle.cpp"
					],
					[
						"throttle2016",
						"Throttle2016.h"
					],
					[
						"throttle",
						"Throttle2016.h"
					],
					[
						"dele",
						"Sming/SmingCore/Delegate.h"
					],
					[
						"timer",
						"Sming/SmingCore/Timer.h"
					],
					[
						"smingco",
						"Sming/SmingCore/SmingCore.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": true,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 319.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 108,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ui",
						"uint16_t"
					],
					[
						"setOutput",
						"setOutputLow"
					],
					[
						"rand",
						"randVal"
					],
					[
						"PWM",
						"PWMRANGE"
					],
					[
						"_C",
						"_CLEAR_Pin"
					],
					[
						"_l",
						"_level"
					],
					[
						"ga",
						"gasLight"
					],
					[
						"off",
						"offset"
					],
					[
						"Color",
						"colorCycle"
					],
					[
						"uint",
						"uint16_t"
					],
					[
						"NMe",
						"Adafruit_NeoMatrix"
					],
					[
						"S",
						"StackArray"
					],
					[
						"POR",
						"PORT_HIGH"
					],
					[
						"set",
						"setHigh"
					],
					[
						"board",
						"boards"
					],
					[
						"e",
						"endif"
					],
					[
						"DEF",
						"DEF_PWM"
					],
					[
						"be",
						"begin"
					],
					[
						"pri",
						"private"
					],
					[
						"chara",
						"character"
					],
					[
						"DE",
						"DEF_MAX_OUT"
					],
					[
						"THROTTLE_V_M",
						"THROTTLE_V_MAX"
					],
					[
						"OTA",
						"OTA_IP"
					],
					[
						"Up",
						"UPDATE_PIN"
					],
					[
						"ini",
						"initializeUs"
					],
					[
						"uin",
						"uint8_t"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Side Bar.sublime-settings",
					"settings":
					{
						"buffer_size": 1461,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/node/foldersize/package.json",
					"settings":
					{
						"buffer_size": 842,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 249.0,
				"last_filter": "path",
				"selected_items":
				[
					[
						"path",
						"File: Copy Path"
					],
					[
						"plist",
						"Plist Binary: Toggle XML & Binary"
					],
					[
						"bina",
						"Plist Binary: Toggle XML & Binary"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"pat",
						"File: Copy Path"
					],
					[
						"name",
						"File: Copy Name"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"coff",
						"Set Syntax: CoffeeScript"
					],
					[
						"gith",
						"GitHub Flavored Markdown: Preview"
					],
					[
						"conf",
						"Set Syntax: Generic Config"
					],
					[
						"focu",
						"Focus File on Sidebar"
					],
					[
						"sshc",
						"Set Syntax: SSH Config"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"c++",
						"Set Syntax: C++"
					],
					[
						"move",
						"File: Move"
					],
					[
						"copy",
						"File: Copy Path"
					],
					[
						"focus",
						"Focus File on Sidebar"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"psth",
						"Permute Lines: Shuffle"
					],
					[
						"make",
						"Set Syntax: Makefile"
					],
					[
						"makef",
						"Set Syntax: Makefile"
					],
					[
						"refre",
						"Side Bar: Refresh"
					],
					[
						"refr",
						"Side Bar: Refresh"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"syc+",
						"Set Syntax: C++"
					],
					[
						"",
						"Copy File Path"
					],
					[
						"focud",
						"Focus File on Sidebar"
					],
					[
						"syn",
						"Set Syntax: C++"
					],
					[
						"sublime",
						"Colorsublime: Install Theme"
					],
					[
						"foc",
						"Focus File on Sidebar"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"cop",
						"Copy File Path"
					],
					[
						"ref",
						"Side Bar: Refresh"
					],
					[
						"color",
						"Colorsublime: Install Theme"
					],
					[
						"read",
						"ReadmePlease"
					],
					[
						"package",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"instl",
						"Package Control: Install Package"
					]
				],
				"width": 467.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/node",
				"/node/foldersize",
				"/node/foldersize/src",
				"/node/mrgray.com",
				"/node/node-mac",
				"/node/node_modules/pretty-autoindex",
				"/node/node_modules/pretty-autoindex/css",
				"/node/node_modules/pretty-autoindex/src",
				"/node/node_modules/serve-index",
				"/node/node_modules/serve-index/public",
				"/node/nodeAppKit",
				"/node/nodeAppKit/stylesheets",
				"/node/NodeCocoa",
				"/node/terminal-kit/sample",
				"/node/terminal-menu",
				"/node/terminal-menu/example"
			],
			"file_history":
			[
				"/node/node_modules/pretty-autoindex/src/index.html",
				"/node/node_modules/pretty-autoindex/css/pretty-autoindex.scss",
				"/node/foldersize/package.json",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/SideBarEnhancements/Side Bar.sublime-settings",
				"/Library/Preferences/com.apple.windowserver.plist",
				"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/IOKit/usb/IOUSBHostDevice.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/rsub/rsub.sublime-settings",
				"/sketch/libraries/ADC/doxygen/html/search/typedefs_73.html",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/sketch/libraries/Alexduino/src/Alexduino.cpp",
				"/sketch/libraries.off/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/Pin.h",
				"/sketch/libraries/Pin/src/Pin.cpp",
				"/sketch/libraries/OneButton/OneButton.cpp",
				"/sketch/libraries/OneButton/OneButton.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
				"/Volumes/5T/_dl/ShiftRegister.h",
				"/sketch/libraries/Talkie/talkie.cpp",
				"/sketch/libraries/Talkie/README.md",
				"/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/Arduino.h",
				"/sketch/libraries/Alexduino/src/Alexduino.h",
				"/sketch/My7Seg/My7Seg.ino",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.h",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.cpp",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
				"/sketch/libraries/SevenSegment/SevenSegment.h",
				"/sketch/libraries/SevenSegment/SevenSegment.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/My7Seg/My7Seg.ino",
				"/sketch/libraries/ICs/4511.h",
				"/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
				"/sketch/libraries/ICs/4511.cpp",
				"/sketch/libraries.off/BCDTo7Seg/examples/b4511_counter/b4511_counter.ino",
				"/sketch/libraries/BCDTo7Seg.virgin/BCDTo7Seg.h",
				"/sketch/libraries/Talkie/examples/_2_Voltmeter/_2_Voltmeter.ino",
				"/sketch/libraries/Talkie/talkie.h",
				"/sketch/libraries/Potentiometer/Potentiometer.h",
				"/sketch/libraries/Potentiometer/Potentiometer.cpp",
				"/sketch/libraries/ansiterm/readme.md",
				"/sketch/libraries/AsyncDelay/src/AsyncDelay.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/WString.h",
				"/sketch/libraries.off/ArduinoJson/third-party/gtest-1.7.0/xcode/Config/FrameworkTarget.xcconfig",
				"/sketch/hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBoldOblique12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBold12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp",
				"/sketch/libraries/LED/LED.cpp",
				"/sketch/libraries/Color/Color.h",
				"/sketch/libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h",
				"/sketch/libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/LUFA/Drivers/Board/Board.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII/makefile",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/AlexAVR/avr/programmers.txt",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.no.h",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.h",
				"/sketch/hardware/AlexAVR/avr/platform.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/SimpleThrottle/SimpleThrottle.ino",
				"/sketch/libraries/Handler/Handler.cpp",
				"/sketch/libraries/Handler/examples/CanYouHandleIt/CanYouHandleIt.ino",
				"/sketch/libraries/Handler/Handler.h",
				"/sketch/libraries/LED/LED.h",
				"/sketch/libraries/Throttle/examples/GoGoGoTiny/GoGoGoTiny.ino",
				"/sketch/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/libraries/Throttle/Throttle.cpp",
				"/sketch/libraries/GPIO/src/PinGroup.h",
				"/sketch/libraries/TimerLib/PinEffector.h",
				"/sketch/libraries/TimerLib/utility/FastDelegate.h",
				"/sketch/LEDme/LED.h",
				"/sketch/libraries/Segment7/Segment7.pdf",
				"/sketch/libraries/StackArray/StackArray.h",
				"/sketch/hardware/AlexAVR/avr/boards.txt",
				"/sketch/libraries/TimerLib/SimpleTimer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/LED/library.properties",
				"/sketch/pinguino.bootloader.c",
				"/sketch/hardware/avr-openhardware/avr/avrdude.conf",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.cpp",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.h",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.cpp",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.h",
				"/sketch/hardware/Cosa/avr/platform.txt",
				"/sketch/hardware/Cosa/avr/sub-modules",
				"/sketch/libraries/Adafruit_GFX_Library/gfxfont.h",
				"/sketch/libraries/Pin/src/boards/attinyX5.h",
				"/sketch/ACS712/xACS712/xACS712/Configurations/Adafruit Trinket 5V-16MHz.xcconfig",
				"/sketch/hardware/AlexAVR/avr/programmers.txt",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/sketch/libraries/GPIO/src/GPIO.h",
				"/sketch/libraries/Pin/library.properties",
				"/sketch/libraries/Pin/src/boards/others.h",
				"/sketch/libraries/GPIO/library.properties",
				"/sketch/libraries/GPIO/src/GPIO.cpp",
				"/sketch/hardware/google-tiny/avr/cores/tiny/WProgram.h",
				"/sketch/Classy/.pioenvs/nodemcu/FrameworkArduino/Arduino.h",
				"/sketch/hardware/google-tiny/avr/cores/tiny/Arduino.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/neomatrix-serial-input/neomatrixserial/neomatrixserial.ino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/breadboard/avr/boards.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/FastLED/FastLED.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Chrono/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Delegate.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/WiringFrameworkDependencies.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Interrupts.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Timer.h",
				"/opt/smi8ng",
				"/opt/sping",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/examples/GoGoGo/GoGoGo.ino",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.cpp",
				"/Users/localadmin/.macosz/modules/alex/functions/gzipit",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Periodic/Periodic.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/UdpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/TcpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/DriverPWM.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/LICENSE",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Makefile-rboot.mk",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/.travis.yml"
			],
			"find":
			{
				"height": 35.0
			},
			"find_in_files":
			{
				"height": 96.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"Quartz2DExtremeEnabled",
					"com.apple.windowserver.plist",
					"(",
					");",
					"inde",
					"DeviceRequest",
					"tty",
					"runtime",
					"runtim",
					"byte",
					"open",
					"UInt",
					"UInt ",
					"UInt",
					"inha",
					"unsigned int8_t",
					"UInt",
					"smile_bmp",
					"UInt",
					"my_4511",
					"on",
					",",
					"my_4511",
					"IC_4511",
					"&sp",
					"const uint8_t \\*(.*)\\s*PROGMEM",
					"const uint8_t (.*)\\[\\]",
					"(sp",
					"uint8_t s",
					";\nuint8_t ",
					"7129",
					"Button 2",
					"analog",
					"ANALOg_MAX",
					"PWM",
					"speed",
					"button2",
					"button",
					"button2",
					"button1",
					"0x.., \\/\\* (.).*",
					"0x5B, /* 2 */",
					"*/\n",
					"0x.., \\/\\* (.).*",
					"0x7C, /* b */",
					"cursor",
					"setTextColor",
					"expi",
					"handl",
					"test",
					"begin",
					"matrix.",
					"matr",
					"());",
					"fillScreen",
					"Adafruit_NeoMatrix",
					"avrdude",
					"USBKEY",
					"BOARD",
					"digital_pin_to_bit_mask_PGM",
					"m1284p",
					"uni",
					"m1284p",
					"ing",
					"PULSE",
					"LEDClass",
					"enum",
					"#",
					"0x05",
					"0x054",
					"0x06",
					"1284",
					"05",
					"sig",
					"__cxa_pure_virtual",
					"__AVR_ATTiny",
					"__AVR_ATmega32U4__",
					"recipe.preproc.macros",
					"__cxa_pure_virtual",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"pioenvs/",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"GFX",
					"pure",
					"effe",
					"toggle\\(",
					"on\\(\\)",
					"on()",
					"on",
					"off",
					"#define.*PWM.*\\w[0-9]*",
					"#define.*ANALOG.*\\w[0-9]*",
					"#define.*255",
					"#define.*ANALOG.*255",
					"#define.*PWM.*255",
					"#define.*PWM.*",
					"PWM_RANGE",
					"PWM",
					"REGD",
					"DEF_",
					"DEF_THR",
					"FAST",
					"                           ",
					"FAST",
					"PWM",
					"sap",
					"line",
					"move",
					"up\"",
					"time",
					"className",
					"rightn",
					"Print",
					"print",
					"DEB",
					"\nDEBO",
					"DEBO",
					"\nDEBO",
					"DEBO",
					"rest",
					"define.*\\sON\\s",
					"rest",
					"digitalWrite",
					"define.*\\sON\\s",
					"define.*\\sON",
					"define.*ON"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"",
					"uint8_t",
					"unsigned int",
					"int8_t",
					"unsigned int",
					"sp",
					"const PROGMEM uint8_t $1[]",
					"const uint8_t * $1",
					"(&sp",
					"const uint8_t s",
					",\n              ",
					"Button 2 (gas)",
					"brake",
					"gas",
					"\"$1\",",
					"",
					"LED"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/node"
				}
			],
			"groups":
			[
				{
					"selected": 1,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Side Bar.sublime-settings",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1461,
								"regions":
								{
								},
								"selection":
								[
									[
										1458,
										1458
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458511928.03,
									"syntax": "Packages/JavaScript/JSON.sublime-syntax",
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 85.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/node/foldersize/package.json",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 842,
								"regions":
								{
								},
								"selection":
								[
									[
										784,
										784
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458512001.23,
									"syntax": "Packages/JavaScript/JSON.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 44.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 25.0
			},
			"input":
			{
				"height": 36.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1360 741 0 0 1360 745 ",
			"project": "",
			"replace":
			{
				"height": 46.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"my",
						"My7Seg/My7Seg.ino"
					],
					[
						"my7",
						"libraries/ADC/doxygen/html/search/typedefs_73.html"
					],
					[
						"orig",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"4511",
						"libraries/ICs/4511.h"
					],
					[
						"my7se",
						"My7Seg/My7Seg.ino"
					],
					[
						"matrixt",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"cancom",
						"libraries/Alexduino/examples/CanCompile/CanCompile.ino"
					],
					[
						"led",
						"libraries/LED/LED.h"
					],
					[
						"sim",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"simpl",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"mys",
						"My7Seg/My7Seg.ino"
					],
					[
						"aledxdu",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"async",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"matrixtest",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde"
					],
					[
						"alexdui",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"wstrin",
						"hardware/AlexAVR/avr/cores/arduino/WString.h"
					],
					[
						"gfx",
						"libraries/Adafruit_GFX_Library/Adafruit_GFX.h"
					],
					[
						"gfxc",
						"hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h"
					],
					[
						"color",
						"libraries/Color/Color.h"
					],
					[
						"matri",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"pixel",
						"libraries/NeoPixelBus_by_Makuna/src/NeoPixelAnimator.h"
					],
					[
						"adaf",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"asyn",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"neopix",
						"libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h"
					],
					[
						"matrix",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"alexd",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"pingro",
						"libraries/GPIO/src/PinGroup.h"
					],
					[
						"pin",
						"libraries/Pin/src/Pin.h"
					],
					[
						"",
						"libraries/LED/LED.h"
					],
					[
						"stack",
						"libraries/StackArray/StackArray.h"
					],
					[
						"stackarray",
						"libraries/StackArray/StackArray.h"
					],
					[
						"pin.h",
						"libraries/Pin/src/Pin.h"
					],
					[
						"asyncd",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"led.",
						"LEDme/LED.h"
					],
					[
						"wpro",
						"hardware/google-tiny/avr/cores/tiny/WProgram.h"
					],
					[
						"arduino.h",
						"hardware/google-tiny/avr/cores/tiny/Arduino.h"
					],
					[
						"gogo",
						"Throttle/examples/GoGoGo/GoGoGo.ino"
					],
					[
						"throttl",
						"Throttle/Throttle.cpp"
					],
					[
						"throttle2016",
						"Throttle2016.h"
					],
					[
						"throttle",
						"Throttle2016.h"
					],
					[
						"dele",
						"Sming/SmingCore/Delegate.h"
					],
					[
						"timer",
						"Sming/SmingCore/Timer.h"
					],
					[
						"smingco",
						"Sming/SmingCore/SmingCore.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": true,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 319.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 102,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ui",
						"uint16_t"
					],
					[
						"setOutput",
						"setOutputLow"
					],
					[
						"rand",
						"randVal"
					],
					[
						"PWM",
						"PWMRANGE"
					],
					[
						"_C",
						"_CLEAR_Pin"
					],
					[
						"_l",
						"_level"
					],
					[
						"ga",
						"gasLight"
					],
					[
						"off",
						"offset"
					],
					[
						"Color",
						"colorCycle"
					],
					[
						"uint",
						"uint16_t"
					],
					[
						"NMe",
						"Adafruit_NeoMatrix"
					],
					[
						"S",
						"StackArray"
					],
					[
						"POR",
						"PORT_HIGH"
					],
					[
						"set",
						"setHigh"
					],
					[
						"board",
						"boards"
					],
					[
						"e",
						"endif"
					],
					[
						"DEF",
						"DEF_PWM"
					],
					[
						"be",
						"begin"
					],
					[
						"pri",
						"private"
					],
					[
						"chara",
						"character"
					],
					[
						"DE",
						"DEF_MAX_OUT"
					],
					[
						"THROTTLE_V_M",
						"THROTTLE_V_MAX"
					],
					[
						"OTA",
						"OTA_IP"
					],
					[
						"Up",
						"UPDATE_PIN"
					],
					[
						"ini",
						"initializeUs"
					],
					[
						"uin",
						"uint8_t"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino/simuino_lib.c",
					"settings":
					{
						"buffer_size": 36792,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino/servuino/arduino.h",
					"settings":
					{
						"buffer_size": 16119,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "# Makefile for simuino on OSX\n\nsimuino: simuino.cpp\n	g++ -o $@ $^ -lncurses\n\nclean:\n	rm -rf *.o simuino\n\nrun: simuino\n	./$^\n",
					"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino/Makefile",
					"file_size": 124,
					"file_write_time": 131029820910000000,
					"settings":
					{
						"buffer_size": 124,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "# Object files\n*.o\n*.ko\n*.obj\n*.elf\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Libraries\n*.lib\n*.a\n*.la\n*.lo\n\n# Shared objects (inc. Windows DLLs)\n*.dll\n*.so\n*.so.*\n*.dylib\n\n# Executables\n*.exe\n*.out\n*.app\n*.i*86\n*.x86_64\n*.hex\n\nsimuino\n",
					"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino/.gitignore",
					"file_size": 232,
					"file_write_time": 131029815850000000,
					"settings":
					{
						"buffer_size": 232,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "# Servuino Cust Log Version: 0.1.2\n2 PIN: Led Blink 13\n4 Led is on 1\n6 Led is off 0\n9 Led is on 1\n11 Led is off 0\n14 Led is on 1\n16 Led is off 0\n19 Led is on 1\n21 Led is off 0\n24 Led is on 1\n26 Led is off 0\n29 Led is on 1\n31 Led is off 0\n34 Led is on 1\n36 Led is off 0\n39 Led is on 1\n41 Led is off 0\n44 Led is on 1\n46 Led is off 0\n49 Led is on 1\n51 Led is off 0\n54 Led is on 1\n56 Led is off 0\n59 Led is on 1\n61 Led is off 0\n64 Led is on 1\n66 Led is off 0\n69 Led is on 1\n71 Led is off 0\n74 Led is on 1\n76 Led is off 0\n79 Led is on 1\n81 Led is off 0\n84 Led is on 1\n86 Led is off 0\n89 Led is on 1\n91 Led is off 0\n94 Led is on 1\n96 Led is off 0\n99 Led is on 1\n101 Led is off 0\n104 Led is on 1\n106 Led is off 0\n109 Led is on 1\n111 Led is off 0\n114 Led is on 1\n116 Led is off 0\n119 Led is on 1\n121 Led is off 0\n124 Led is on 1\n126 Led is off 0\n129 Led is on 1\n131 Led is off 0\n134 Led is on 1\n136 Led is off 0\n139 Led is on 1\n141 Led is off 0\n144 Led is on 1\n146 Led is off 0\n149 Led is on 1\n151 Led is off 0\n154 Led is on 1\n156 Led is off 0\n159 Led is on 1\n161 Led is off 0\n164 Led is on 1\n166 Led is off 0\n169 Led is on 1\n171 Led is off 0\n174 Led is on 1\n176 Led is off 0\n179 Led is on 1\n181 Led is off 0\n184 Led is on 1\n186 Led is off 0\n189 Led is on 1\n191 Led is off 0\n194 Led is on 1\n196 Led is off 0\n199 Led is on 1\n201 Led is off 0\n204 Led is on 1\n206 Led is off 0\n209 Led is on 1\n211 Led is off 0\n214 Led is on 1\n216 Led is off 0\n219 Led is on 1\n221 Led is off 0\n224 Led is on 1\n226 Led is off 0\n229 Led is on 1\n231 Led is off 0\n234 Led is on 1\n236 Led is off 0\n239 Led is on 1\n241 Led is off 0\n244 Led is on 1\n246 Led is off 0\n249 Led is on 1\n251 Led is off 0\n254 Led is on 1\n256 Led is off 0\n259 Led is on 1\n261 Led is off 0\n264 Led is on 1\n266 Led is off 0\n269 Led is on 1\n271 Led is off 0\n274 Led is on 1\n276 Led is off 0\n279 Led is on 1\n281 Led is off 0\n284 Led is on 1\n286 Led is off 0\n289 Led is on 1\n291 Led is off 0\n294 Led is on 1\n296 Led is off 0\n299 Led is on 1\n301 Led is off 0\n304 Led is on 1\n306 Led is off 0\n309 Led is on 1\n311 Led is off 0\n314 Led is on 1\n316 Led is off 0\n319 Led is on 1\n321 Led is off 0\n324 Led is on 1\n326 Led is off 0\n329 Led is on 1\n331 Led is off 0\n334 Led is on 1\n336 Led is off 0\n339 Led is on 1\n341 Led is off 0\n344 Led is on 1\n346 Led is off 0\n349 Led is on 1\n351 Led is off 0\n354 Led is on 1\n356 Led is off 0\n359 Led is on 1\n361 Led is off 0\n364 Led is on 1\n366 Led is off 0\n369 Led is on 1\n371 Led is off 0\n374 Led is on 1\n376 Led is off 0\n379 Led is on 1\n381 Led is off 0\n384 Led is on 1\n386 Led is off 0\n389 Led is on 1\n391 Led is off 0\n394 Led is on 1\n396 Led is off 0\n399 Led is on 1\n401 Led is off 0\n404 Led is on 1\n406 Led is off 0\n409 Led is on 1\n411 Led is off 0\n414 Led is on 1\n416 Led is off 0\n419 Led is on 1\n421 Led is off 0\n424 Led is on 1\n426 Led is off 0\n429 Led is on 1\n431 Led is off 0\n434 Led is on 1\n436 Led is off 0\n439 Led is on 1\n441 Led is off 0\n444 Led is on 1\n446 Led is off 0\n449 Led is on 1\n451 Led is off 0\n454 Led is on 1\n456 Led is off 0\n459 Led is on 1\n461 Led is off 0\n464 Led is on 1\n466 Led is off 0\n469 Led is on 1\n471 Led is off 0\n474 Led is on 1\n476 Led is off 0\n479 Led is on 1\n481 Led is off 0\n484 Led is on 1\n486 Led is off 0\n489 Led is on 1\n491 Led is off 0\n494 Led is on 1\n496 Led is off 0\n499 Led is on 1\n501 Led is off 0\n504 Led is on 1\n506 Led is off 0\n509 Led is on 1\n511 Led is off 0\n514 Led is on 1\n516 Led is off 0\n519 Led is on 1\n521 Led is off 0\n524 Led is on 1\n526 Led is off 0\n529 Led is on 1\n531 Led is off 0\n534 Led is on 1\n536 Led is off 0\n539 Led is on 1\n541 Led is off 0\n544 Led is on 1\n546 Led is off 0\n549 Led is on 1\n551 Led is off 0\n554 Led is on 1\n556 Led is off 0\n559 Led is on 1\n561 Led is off 0\n564 Led is on 1\n566 Led is off 0\n569 Led is on 1\n571 Led is off 0\n574 Led is on 1\n576 Led is off 0\n579 Led is on 1\n581 Led is off 0\n584 Led is on 1\n586 Led is off 0\n589 Led is on 1\n591 Led is off 0\n594 Led is on 1\n596 Led is off 0\n599 Led is on 1\n",
					"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino/servuino/serv.cust",
					"file_size": 3956,
					"file_write_time": 131029805460000000,
					"settings":
					{
						"buffer_size": 3956,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "# Servuino Time Delay (microseconds) Version: 0.1.2\n+ 5 1000000\n+ 7 1000000\n+ 10 1000000\n+ 12 1000000\n+ 15 1000000\n+ 17 1000000\n+ 20 1000000\n+ 22 1000000\n+ 25 1000000\n+ 27 1000000\n+ 30 1000000\n+ 32 1000000\n+ 35 1000000\n+ 37 1000000\n+ 40 1000000\n+ 42 1000000\n+ 45 1000000\n+ 47 1000000\n+ 50 1000000\n+ 52 1000000\n+ 55 1000000\n+ 57 1000000\n+ 60 1000000\n+ 62 1000000\n+ 65 1000000\n+ 67 1000000\n+ 70 1000000\n+ 72 1000000\n+ 75 1000000\n+ 77 1000000\n+ 80 1000000\n+ 82 1000000\n+ 85 1000000\n+ 87 1000000\n+ 90 1000000\n+ 92 1000000\n+ 95 1000000\n+ 97 1000000\n+ 100 1000000\n+ 102 1000000\n+ 105 1000000\n+ 107 1000000\n+ 110 1000000\n+ 112 1000000\n+ 115 1000000\n+ 117 1000000\n+ 120 1000000\n+ 122 1000000\n+ 125 1000000\n+ 127 1000000\n+ 130 1000000\n+ 132 1000000\n+ 135 1000000\n+ 137 1000000\n+ 140 1000000\n+ 142 1000000\n+ 145 1000000\n+ 147 1000000\n+ 150 1000000\n+ 152 1000000\n+ 155 1000000\n+ 157 1000000\n+ 160 1000000\n+ 162 1000000\n+ 165 1000000\n+ 167 1000000\n+ 170 1000000\n+ 172 1000000\n+ 175 1000000\n+ 177 1000000\n+ 180 1000000\n+ 182 1000000\n+ 185 1000000\n+ 187 1000000\n+ 190 1000000\n+ 192 1000000\n+ 195 1000000\n+ 197 1000000\n+ 200 1000000\n+ 202 1000000\n+ 205 1000000\n+ 207 1000000\n+ 210 1000000\n+ 212 1000000\n+ 215 1000000\n+ 217 1000000\n+ 220 1000000\n+ 222 1000000\n+ 225 1000000\n+ 227 1000000\n+ 230 1000000\n+ 232 1000000\n+ 235 1000000\n+ 237 1000000\n+ 240 1000000\n+ 242 1000000\n+ 245 1000000\n+ 247 1000000\n+ 250 1000000\n+ 252 1000000\n+ 255 1000000\n+ 257 1000000\n+ 260 1000000\n+ 262 1000000\n+ 265 1000000\n+ 267 1000000\n+ 270 1000000\n+ 272 1000000\n+ 275 1000000\n+ 277 1000000\n+ 280 1000000\n+ 282 1000000\n+ 285 1000000\n+ 287 1000000\n+ 290 1000000\n+ 292 1000000\n+ 295 1000000\n+ 297 1000000\n+ 300 1000000\n+ 302 1000000\n+ 305 1000000\n+ 307 1000000\n+ 310 1000000\n+ 312 1000000\n+ 315 1000000\n+ 317 1000000\n+ 320 1000000\n+ 322 1000000\n+ 325 1000000\n+ 327 1000000\n+ 330 1000000\n+ 332 1000000\n+ 335 1000000\n+ 337 1000000\n+ 340 1000000\n+ 342 1000000\n+ 345 1000000\n+ 347 1000000\n+ 350 1000000\n+ 352 1000000\n+ 355 1000000\n+ 357 1000000\n+ 360 1000000\n+ 362 1000000\n+ 365 1000000\n+ 367 1000000\n+ 370 1000000\n+ 372 1000000\n+ 375 1000000\n+ 377 1000000\n+ 380 1000000\n+ 382 1000000\n+ 385 1000000\n+ 387 1000000\n+ 390 1000000\n+ 392 1000000\n+ 395 1000000\n+ 397 1000000\n+ 400 1000000\n+ 402 1000000\n+ 405 1000000\n+ 407 1000000\n+ 410 1000000\n+ 412 1000000\n+ 415 1000000\n+ 417 1000000\n+ 420 1000000\n+ 422 1000000\n+ 425 1000000\n+ 427 1000000\n+ 430 1000000\n+ 432 1000000\n+ 435 1000000\n+ 437 1000000\n+ 440 1000000\n+ 442 1000000\n+ 445 1000000\n+ 447 1000000\n+ 450 1000000\n+ 452 1000000\n+ 455 1000000\n+ 457 1000000\n+ 460 1000000\n+ 462 1000000\n+ 465 1000000\n+ 467 1000000\n+ 470 1000000\n+ 472 1000000\n+ 475 1000000\n+ 477 1000000\n+ 480 1000000\n+ 482 1000000\n+ 485 1000000\n+ 487 1000000\n+ 490 1000000\n+ 492 1000000\n+ 495 1000000\n+ 497 1000000\n+ 500 1000000\n+ 502 1000000\n+ 505 1000000\n+ 507 1000000\n+ 510 1000000\n+ 512 1000000\n+ 515 1000000\n+ 517 1000000\n+ 520 1000000\n+ 522 1000000\n+ 525 1000000\n+ 527 1000000\n+ 530 1000000\n+ 532 1000000\n+ 535 1000000\n+ 537 1000000\n+ 540 1000000\n+ 542 1000000\n+ 545 1000000\n+ 547 1000000\n+ 550 1000000\n+ 552 1000000\n+ 555 1000000\n+ 557 1000000\n+ 560 1000000\n+ 562 1000000\n+ 565 1000000\n+ 567 1000000\n+ 570 1000000\n+ 572 1000000\n+ 575 1000000\n+ 577 1000000\n+ 580 1000000\n+ 582 1000000\n+ 585 1000000\n+ 587 1000000\n+ 590 1000000\n+ 592 1000000\n+ 595 1000000\n+ 597 1000000\n+ 600 1000000\n",
					"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino/servuino/serv.time",
					"file_size": 3358,
					"file_write_time": 131029805460000000,
					"settings":
					{
						"buffer_size": 3358,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino/servuino/servuino.c",
					"settings":
					{
						"buffer_size": 5711,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 329.0,
				"last_filter": "plist",
				"selected_items":
				[
					[
						"plist",
						"Plist Binary: Toggle XML & Binary"
					],
					[
						"bina",
						"Plist Binary: Toggle XML & Binary"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"pat",
						"File: Copy Path"
					],
					[
						"path",
						"File: Copy Path"
					],
					[
						"name",
						"File: Copy Name"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"coff",
						"Set Syntax: CoffeeScript"
					],
					[
						"gith",
						"GitHub Flavored Markdown: Preview"
					],
					[
						"conf",
						"Set Syntax: Generic Config"
					],
					[
						"focu",
						"Focus File on Sidebar"
					],
					[
						"sshc",
						"Set Syntax: SSH Config"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"c++",
						"Set Syntax: C++"
					],
					[
						"move",
						"File: Move"
					],
					[
						"copy",
						"File: Copy Path"
					],
					[
						"focus",
						"Focus File on Sidebar"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"psth",
						"Permute Lines: Shuffle"
					],
					[
						"make",
						"Set Syntax: Makefile"
					],
					[
						"makef",
						"Set Syntax: Makefile"
					],
					[
						"refre",
						"Side Bar: Refresh"
					],
					[
						"refr",
						"Side Bar: Refresh"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"syc+",
						"Set Syntax: C++"
					],
					[
						"",
						"Copy File Path"
					],
					[
						"focud",
						"Focus File on Sidebar"
					],
					[
						"syn",
						"Set Syntax: C++"
					],
					[
						"sublime",
						"Colorsublime: Install Theme"
					],
					[
						"foc",
						"Focus File on Sidebar"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"cop",
						"Copy File Path"
					],
					[
						"ref",
						"Side Bar: Refresh"
					],
					[
						"color",
						"Colorsublime: Install Theme"
					],
					[
						"read",
						"ReadmePlease"
					],
					[
						"package",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"instl",
						"Package Control: Install Package"
					]
				],
				"width": 449.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino/servuino"
			],
			"file_history":
			[
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino/.git/MERGE_MSG",
				"/Library/Preferences/com.apple.windowserver.plist",
				"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/IOKit/usb/IOUSBHostDevice.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/rsub/rsub.sublime-settings",
				"/sketch/libraries/ADC/doxygen/html/search/typedefs_73.html",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/sketch/libraries/Alexduino/src/Alexduino.cpp",
				"/sketch/libraries.off/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/Pin.h",
				"/sketch/libraries/Pin/src/Pin.cpp",
				"/sketch/libraries/OneButton/OneButton.cpp",
				"/sketch/libraries/OneButton/OneButton.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
				"/Volumes/5T/_dl/ShiftRegister.h",
				"/sketch/libraries/Talkie/talkie.cpp",
				"/sketch/libraries/Talkie/README.md",
				"/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/Arduino.h",
				"/sketch/libraries/Alexduino/src/Alexduino.h",
				"/sketch/My7Seg/My7Seg.ino",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.h",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.cpp",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
				"/sketch/libraries/SevenSegment/SevenSegment.h",
				"/sketch/libraries/SevenSegment/SevenSegment.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/My7Seg/My7Seg.ino",
				"/sketch/libraries/ICs/4511.h",
				"/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
				"/sketch/libraries/ICs/4511.cpp",
				"/sketch/libraries.off/BCDTo7Seg/examples/b4511_counter/b4511_counter.ino",
				"/sketch/libraries/BCDTo7Seg.virgin/BCDTo7Seg.h",
				"/sketch/libraries/Talkie/examples/_2_Voltmeter/_2_Voltmeter.ino",
				"/sketch/libraries/Talkie/talkie.h",
				"/sketch/libraries/Potentiometer/Potentiometer.h",
				"/sketch/libraries/Potentiometer/Potentiometer.cpp",
				"/sketch/libraries/ansiterm/readme.md",
				"/sketch/libraries/AsyncDelay/src/AsyncDelay.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/WString.h",
				"/sketch/libraries.off/ArduinoJson/third-party/gtest-1.7.0/xcode/Config/FrameworkTarget.xcconfig",
				"/sketch/hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBoldOblique12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBold12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp",
				"/sketch/libraries/LED/LED.cpp",
				"/sketch/libraries/Color/Color.h",
				"/sketch/libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h",
				"/sketch/libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/LUFA/Drivers/Board/Board.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII/makefile",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/AlexAVR/avr/programmers.txt",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.no.h",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.h",
				"/sketch/hardware/AlexAVR/avr/platform.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/SimpleThrottle/SimpleThrottle.ino",
				"/sketch/libraries/Handler/Handler.cpp",
				"/sketch/libraries/Handler/examples/CanYouHandleIt/CanYouHandleIt.ino",
				"/sketch/libraries/Handler/Handler.h",
				"/sketch/libraries/LED/LED.h",
				"/sketch/libraries/Throttle/examples/GoGoGoTiny/GoGoGoTiny.ino",
				"/sketch/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/libraries/Throttle/Throttle.cpp",
				"/sketch/libraries/GPIO/src/PinGroup.h",
				"/sketch/libraries/TimerLib/PinEffector.h",
				"/sketch/libraries/TimerLib/utility/FastDelegate.h",
				"/sketch/LEDme/LED.h",
				"/sketch/libraries/Segment7/Segment7.pdf",
				"/sketch/libraries/StackArray/StackArray.h",
				"/sketch/hardware/AlexAVR/avr/boards.txt",
				"/sketch/libraries/TimerLib/SimpleTimer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/LED/library.properties",
				"/sketch/pinguino.bootloader.c",
				"/sketch/hardware/avr-openhardware/avr/avrdude.conf",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.cpp",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.h",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.cpp",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.h",
				"/sketch/hardware/Cosa/avr/platform.txt",
				"/sketch/hardware/Cosa/avr/sub-modules",
				"/sketch/libraries/Adafruit_GFX_Library/gfxfont.h",
				"/sketch/libraries/Pin/src/boards/attinyX5.h",
				"/sketch/ACS712/xACS712/xACS712/Configurations/Adafruit Trinket 5V-16MHz.xcconfig",
				"/sketch/hardware/AlexAVR/avr/programmers.txt",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/sketch/libraries/GPIO/src/GPIO.h",
				"/sketch/libraries/Pin/library.properties",
				"/sketch/libraries/Pin/src/boards/others.h",
				"/sketch/libraries/GPIO/library.properties",
				"/sketch/libraries/GPIO/src/GPIO.cpp",
				"/sketch/hardware/google-tiny/avr/cores/tiny/WProgram.h",
				"/sketch/Classy/.pioenvs/nodemcu/FrameworkArduino/Arduino.h",
				"/sketch/hardware/google-tiny/avr/cores/tiny/Arduino.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/neomatrix-serial-input/neomatrixserial/neomatrixserial.ino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/breadboard/avr/boards.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/FastLED/FastLED.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Chrono/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Delegate.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/WiringFrameworkDependencies.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Interrupts.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Timer.h",
				"/opt/smi8ng",
				"/opt/sping",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/examples/GoGoGo/GoGoGo.ino",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.cpp",
				"/Users/localadmin/.macosz/modules/alex/functions/gzipit",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Periodic/Periodic.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/UdpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/TcpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/DriverPWM.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/LICENSE",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Makefile-rboot.mk",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/.travis.yml",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/samples/Basic_Runloop/app/application.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/SmingCore.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Switch File Deluxe/README.md"
			],
			"find":
			{
				"height": 35.0
			},
			"find_in_files":
			{
				"height": 96.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"if\\((p=.*\\))\\)",
					"while\\((p=.*\\))\\)",
					",-1",
					",-01",
					"while\\((p=.*\\))\\)",
					"if\\((p=.*\\))\\)",
					"\\(p=",
					"\\wp=",
					"\\bp=",
					"p=",
					"editor",
					"Quartz2DExtremeEnabled",
					"com.apple.windowserver.plist",
					"(",
					");",
					"inde",
					"DeviceRequest",
					"tty",
					"runtime",
					"runtim",
					"byte",
					"open",
					"UInt",
					"UInt ",
					"UInt",
					"inha",
					"unsigned int8_t",
					"UInt",
					"smile_bmp",
					"UInt",
					"my_4511",
					"on",
					",",
					"my_4511",
					"IC_4511",
					"&sp",
					"const uint8_t \\*(.*)\\s*PROGMEM",
					"const uint8_t (.*)\\[\\]",
					"(sp",
					"uint8_t s",
					";\nuint8_t ",
					"7129",
					"Button 2",
					"analog",
					"ANALOg_MAX",
					"PWM",
					"speed",
					"button2",
					"button",
					"button2",
					"button1",
					"0x.., \\/\\* (.).*",
					"0x5B, /* 2 */",
					"*/\n",
					"0x.., \\/\\* (.).*",
					"0x7C, /* b */",
					"cursor",
					"setTextColor",
					"expi",
					"handl",
					"test",
					"begin",
					"matrix.",
					"matr",
					"());",
					"fillScreen",
					"Adafruit_NeoMatrix",
					"avrdude",
					"USBKEY",
					"BOARD",
					"digital_pin_to_bit_mask_PGM",
					"m1284p",
					"uni",
					"m1284p",
					"ing",
					"PULSE",
					"LEDClass",
					"enum",
					"#",
					"0x05",
					"0x054",
					"0x06",
					"1284",
					"05",
					"sig",
					"__cxa_pure_virtual",
					"__AVR_ATTiny",
					"__AVR_ATmega32U4__",
					"recipe.preproc.macros",
					"__cxa_pure_virtual",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"pioenvs/",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"GFX",
					"pure",
					"effe",
					"toggle\\(",
					"on\\(\\)",
					"on()",
					"on",
					"off",
					"#define.*PWM.*\\w[0-9]*",
					"#define.*ANALOG.*\\w[0-9]*",
					"#define.*255",
					"#define.*ANALOG.*255",
					"#define.*PWM.*255",
					"#define.*PWM.*",
					"PWM_RANGE",
					"PWM",
					"REGD",
					"DEF_",
					"DEF_THR",
					"FAST",
					"                           ",
					"FAST",
					"PWM",
					"sap",
					"line",
					"move",
					"up\"",
					"time",
					"className",
					"rightn",
					"Print",
					"print",
					"DEB"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
					"if(($1))",
					"while(($1))",
					"if(($1))",
					"if(($1)))",
					"",
					"uint8_t",
					"unsigned int",
					"int8_t",
					"unsigned int",
					"sp",
					"const PROGMEM uint8_t $1[]",
					"const uint8_t * $1",
					"(&sp",
					"const uint8_t s",
					",\n              ",
					"Button 2 (gas)",
					"brake",
					"gas",
					"\"$1\",",
					"",
					"LED"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino"
				}
			],
			"groups":
			[
				{
					"selected": 2,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino/simuino_lib.c",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 36792,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458508420.47,
									"syntax": "Packages/C++/C.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino/servuino/arduino.h",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 16119,
								"regions":
								{
								},
								"selection":
								[
									[
										860,
										860
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458508472.25,
									"syntax": "Packages/C++/C++.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 562.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino/Makefile",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 124,
								"regions":
								{
								},
								"selection":
								[
									[
										56,
										56
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458512006.97,
									"syntax": "Packages/Makefile/Makefile.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino/.gitignore",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 232,
								"regions":
								{
								},
								"selection":
								[
									[
										232,
										232
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458508140.7,
									"syntax": "Packages/ShellScript/Shell-Unix-Generic.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 6,
							"type": "text"
						},
						{
							"buffer": 4,
							"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino/servuino/serv.cust",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 3956,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458508154.53,
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 5,
							"type": "text"
						},
						{
							"buffer": 5,
							"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino/servuino/serv.time",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 3358,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458508158.7,
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 4,
							"type": "text"
						},
						{
							"buffer": 6,
							"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino/servuino/servuino.c",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 5711,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458508162.2,
									"syntax": "Packages/C++/C.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": -0.0,
								"translation.y": 634.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 25.0
			},
			"input":
			{
				"height": 36.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1360 741 0 0 1360 745 ",
			"project": "",
			"replace":
			{
				"height": 64.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"my",
						"My7Seg/My7Seg.ino"
					],
					[
						"my7",
						"libraries/ADC/doxygen/html/search/typedefs_73.html"
					],
					[
						"orig",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"4511",
						"libraries/ICs/4511.h"
					],
					[
						"my7se",
						"My7Seg/My7Seg.ino"
					],
					[
						"matrixt",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"cancom",
						"libraries/Alexduino/examples/CanCompile/CanCompile.ino"
					],
					[
						"led",
						"libraries/LED/LED.h"
					],
					[
						"sim",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"simpl",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"mys",
						"My7Seg/My7Seg.ino"
					],
					[
						"aledxdu",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"async",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"matrixtest",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde"
					],
					[
						"alexdui",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"wstrin",
						"hardware/AlexAVR/avr/cores/arduino/WString.h"
					],
					[
						"gfx",
						"libraries/Adafruit_GFX_Library/Adafruit_GFX.h"
					],
					[
						"gfxc",
						"hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h"
					],
					[
						"color",
						"libraries/Color/Color.h"
					],
					[
						"matri",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"pixel",
						"libraries/NeoPixelBus_by_Makuna/src/NeoPixelAnimator.h"
					],
					[
						"adaf",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"asyn",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"neopix",
						"libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h"
					],
					[
						"matrix",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"alexd",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"pingro",
						"libraries/GPIO/src/PinGroup.h"
					],
					[
						"pin",
						"libraries/Pin/src/Pin.h"
					],
					[
						"",
						"libraries/LED/LED.h"
					],
					[
						"stack",
						"libraries/StackArray/StackArray.h"
					],
					[
						"stackarray",
						"libraries/StackArray/StackArray.h"
					],
					[
						"pin.h",
						"libraries/Pin/src/Pin.h"
					],
					[
						"asyncd",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"led.",
						"LEDme/LED.h"
					],
					[
						"wpro",
						"hardware/google-tiny/avr/cores/tiny/WProgram.h"
					],
					[
						"arduino.h",
						"hardware/google-tiny/avr/cores/tiny/Arduino.h"
					],
					[
						"gogo",
						"Throttle/examples/GoGoGo/GoGoGo.ino"
					],
					[
						"throttl",
						"Throttle/Throttle.cpp"
					],
					[
						"throttle2016",
						"Throttle2016.h"
					],
					[
						"throttle",
						"Throttle2016.h"
					],
					[
						"dele",
						"Sming/SmingCore/Delegate.h"
					],
					[
						"timer",
						"Sming/SmingCore/Timer.h"
					],
					[
						"smingco",
						"Sming/SmingCore/SmingCore.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": true,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 319.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 106,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ui",
						"uint16_t"
					],
					[
						"setOutput",
						"setOutputLow"
					],
					[
						"rand",
						"randVal"
					],
					[
						"PWM",
						"PWMRANGE"
					],
					[
						"_C",
						"_CLEAR_Pin"
					],
					[
						"_l",
						"_level"
					],
					[
						"ga",
						"gasLight"
					],
					[
						"off",
						"offset"
					],
					[
						"Color",
						"colorCycle"
					],
					[
						"uint",
						"uint16_t"
					],
					[
						"NMe",
						"Adafruit_NeoMatrix"
					],
					[
						"S",
						"StackArray"
					],
					[
						"POR",
						"PORT_HIGH"
					],
					[
						"set",
						"setHigh"
					],
					[
						"board",
						"boards"
					],
					[
						"e",
						"endif"
					],
					[
						"DEF",
						"DEF_PWM"
					],
					[
						"be",
						"begin"
					],
					[
						"pri",
						"private"
					],
					[
						"chara",
						"character"
					],
					[
						"DE",
						"DEF_MAX_OUT"
					],
					[
						"THROTTLE_V_M",
						"THROTTLE_V_MAX"
					],
					[
						"OTA",
						"OTA_IP"
					],
					[
						"Up",
						"UPDATE_PIN"
					],
					[
						"ini",
						"initializeUs"
					],
					[
						"uin",
						"uint8_t"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/node/hellohttpworld",
					"settings":
					{
						"buffer_size": 677,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/node/select-shell/src/encode.litcoffee",
					"settings":
					{
						"buffer_size": 316,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/node/select-shell/src/index.litcoffee",
					"settings":
					{
						"buffer_size": 4872,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/node/drywall/README.md",
					"settings":
					{
						"buffer_size": 5027,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/node/drywall/routes.js",
					"settings":
					{
						"buffer_size": 10932,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n	<key>EnvironmentVariables</key>\n	<dict>\n		<key>NODE_PATH</key>\n		<string>/usr/local/lib/node_modules</string>\n	</dict>\n	<key>Label</key>\n	<string>com.mrgray.hellohttpworld</string>\n	<key>Program</key>\n	<string>/node/hellohttpworld</string>\n	<key>Sockets</key>\n	<dict>\n		<key>HTTPSocket</key>\n		<dict>\n			<key>SockFamily</key>\n			<string>IPv4</string>\n			<key>SockPassive</key>\n			<false/>\n			<key>SockServiceName</key>\n			<string>8888</string>\n			<key>SockType</key>\n			<string>stream</string>\n		</dict>\n	</dict>\n</dict>\n</plist>\n",
					"file": "/Volumes/5T/ServiceData/node/hellohttpworld.plist",
					"file_size": 702,
					"file_write_time": 131028061290000000,
					"settings":
					{
						"buffer_size": 702,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 249.0,
				"last_filter": "path",
				"selected_items":
				[
					[
						"path",
						"File: Copy Path"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"packaged",
						"Package Control: Discover Packages"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"disa",
						"Package Control: Disable Package"
					],
					[
						"enable",
						"Package Control: Enable Package"
					],
					[
						"pat",
						"File: Copy Path"
					],
					[
						"name",
						"File: Copy Name"
					],
					[
						"coff",
						"Set Syntax: CoffeeScript"
					],
					[
						"gith",
						"GitHub Flavored Markdown: Preview"
					],
					[
						"conf",
						"Set Syntax: Generic Config"
					],
					[
						"focu",
						"Focus File on Sidebar"
					],
					[
						"sshc",
						"Set Syntax: SSH Config"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"c++",
						"Set Syntax: C++"
					],
					[
						"move",
						"File: Move"
					],
					[
						"copy",
						"File: Copy Path"
					],
					[
						"focus",
						"Focus File on Sidebar"
					],
					[
						"psth",
						"Permute Lines: Shuffle"
					],
					[
						"make",
						"Set Syntax: Makefile"
					],
					[
						"makef",
						"Set Syntax: Makefile"
					],
					[
						"refre",
						"Side Bar: Refresh"
					],
					[
						"refr",
						"Side Bar: Refresh"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"syc+",
						"Set Syntax: C++"
					],
					[
						"",
						"Copy File Path"
					],
					[
						"focud",
						"Focus File on Sidebar"
					],
					[
						"syn",
						"Set Syntax: C++"
					],
					[
						"sublime",
						"Colorsublime: Install Theme"
					],
					[
						"foc",
						"Focus File on Sidebar"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"cop",
						"Copy File Path"
					],
					[
						"ref",
						"Side Bar: Refresh"
					],
					[
						"color",
						"Colorsublime: Install Theme"
					],
					[
						"read",
						"ReadmePlease"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"package",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"instl",
						"Package Control: Install Package"
					]
				],
				"width": 539.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/node",
				"/node/dispatch-proxy",
				"/node/dispatch-proxy/src",
				"/node/drywall",
				"/node/node-launchd",
				"/node/select-shell",
				"/node/select-shell/src"
			],
			"file_history":
			[
				"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/IOKit/usb/IOUSBHostDevice.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/rsub/rsub.sublime-settings",
				"/sketch/libraries/ADC/doxygen/html/search/typedefs_73.html",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/sketch/libraries/Alexduino/src/Alexduino.cpp",
				"/sketch/libraries.off/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/Pin.h",
				"/sketch/libraries/Pin/src/Pin.cpp",
				"/sketch/libraries/OneButton/OneButton.cpp",
				"/sketch/libraries/OneButton/OneButton.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
				"/Volumes/5T/_dl/ShiftRegister.h",
				"/sketch/libraries/Talkie/talkie.cpp",
				"/sketch/libraries/Talkie/README.md",
				"/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/Arduino.h",
				"/sketch/libraries/Alexduino/src/Alexduino.h",
				"/sketch/My7Seg/My7Seg.ino",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.h",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.cpp",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
				"/sketch/libraries/SevenSegment/SevenSegment.h",
				"/sketch/libraries/SevenSegment/SevenSegment.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/My7Seg/My7Seg.ino",
				"/sketch/libraries/ICs/4511.h",
				"/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
				"/sketch/libraries/ICs/4511.cpp",
				"/sketch/libraries.off/BCDTo7Seg/examples/b4511_counter/b4511_counter.ino",
				"/sketch/libraries/BCDTo7Seg.virgin/BCDTo7Seg.h",
				"/sketch/libraries/Talkie/examples/_2_Voltmeter/_2_Voltmeter.ino",
				"/sketch/libraries/Talkie/talkie.h",
				"/sketch/libraries/Potentiometer/Potentiometer.h",
				"/sketch/libraries/Potentiometer/Potentiometer.cpp",
				"/sketch/libraries/ansiterm/readme.md",
				"/sketch/libraries/AsyncDelay/src/AsyncDelay.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/WString.h",
				"/sketch/libraries.off/ArduinoJson/third-party/gtest-1.7.0/xcode/Config/FrameworkTarget.xcconfig",
				"/sketch/hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBoldOblique12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBold12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp",
				"/sketch/libraries/LED/LED.cpp",
				"/sketch/libraries/Color/Color.h",
				"/sketch/libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h",
				"/sketch/libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/LUFA/Drivers/Board/Board.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII/makefile",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/AlexAVR/avr/programmers.txt",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.no.h",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.h",
				"/sketch/hardware/AlexAVR/avr/platform.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/SimpleThrottle/SimpleThrottle.ino",
				"/sketch/libraries/Handler/Handler.cpp",
				"/sketch/libraries/Handler/examples/CanYouHandleIt/CanYouHandleIt.ino",
				"/sketch/libraries/Handler/Handler.h",
				"/sketch/libraries/LED/LED.h",
				"/sketch/libraries/Throttle/examples/GoGoGoTiny/GoGoGoTiny.ino",
				"/sketch/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/libraries/Throttle/Throttle.cpp",
				"/sketch/libraries/GPIO/src/PinGroup.h",
				"/sketch/libraries/TimerLib/PinEffector.h",
				"/sketch/libraries/TimerLib/utility/FastDelegate.h",
				"/sketch/LEDme/LED.h",
				"/sketch/libraries/Segment7/Segment7.pdf",
				"/sketch/libraries/StackArray/StackArray.h",
				"/sketch/hardware/AlexAVR/avr/boards.txt",
				"/sketch/libraries/TimerLib/SimpleTimer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/LED/library.properties",
				"/sketch/pinguino.bootloader.c",
				"/sketch/hardware/avr-openhardware/avr/avrdude.conf",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.cpp",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.h",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.cpp",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.h",
				"/sketch/hardware/Cosa/avr/platform.txt",
				"/sketch/hardware/Cosa/avr/sub-modules",
				"/sketch/libraries/Adafruit_GFX_Library/gfxfont.h",
				"/sketch/libraries/Pin/src/boards/attinyX5.h",
				"/sketch/ACS712/xACS712/xACS712/Configurations/Adafruit Trinket 5V-16MHz.xcconfig",
				"/sketch/hardware/AlexAVR/avr/programmers.txt",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/sketch/libraries/GPIO/src/GPIO.h",
				"/sketch/libraries/Pin/library.properties",
				"/sketch/libraries/Pin/src/boards/others.h",
				"/sketch/libraries/GPIO/library.properties",
				"/sketch/libraries/GPIO/src/GPIO.cpp",
				"/sketch/hardware/google-tiny/avr/cores/tiny/WProgram.h",
				"/sketch/Classy/.pioenvs/nodemcu/FrameworkArduino/Arduino.h",
				"/sketch/hardware/google-tiny/avr/cores/tiny/Arduino.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/neomatrix-serial-input/neomatrixserial/neomatrixserial.ino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/breadboard/avr/boards.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/FastLED/FastLED.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Chrono/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Delegate.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/WiringFrameworkDependencies.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Interrupts.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Timer.h",
				"/opt/smi8ng",
				"/opt/sping",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/examples/GoGoGo/GoGoGo.ino",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.cpp",
				"/Users/localadmin/.macosz/modules/alex/functions/gzipit",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Periodic/Periodic.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/UdpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/TcpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/DriverPWM.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/LICENSE",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Makefile-rboot.mk",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/.travis.yml",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/samples/Basic_Runloop/app/application.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/SmingCore.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Switch File Deluxe/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Timer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Delegate.h"
			],
			"find":
			{
				"height": 35.0
			},
			"find_in_files":
			{
				"height": 96.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"realpath",
					"(",
					");",
					"inde",
					"DeviceRequest",
					"tty",
					"runtime",
					"runtim",
					"byte",
					"open",
					"UInt",
					"UInt ",
					"UInt",
					"inha",
					"unsigned int8_t",
					"UInt",
					"smile_bmp",
					"UInt",
					"my_4511",
					"on",
					",",
					"my_4511",
					"IC_4511",
					"&sp",
					"const uint8_t \\*(.*)\\s*PROGMEM",
					"const uint8_t (.*)\\[\\]",
					"(sp",
					"uint8_t s",
					";\nuint8_t ",
					"7129",
					"Button 2",
					"analog",
					"ANALOg_MAX",
					"PWM",
					"speed",
					"button2",
					"button",
					"button2",
					"button1",
					"0x.., \\/\\* (.).*",
					"0x5B, /* 2 */",
					"*/\n",
					"0x.., \\/\\* (.).*",
					"0x7C, /* b */",
					"cursor",
					"setTextColor",
					"expi",
					"handl",
					"test",
					"begin",
					"matrix.",
					"matr",
					"());",
					"fillScreen",
					"Adafruit_NeoMatrix",
					"avrdude",
					"USBKEY",
					"BOARD",
					"digital_pin_to_bit_mask_PGM",
					"m1284p",
					"uni",
					"m1284p",
					"ing",
					"PULSE",
					"LEDClass",
					"enum",
					"#",
					"0x05",
					"0x054",
					"0x06",
					"1284",
					"05",
					"sig",
					"__cxa_pure_virtual",
					"__AVR_ATTiny",
					"__AVR_ATmega32U4__",
					"recipe.preproc.macros",
					"__cxa_pure_virtual",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"pioenvs/",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"GFX",
					"pure",
					"effe",
					"toggle\\(",
					"on\\(\\)",
					"on()",
					"on",
					"off",
					"#define.*PWM.*\\w[0-9]*",
					"#define.*ANALOG.*\\w[0-9]*",
					"#define.*255",
					"#define.*ANALOG.*255",
					"#define.*PWM.*255",
					"#define.*PWM.*",
					"PWM_RANGE",
					"PWM",
					"REGD",
					"DEF_",
					"DEF_THR",
					"FAST",
					"                           ",
					"FAST",
					"PWM",
					"sap",
					"line",
					"move",
					"up\"",
					"time",
					"className",
					"rightn",
					"Print",
					"print",
					"DEB",
					"\nDEBO",
					"DEBO",
					"\nDEBO",
					"DEBO",
					"rest",
					"define.*\\sON\\s",
					"rest",
					"digitalWrite",
					"define.*\\sON\\s",
					"define.*\\sON",
					"define.*ON",
					"\\bD5\\b"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"",
					"uint8_t",
					"unsigned int",
					"int8_t",
					"unsigned int",
					"sp",
					"const PROGMEM uint8_t $1[]",
					"const uint8_t * $1",
					"(&sp",
					"const uint8_t s",
					",\n              ",
					"Button 2 (gas)",
					"brake",
					"gas",
					"\"$1\",",
					"",
					"LED"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/node"
				}
			],
			"groups":
			[
				{
					"selected": 3,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/node/hellohttpworld",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 677,
								"regions":
								{
								},
								"selection":
								[
									[
										496,
										499
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458513595.76,
									"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
									"tab_size": 2,
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/node/select-shell/src/encode.litcoffee",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 316,
								"regions":
								{
								},
								"selection":
								[
									[
										9,
										9
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458513578.62,
									"syntax": "Packages/Better CoffeeScript/CoffeeScript_Literate.tmLanguage",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 4,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/node/select-shell/src/index.litcoffee",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 4872,
								"regions":
								{
								},
								"selection":
								[
									[
										328,
										328
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458608991.54,
									"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 4301.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "/node/drywall/README.md",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 5027,
								"regions":
								{
								},
								"selection":
								[
									[
										1,
										1
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458609132.41,
									"syntax": "Packages/Markdown/Markdown.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						},
						{
							"buffer": 4,
							"file": "/node/drywall/routes.js",
							"semi_transient": true,
							"settings":
							{
								"buffer_size": 10932,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458609050.37,
									"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 5,
							"file": "/Volumes/5T/ServiceData/node/hellohttpworld.plist",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 702,
								"regions":
								{
								},
								"selection":
								[
									[
										182,
										182
									]
								],
								"settings":
								{
									"syntax": "Packages/plist/plist.tmLanguage",
									"tab_size": 4,
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 5,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 25.0
			},
			"input":
			{
				"height": 36.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1360 741 0 0 1360 745 ",
			"project": "",
			"replace":
			{
				"height": 64.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"my",
						"My7Seg/My7Seg.ino"
					],
					[
						"my7",
						"libraries/ADC/doxygen/html/search/typedefs_73.html"
					],
					[
						"orig",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"4511",
						"libraries/ICs/4511.h"
					],
					[
						"my7se",
						"My7Seg/My7Seg.ino"
					],
					[
						"matrixt",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"cancom",
						"libraries/Alexduino/examples/CanCompile/CanCompile.ino"
					],
					[
						"led",
						"libraries/LED/LED.h"
					],
					[
						"sim",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"simpl",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"mys",
						"My7Seg/My7Seg.ino"
					],
					[
						"aledxdu",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"async",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"matrixtest",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde"
					],
					[
						"alexdui",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"wstrin",
						"hardware/AlexAVR/avr/cores/arduino/WString.h"
					],
					[
						"gfx",
						"libraries/Adafruit_GFX_Library/Adafruit_GFX.h"
					],
					[
						"gfxc",
						"hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h"
					],
					[
						"color",
						"libraries/Color/Color.h"
					],
					[
						"matri",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"pixel",
						"libraries/NeoPixelBus_by_Makuna/src/NeoPixelAnimator.h"
					],
					[
						"adaf",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"asyn",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"neopix",
						"libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h"
					],
					[
						"matrix",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"alexd",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"pingro",
						"libraries/GPIO/src/PinGroup.h"
					],
					[
						"pin",
						"libraries/Pin/src/Pin.h"
					],
					[
						"",
						"libraries/LED/LED.h"
					],
					[
						"stack",
						"libraries/StackArray/StackArray.h"
					],
					[
						"stackarray",
						"libraries/StackArray/StackArray.h"
					],
					[
						"pin.h",
						"libraries/Pin/src/Pin.h"
					],
					[
						"asyncd",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"led.",
						"LEDme/LED.h"
					],
					[
						"wpro",
						"hardware/google-tiny/avr/cores/tiny/WProgram.h"
					],
					[
						"arduino.h",
						"hardware/google-tiny/avr/cores/tiny/Arduino.h"
					],
					[
						"gogo",
						"Throttle/examples/GoGoGo/GoGoGo.ino"
					],
					[
						"throttl",
						"Throttle/Throttle.cpp"
					],
					[
						"throttle2016",
						"Throttle2016.h"
					],
					[
						"throttle",
						"Throttle2016.h"
					],
					[
						"dele",
						"Sming/SmingCore/Delegate.h"
					],
					[
						"timer",
						"Sming/SmingCore/Timer.h"
					],
					[
						"smingco",
						"Sming/SmingCore/SmingCore.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 319.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 100,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ui",
						"uint16_t"
					],
					[
						"setOutput",
						"setOutputLow"
					],
					[
						"rand",
						"randVal"
					],
					[
						"PWM",
						"PWMRANGE"
					],
					[
						"_C",
						"_CLEAR_Pin"
					],
					[
						"_l",
						"_level"
					],
					[
						"ga",
						"gasLight"
					],
					[
						"off",
						"offset"
					],
					[
						"Color",
						"colorCycle"
					],
					[
						"uint",
						"uint16_t"
					],
					[
						"NMe",
						"Adafruit_NeoMatrix"
					],
					[
						"S",
						"StackArray"
					],
					[
						"POR",
						"PORT_HIGH"
					],
					[
						"set",
						"setHigh"
					],
					[
						"board",
						"boards"
					],
					[
						"e",
						"endif"
					],
					[
						"DEF",
						"DEF_PWM"
					],
					[
						"be",
						"begin"
					],
					[
						"pri",
						"private"
					],
					[
						"chara",
						"character"
					],
					[
						"DE",
						"DEF_MAX_OUT"
					],
					[
						"THROTTLE_V_M",
						"THROTTLE_V_MAX"
					],
					[
						"OTA",
						"OTA_IP"
					],
					[
						"Up",
						"UPDATE_PIN"
					],
					[
						"ini",
						"initializeUs"
					],
					[
						"uin",
						"uint8_t"
					]
				]
			},
			"buffers":
			[
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 392.0,
				"last_filter": "inst",
				"selected_items":
				[
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"packaged",
						"Package Control: Discover Packages"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"disa",
						"Package Control: Disable Package"
					],
					[
						"enable",
						"Package Control: Enable Package"
					],
					[
						"pat",
						"File: Copy Path"
					],
					[
						"path",
						"File: Copy Path"
					],
					[
						"name",
						"File: Copy Name"
					],
					[
						"coff",
						"Set Syntax: CoffeeScript"
					],
					[
						"gith",
						"GitHub Flavored Markdown: Preview"
					],
					[
						"conf",
						"Set Syntax: Generic Config"
					],
					[
						"focu",
						"Focus File on Sidebar"
					],
					[
						"sshc",
						"Set Syntax: SSH Config"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"c++",
						"Set Syntax: C++"
					],
					[
						"move",
						"File: Move"
					],
					[
						"copy",
						"File: Copy Path"
					],
					[
						"focus",
						"Focus File on Sidebar"
					],
					[
						"psth",
						"Permute Lines: Shuffle"
					],
					[
						"make",
						"Set Syntax: Makefile"
					],
					[
						"makef",
						"Set Syntax: Makefile"
					],
					[
						"refre",
						"Side Bar: Refresh"
					],
					[
						"refr",
						"Side Bar: Refresh"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"syc+",
						"Set Syntax: C++"
					],
					[
						"",
						"Copy File Path"
					],
					[
						"focud",
						"Focus File on Sidebar"
					],
					[
						"syn",
						"Set Syntax: C++"
					],
					[
						"sublime",
						"Colorsublime: Install Theme"
					],
					[
						"foc",
						"Focus File on Sidebar"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"cop",
						"Copy File Path"
					],
					[
						"ref",
						"Side Bar: Refresh"
					],
					[
						"color",
						"Colorsublime: Install Theme"
					],
					[
						"read",
						"ReadmePlease"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"package",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"instl",
						"Package Control: Install Package"
					]
				],
				"width": 539.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/dl/BeamSyncDropperSource"
			],
			"file_history":
			[
				"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/IOKit/usb/IOUSBHostDevice.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/rsub/rsub.sublime-settings",
				"/sketch/libraries/ADC/doxygen/html/search/typedefs_73.html",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/sketch/libraries/Alexduino/src/Alexduino.cpp",
				"/sketch/libraries.off/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/Pin.h",
				"/sketch/libraries/Pin/src/Pin.cpp",
				"/sketch/libraries/OneButton/OneButton.cpp",
				"/sketch/libraries/OneButton/OneButton.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
				"/Volumes/5T/_dl/ShiftRegister.h",
				"/sketch/libraries/Talkie/talkie.cpp",
				"/sketch/libraries/Talkie/README.md",
				"/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/Arduino.h",
				"/sketch/libraries/Alexduino/src/Alexduino.h",
				"/sketch/My7Seg/My7Seg.ino",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.h",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.cpp",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
				"/sketch/libraries/SevenSegment/SevenSegment.h",
				"/sketch/libraries/SevenSegment/SevenSegment.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/My7Seg/My7Seg.ino",
				"/sketch/libraries/ICs/4511.h",
				"/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
				"/sketch/libraries/ICs/4511.cpp",
				"/sketch/libraries.off/BCDTo7Seg/examples/b4511_counter/b4511_counter.ino",
				"/sketch/libraries/BCDTo7Seg.virgin/BCDTo7Seg.h",
				"/sketch/libraries/Talkie/examples/_2_Voltmeter/_2_Voltmeter.ino",
				"/sketch/libraries/Talkie/talkie.h",
				"/sketch/libraries/Potentiometer/Potentiometer.h",
				"/sketch/libraries/Potentiometer/Potentiometer.cpp",
				"/sketch/libraries/ansiterm/readme.md",
				"/sketch/libraries/AsyncDelay/src/AsyncDelay.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/WString.h",
				"/sketch/libraries.off/ArduinoJson/third-party/gtest-1.7.0/xcode/Config/FrameworkTarget.xcconfig",
				"/sketch/hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBoldOblique12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBold12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp",
				"/sketch/libraries/LED/LED.cpp",
				"/sketch/libraries/Color/Color.h",
				"/sketch/libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h",
				"/sketch/libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/LUFA/Drivers/Board/Board.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII/makefile",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/AlexAVR/avr/programmers.txt",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.no.h",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.h",
				"/sketch/hardware/AlexAVR/avr/platform.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/SimpleThrottle/SimpleThrottle.ino",
				"/sketch/libraries/Handler/Handler.cpp",
				"/sketch/libraries/Handler/examples/CanYouHandleIt/CanYouHandleIt.ino",
				"/sketch/libraries/Handler/Handler.h",
				"/sketch/libraries/LED/LED.h",
				"/sketch/libraries/Throttle/examples/GoGoGoTiny/GoGoGoTiny.ino",
				"/sketch/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/libraries/Throttle/Throttle.cpp",
				"/sketch/libraries/GPIO/src/PinGroup.h",
				"/sketch/libraries/TimerLib/PinEffector.h",
				"/sketch/libraries/TimerLib/utility/FastDelegate.h",
				"/sketch/LEDme/LED.h",
				"/sketch/libraries/Segment7/Segment7.pdf",
				"/sketch/libraries/StackArray/StackArray.h",
				"/sketch/hardware/AlexAVR/avr/boards.txt",
				"/sketch/libraries/TimerLib/SimpleTimer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/LED/library.properties",
				"/sketch/pinguino.bootloader.c",
				"/sketch/hardware/avr-openhardware/avr/avrdude.conf",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.cpp",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.h",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.cpp",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.h",
				"/sketch/hardware/Cosa/avr/platform.txt",
				"/sketch/hardware/Cosa/avr/sub-modules",
				"/sketch/libraries/Adafruit_GFX_Library/gfxfont.h",
				"/sketch/libraries/Pin/src/boards/attinyX5.h",
				"/sketch/ACS712/xACS712/xACS712/Configurations/Adafruit Trinket 5V-16MHz.xcconfig",
				"/sketch/hardware/AlexAVR/avr/programmers.txt",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/sketch/libraries/GPIO/src/GPIO.h",
				"/sketch/libraries/Pin/library.properties",
				"/sketch/libraries/Pin/src/boards/others.h",
				"/sketch/libraries/GPIO/library.properties",
				"/sketch/libraries/GPIO/src/GPIO.cpp",
				"/sketch/hardware/google-tiny/avr/cores/tiny/WProgram.h",
				"/sketch/Classy/.pioenvs/nodemcu/FrameworkArduino/Arduino.h",
				"/sketch/hardware/google-tiny/avr/cores/tiny/Arduino.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/neomatrix-serial-input/neomatrixserial/neomatrixserial.ino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/breadboard/avr/boards.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/FastLED/FastLED.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Chrono/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Delegate.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/WiringFrameworkDependencies.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Interrupts.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Timer.h",
				"/opt/smi8ng",
				"/opt/sping",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/examples/GoGoGo/GoGoGo.ino",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.cpp",
				"/Users/localadmin/.macosz/modules/alex/functions/gzipit",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Periodic/Periodic.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/UdpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/TcpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/DriverPWM.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/LICENSE",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Makefile-rboot.mk",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/.travis.yml",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/samples/Basic_Runloop/app/application.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/SmingCore.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Switch File Deluxe/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Timer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Delegate.h"
			],
			"find":
			{
				"height": 25.0
			},
			"find_in_files":
			{
				"height": 96.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"(",
					");",
					"inde",
					"DeviceRequest",
					"tty",
					"runtime",
					"runtim",
					"byte",
					"open",
					"UInt",
					"UInt ",
					"UInt",
					"inha",
					"unsigned int8_t",
					"UInt",
					"smile_bmp",
					"UInt",
					"my_4511",
					"on",
					",",
					"my_4511",
					"IC_4511",
					"&sp",
					"const uint8_t \\*(.*)\\s*PROGMEM",
					"const uint8_t (.*)\\[\\]",
					"(sp",
					"uint8_t s",
					";\nuint8_t ",
					"7129",
					"Button 2",
					"analog",
					"ANALOg_MAX",
					"PWM",
					"speed",
					"button2",
					"button",
					"button2",
					"button1",
					"0x.., \\/\\* (.).*",
					"0x5B, /* 2 */",
					"*/\n",
					"0x.., \\/\\* (.).*",
					"0x7C, /* b */",
					"cursor",
					"setTextColor",
					"expi",
					"handl",
					"test",
					"begin",
					"matrix.",
					"matr",
					"());",
					"fillScreen",
					"Adafruit_NeoMatrix",
					"avrdude",
					"USBKEY",
					"BOARD",
					"digital_pin_to_bit_mask_PGM",
					"m1284p",
					"uni",
					"m1284p",
					"ing",
					"PULSE",
					"LEDClass",
					"enum",
					"#",
					"0x05",
					"0x054",
					"0x06",
					"1284",
					"05",
					"sig",
					"__cxa_pure_virtual",
					"__AVR_ATTiny",
					"__AVR_ATmega32U4__",
					"recipe.preproc.macros",
					"__cxa_pure_virtual",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"pioenvs/",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"GFX",
					"pure",
					"effe",
					"toggle\\(",
					"on\\(\\)",
					"on()",
					"on",
					"off",
					"#define.*PWM.*\\w[0-9]*",
					"#define.*ANALOG.*\\w[0-9]*",
					"#define.*255",
					"#define.*ANALOG.*255",
					"#define.*PWM.*255",
					"#define.*PWM.*",
					"PWM_RANGE",
					"PWM",
					"REGD",
					"DEF_",
					"DEF_THR",
					"FAST",
					"                           ",
					"FAST",
					"PWM",
					"sap",
					"line",
					"move",
					"up\"",
					"time",
					"className",
					"rightn",
					"Print",
					"print",
					"DEB",
					"\nDEBO",
					"DEBO",
					"\nDEBO",
					"DEBO",
					"rest",
					"define.*\\sON\\s",
					"rest",
					"digitalWrite",
					"define.*\\sON\\s",
					"define.*\\sON",
					"define.*ON",
					"\\bD5\\b",
					"D5"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"",
					"uint8_t",
					"unsigned int",
					"int8_t",
					"unsigned int",
					"sp",
					"const PROGMEM uint8_t $1[]",
					"const uint8_t * $1",
					"(&sp",
					"const uint8_t s",
					",\n              ",
					"Button 2 (gas)",
					"brake",
					"gas",
					"\"$1\",",
					"",
					"LED"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/dl/BeamSyncDropperSource"
				}
			],
			"groups":
			[
				{
					"sheets":
					[
					]
				}
			],
			"incremental_find":
			{
				"height": 25.0
			},
			"input":
			{
				"height": 36.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1360 741 0 0 1360 745 ",
			"project": "",
			"replace":
			{
				"height": 46.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"my",
						"My7Seg/My7Seg.ino"
					],
					[
						"my7",
						"libraries/ADC/doxygen/html/search/typedefs_73.html"
					],
					[
						"orig",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"4511",
						"libraries/ICs/4511.h"
					],
					[
						"my7se",
						"My7Seg/My7Seg.ino"
					],
					[
						"matrixt",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"cancom",
						"libraries/Alexduino/examples/CanCompile/CanCompile.ino"
					],
					[
						"led",
						"libraries/LED/LED.h"
					],
					[
						"sim",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"simpl",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"mys",
						"My7Seg/My7Seg.ino"
					],
					[
						"aledxdu",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"async",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"matrixtest",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde"
					],
					[
						"alexdui",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"wstrin",
						"hardware/AlexAVR/avr/cores/arduino/WString.h"
					],
					[
						"gfx",
						"libraries/Adafruit_GFX_Library/Adafruit_GFX.h"
					],
					[
						"gfxc",
						"hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h"
					],
					[
						"color",
						"libraries/Color/Color.h"
					],
					[
						"matri",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"pixel",
						"libraries/NeoPixelBus_by_Makuna/src/NeoPixelAnimator.h"
					],
					[
						"adaf",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"asyn",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"neopix",
						"libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h"
					],
					[
						"matrix",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"alexd",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"pingro",
						"libraries/GPIO/src/PinGroup.h"
					],
					[
						"pin",
						"libraries/Pin/src/Pin.h"
					],
					[
						"",
						"libraries/LED/LED.h"
					],
					[
						"stack",
						"libraries/StackArray/StackArray.h"
					],
					[
						"stackarray",
						"libraries/StackArray/StackArray.h"
					],
					[
						"pin.h",
						"libraries/Pin/src/Pin.h"
					],
					[
						"asyncd",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"led.",
						"LEDme/LED.h"
					],
					[
						"wpro",
						"hardware/google-tiny/avr/cores/tiny/WProgram.h"
					],
					[
						"arduino.h",
						"hardware/google-tiny/avr/cores/tiny/Arduino.h"
					],
					[
						"gogo",
						"Throttle/examples/GoGoGo/GoGoGo.ino"
					],
					[
						"throttl",
						"Throttle/Throttle.cpp"
					],
					[
						"throttle2016",
						"Throttle2016.h"
					],
					[
						"throttle",
						"Throttle2016.h"
					],
					[
						"dele",
						"Sming/SmingCore/Delegate.h"
					],
					[
						"timer",
						"Sming/SmingCore/Timer.h"
					],
					[
						"smingco",
						"Sming/SmingCore/SmingCore.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 319.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 109,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ui",
						"uint16_t"
					],
					[
						"setOutput",
						"setOutputLow"
					],
					[
						"rand",
						"randVal"
					],
					[
						"PWM",
						"PWMRANGE"
					],
					[
						"_C",
						"_CLEAR_Pin"
					],
					[
						"_l",
						"_level"
					],
					[
						"ga",
						"gasLight"
					],
					[
						"off",
						"offset"
					],
					[
						"Color",
						"colorCycle"
					],
					[
						"uint",
						"uint16_t"
					],
					[
						"NMe",
						"Adafruit_NeoMatrix"
					],
					[
						"S",
						"StackArray"
					],
					[
						"POR",
						"PORT_HIGH"
					],
					[
						"set",
						"setHigh"
					],
					[
						"board",
						"boards"
					],
					[
						"e",
						"endif"
					],
					[
						"DEF",
						"DEF_PWM"
					],
					[
						"be",
						"begin"
					],
					[
						"pri",
						"private"
					],
					[
						"chara",
						"character"
					],
					[
						"DE",
						"DEF_MAX_OUT"
					],
					[
						"THROTTLE_V_M",
						"THROTTLE_V_MAX"
					],
					[
						"OTA",
						"OTA_IP"
					],
					[
						"Up",
						"UPDATE_PIN"
					],
					[
						"ini",
						"initializeUs"
					],
					[
						"uin",
						"uint8_t"
					]
				]
			},
			"buffers":
			[
				{
					"contents": "\n",
					"settings":
					{
						"buffer_size": 1,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/dotfiles/macosz/runcoms/zshrc",
					"settings":
					{
						"buffer_size": 11064,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "Searching 4354 files for \"directory-history-search-backward\" (regex, case sensitive)\n\n/dotfiles/dotme/.tty.js/found:\n    ERROR: Unable to open file\n\n/dotfiles/dotme/.tty.js/not:\n    ERROR: Unable to open file\n\n/dotfiles/dotme/.tty.js/ttyjs:\n    ERROR: Unable to open file\n\n/dotfiles/macosz/modules/zsh-directory-history/directory-history.plugin.zsh:\n   40  }\n   41  \n   42: directory-history-search-backward() {\n   43    # Go back as long as possible; First command is at $history_dir[$MAX_INDEX_HISTORY]\n   44    if [[ $INDEX_HISTORY -ne (( $MAX_INDEX_HISTORY + 1 )) ]] && (( INDEX_HISTORY++ ))\n   ..\n   58  }\n   59  \n   60: zle -N directory-history-search-backward\n   61  zle -N directory-history-search-forward\n   62  \n\n/dotfiles/macosz/modules/zsh-directory-history/README.md:\n   33  \n   34  3. Bind keyboard shortcuts in your _.zshrc_  \n   35: `directory-history-search-forward`/`directory-history-search-backward` needs to be bind for forward/backward navigation.  \n   36  `history-substring-search-up`/`history-substring-search-down` needs to be bind for substring search.  \n   37  For example:\n   38  \n   39           # Bind up/down arrow keys to navigate through your history\n   40:          bindkey '\\e[A' directory-history-search-backward\n   41           bindkey '\\e[B' directory-history-search-forward\n   42  \n\n/dotfiles/macosz/runcoms/zshrc:\n   12  \n   13   # Bind up/down arrow keys to navigate through your history\n   14:  bindkey '\\e[A' directory-history-search-backward\n   15   bindkey '\\e[B' directory-history-search-forward\n   16  \n\n5 matches across 3 files\n",
					"settings":
					{
						"buffer_size": 1577,
						"line_ending": "Unix",
						"name": "Find Results",
						"scratch": true
					}
				},
				{
					"file": "/dotfiles/macosz/modules/zsh-directory-history/README.md",
					"settings":
					{
						"buffer_size": 2150,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/dotfiles/macosz/runcoms/zpreztorc",
					"settings":
					{
						"buffer_size": 3577,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 109.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"sshc",
						"Set Syntax: SSH Config"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"path",
						"File: Copy Path"
					],
					[
						"c++",
						"Set Syntax: C++"
					],
					[
						"pat",
						"File: Copy Path"
					],
					[
						"move",
						"File: Move"
					],
					[
						"copy",
						"File: Copy Path"
					],
					[
						"focus",
						"Focus File on Sidebar"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"psth",
						"Permute Lines: Shuffle"
					],
					[
						"make",
						"Set Syntax: Makefile"
					],
					[
						"makef",
						"Set Syntax: Makefile"
					],
					[
						"focu",
						"Focus File on Sidebar"
					],
					[
						"refre",
						"Side Bar: Refresh"
					],
					[
						"refr",
						"Side Bar: Refresh"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"syc+",
						"Set Syntax: C++"
					],
					[
						"",
						"Copy File Path"
					],
					[
						"focud",
						"Focus File on Sidebar"
					],
					[
						"syn",
						"Set Syntax: C++"
					],
					[
						"sublime",
						"Colorsublime: Install Theme"
					],
					[
						"foc",
						"Focus File on Sidebar"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"cop",
						"Copy File Path"
					],
					[
						"ref",
						"Side Bar: Refresh"
					],
					[
						"color",
						"Colorsublime: Install Theme"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"read",
						"ReadmePlease"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"package",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"instl",
						"Package Control: Install Package"
					]
				],
				"width": 449.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/dotfiles",
				"/dotfiles/macosz",
				"/dotfiles/macosz/modules",
				"/dotfiles/macosz/modules/alex/functions",
				"/dotfiles/macosz/modules/prompt/external",
				"/dotfiles/macosz/modules/zsh-directory-history",
				"/dotfiles/macosz/runcoms"
			],
			"file_history":
			[
				"/dotfiles/macosz/modules/zsh-directory-history/directory-history.plugin.zsh",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/rsub/rsub.sublime-settings",
				"/sketch/libraries/ADC/doxygen/html/search/typedefs_73.html",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/sketch/libraries/Alexduino/src/Alexduino.cpp",
				"/sketch/libraries.off/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/Pin.h",
				"/sketch/libraries/Pin/src/Pin.cpp",
				"/sketch/libraries/OneButton/OneButton.cpp",
				"/sketch/libraries/OneButton/OneButton.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
				"/Volumes/5T/_dl/ShiftRegister.h",
				"/sketch/libraries/Talkie/talkie.cpp",
				"/sketch/libraries/Talkie/README.md",
				"/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/Arduino.h",
				"/sketch/libraries/Alexduino/src/Alexduino.h",
				"/sketch/My7Seg/My7Seg.ino",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.h",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.cpp",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
				"/sketch/libraries/SevenSegment/SevenSegment.h",
				"/sketch/libraries/SevenSegment/SevenSegment.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/My7Seg/My7Seg.ino",
				"/sketch/libraries/ICs/4511.h",
				"/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
				"/sketch/libraries/ICs/4511.cpp",
				"/sketch/libraries.off/BCDTo7Seg/examples/b4511_counter/b4511_counter.ino",
				"/sketch/libraries/BCDTo7Seg.virgin/BCDTo7Seg.h",
				"/sketch/libraries/Talkie/examples/_2_Voltmeter/_2_Voltmeter.ino",
				"/sketch/libraries/Talkie/talkie.h",
				"/sketch/libraries/Potentiometer/Potentiometer.h",
				"/sketch/libraries/Potentiometer/Potentiometer.cpp",
				"/sketch/libraries/ansiterm/readme.md",
				"/sketch/libraries/AsyncDelay/src/AsyncDelay.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/WString.h",
				"/sketch/libraries.off/ArduinoJson/third-party/gtest-1.7.0/xcode/Config/FrameworkTarget.xcconfig",
				"/sketch/hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBoldOblique12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBold12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp",
				"/sketch/libraries/LED/LED.cpp",
				"/sketch/libraries/Color/Color.h",
				"/sketch/libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h",
				"/sketch/libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/LUFA/Drivers/Board/Board.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII/makefile",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/AlexAVR/avr/programmers.txt",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.no.h",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.h",
				"/sketch/hardware/AlexAVR/avr/platform.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/SimpleThrottle/SimpleThrottle.ino",
				"/sketch/libraries/Handler/Handler.cpp",
				"/sketch/libraries/Handler/examples/CanYouHandleIt/CanYouHandleIt.ino",
				"/sketch/libraries/Handler/Handler.h",
				"/sketch/libraries/LED/LED.h",
				"/sketch/libraries/Throttle/examples/GoGoGoTiny/GoGoGoTiny.ino",
				"/sketch/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/libraries/Throttle/Throttle.cpp",
				"/sketch/libraries/GPIO/src/PinGroup.h",
				"/sketch/libraries/TimerLib/PinEffector.h",
				"/sketch/libraries/TimerLib/utility/FastDelegate.h",
				"/sketch/LEDme/LED.h",
				"/sketch/libraries/Segment7/Segment7.pdf",
				"/sketch/libraries/StackArray/StackArray.h",
				"/sketch/hardware/AlexAVR/avr/boards.txt",
				"/sketch/libraries/TimerLib/SimpleTimer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/LED/library.properties",
				"/sketch/pinguino.bootloader.c",
				"/sketch/hardware/avr-openhardware/avr/avrdude.conf",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.cpp",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.h",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.cpp",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.h",
				"/sketch/hardware/Cosa/avr/platform.txt",
				"/sketch/hardware/Cosa/avr/sub-modules",
				"/sketch/libraries/Adafruit_GFX_Library/gfxfont.h",
				"/sketch/libraries/Pin/src/boards/attinyX5.h",
				"/sketch/ACS712/xACS712/xACS712/Configurations/Adafruit Trinket 5V-16MHz.xcconfig",
				"/sketch/hardware/AlexAVR/avr/programmers.txt",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/sketch/libraries/GPIO/src/GPIO.h",
				"/sketch/libraries/Pin/library.properties",
				"/sketch/libraries/Pin/src/boards/others.h",
				"/sketch/libraries/GPIO/library.properties",
				"/sketch/libraries/GPIO/src/GPIO.cpp",
				"/sketch/hardware/google-tiny/avr/cores/tiny/WProgram.h",
				"/sketch/Classy/.pioenvs/nodemcu/FrameworkArduino/Arduino.h",
				"/sketch/hardware/google-tiny/avr/cores/tiny/Arduino.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/neomatrix-serial-input/neomatrixserial/neomatrixserial.ino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/breadboard/avr/boards.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/FastLED/FastLED.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Chrono/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Delegate.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/WiringFrameworkDependencies.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Interrupts.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Timer.h",
				"/opt/smi8ng",
				"/opt/sping",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/examples/GoGoGo/GoGoGo.ino",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.cpp",
				"/Users/localadmin/.macosz/modules/alex/functions/gzipit",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Periodic/Periodic.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/UdpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/TcpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/DriverPWM.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/LICENSE",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Makefile-rboot.mk",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/.travis.yml",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/samples/Basic_Runloop/app/application.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/SmingCore.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Switch File Deluxe/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Timer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Delegate.h"
			],
			"find":
			{
				"height": 41.0
			},
			"find_in_files":
			{
				"height": 96.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"directory-history-search-backward",
					"tty",
					"runtime",
					"runtim",
					"byte",
					"open",
					"UInt",
					"UInt ",
					"UInt",
					"inha",
					"unsigned int8_t",
					"UInt",
					"smile_bmp",
					"UInt",
					"my_4511",
					"on",
					",",
					"my_4511",
					"IC_4511",
					"&sp",
					"const uint8_t \\*(.*)\\s*PROGMEM",
					"const uint8_t (.*)\\[\\]",
					"(sp",
					"uint8_t s",
					";\nuint8_t ",
					"7129",
					"Button 2",
					"analog",
					"ANALOg_MAX",
					"PWM",
					"speed",
					"button2",
					"button",
					"button2",
					"button1",
					"0x.., \\/\\* (.).*",
					"0x5B, /* 2 */",
					"*/\n",
					"0x.., \\/\\* (.).*",
					"0x7C, /* b */",
					"cursor",
					"setTextColor",
					"expi",
					"handl",
					"test",
					"begin",
					"matrix.",
					"matr",
					"());",
					"fillScreen",
					"Adafruit_NeoMatrix",
					"avrdude",
					"USBKEY",
					"BOARD",
					"digital_pin_to_bit_mask_PGM",
					"m1284p",
					"uni",
					"m1284p",
					"ing",
					"PULSE",
					"LEDClass",
					"enum",
					"#",
					"0x05",
					"0x054",
					"0x06",
					"1284",
					"05",
					"sig",
					"__cxa_pure_virtual",
					"__AVR_ATTiny",
					"__AVR_ATmega32U4__",
					"recipe.preproc.macros",
					"__cxa_pure_virtual",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"pioenvs/",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"GFX",
					"pure",
					"effe",
					"toggle\\(",
					"on\\(\\)",
					"on()",
					"on",
					"off",
					"#define.*PWM.*\\w[0-9]*",
					"#define.*ANALOG.*\\w[0-9]*",
					"#define.*255",
					"#define.*ANALOG.*255",
					"#define.*PWM.*255",
					"#define.*PWM.*",
					"PWM_RANGE",
					"PWM",
					"REGD",
					"DEF_",
					"DEF_THR",
					"FAST",
					"                           ",
					"FAST",
					"PWM",
					"sap",
					"line",
					"move",
					"up\"",
					"time",
					"className",
					"rightn",
					"Print",
					"print",
					"DEB",
					"\nDEBO",
					"DEBO",
					"\nDEBO",
					"DEBO",
					"rest",
					"define.*\\sON\\s",
					"rest",
					"digitalWrite",
					"define.*\\sON\\s",
					"define.*\\sON",
					"define.*ON",
					"\\bD5\\b",
					"D5",
					"ws",
					"isdi",
					"ud"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
					"uint8_t",
					"unsigned int",
					"int8_t",
					"unsigned int",
					"sp",
					"const PROGMEM uint8_t $1[]",
					"const uint8_t * $1",
					"(&sp",
					"const uint8_t s",
					",\n              ",
					"Button 2 (gas)",
					"brake",
					"gas",
					"\"$1\",",
					"",
					"LED"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/dotfiles"
				}
			],
			"groups":
			[
				{
					"selected": 3,
					"sheets":
					[
						{
							"buffer": 0,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1,
								"regions":
								{
								},
								"selection":
								[
									[
										1,
										1
									]
								],
								"settings":
								{
									"auto_name": "",
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 4,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/dotfiles/macosz/runcoms/zshrc",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 11064,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458585416.88,
									"syntax": "Packages/ShellScript/Shell-Unix-Generic.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 118.0,
								"translation.y": 1259.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						},
						{
							"buffer": 2,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1577,
								"regions":
								{
									"match":
									{
										"flags": 112,
										"regions":
										[
											[
												374,
												407
											],
											[
												633,
												666
											],
											[
												885,
												918
											],
											[
												1216,
												1249
											],
											[
												1453,
												1486
											]
										],
										"scope": ""
									}
								},
								"selection":
								[
									[
										330,
										330
									]
								],
								"settings":
								{
									"default_dir": "/dotfiles",
									"detect_indentation": false,
									"line_numbers": false,
									"output_tag": 1,
									"result_base_dir": "",
									"result_file_regex": "^([^ 	].*):$",
									"result_line_regex": "^ +([0-9]+):",
									"scroll_past_end": true,
									"sorttabs_lastactivated": 1458585848.92,
									"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 58.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "/dotfiles/macosz/modules/zsh-directory-history/README.md",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 2150,
								"regions":
								{
								},
								"selection":
								[
									[
										772,
										772
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458609134.79,
									"syntax": "Packages/Markdown/Markdown.sublime-syntax",
									"tab_size": 3,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 1.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						},
						{
							"buffer": 4,
							"file": "/dotfiles/macosz/runcoms/zpreztorc",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 3577,
								"regions":
								{
								},
								"selection":
								[
									[
										563,
										563
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458585748.92,
									"syntax": "Packages/ShellScript/Shell-Unix-Generic.sublime-syntax",
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 189.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 33.0
			},
			"input":
			{
				"height": 36.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1360 741 0 0 1360 745 ",
			"project": "",
			"replace":
			{
				"height": 62.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"my",
						"My7Seg/My7Seg.ino"
					],
					[
						"my7",
						"libraries/ADC/doxygen/html/search/typedefs_73.html"
					],
					[
						"orig",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"4511",
						"libraries/ICs/4511.h"
					],
					[
						"my7se",
						"My7Seg/My7Seg.ino"
					],
					[
						"matrixt",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"cancom",
						"libraries/Alexduino/examples/CanCompile/CanCompile.ino"
					],
					[
						"led",
						"libraries/LED/LED.h"
					],
					[
						"sim",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"simpl",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"mys",
						"My7Seg/My7Seg.ino"
					],
					[
						"aledxdu",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"async",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"matrixtest",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde"
					],
					[
						"alexdui",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"wstrin",
						"hardware/AlexAVR/avr/cores/arduino/WString.h"
					],
					[
						"gfx",
						"libraries/Adafruit_GFX_Library/Adafruit_GFX.h"
					],
					[
						"gfxc",
						"hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h"
					],
					[
						"color",
						"libraries/Color/Color.h"
					],
					[
						"matri",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"pixel",
						"libraries/NeoPixelBus_by_Makuna/src/NeoPixelAnimator.h"
					],
					[
						"adaf",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"asyn",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"neopix",
						"libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h"
					],
					[
						"matrix",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"alexd",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"pingro",
						"libraries/GPIO/src/PinGroup.h"
					],
					[
						"pin",
						"libraries/Pin/src/Pin.h"
					],
					[
						"",
						"libraries/LED/LED.h"
					],
					[
						"stack",
						"libraries/StackArray/StackArray.h"
					],
					[
						"stackarray",
						"libraries/StackArray/StackArray.h"
					],
					[
						"pin.h",
						"libraries/Pin/src/Pin.h"
					],
					[
						"asyncd",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"led.",
						"LEDme/LED.h"
					],
					[
						"wpro",
						"hardware/google-tiny/avr/cores/tiny/WProgram.h"
					],
					[
						"arduino.h",
						"hardware/google-tiny/avr/cores/tiny/Arduino.h"
					],
					[
						"gogo",
						"Throttle/examples/GoGoGo/GoGoGo.ino"
					],
					[
						"throttl",
						"Throttle/Throttle.cpp"
					],
					[
						"throttle2016",
						"Throttle2016.h"
					],
					[
						"throttle",
						"Throttle2016.h"
					],
					[
						"dele",
						"Sming/SmingCore/Delegate.h"
					],
					[
						"timer",
						"Sming/SmingCore/Timer.h"
					],
					[
						"smingco",
						"Sming/SmingCore/SmingCore.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 319.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 93,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ui",
						"uint16_t"
					],
					[
						"setOutput",
						"setOutputLow"
					],
					[
						"rand",
						"randVal"
					],
					[
						"PWM",
						"PWMRANGE"
					],
					[
						"_C",
						"_CLEAR_Pin"
					],
					[
						"_l",
						"_level"
					],
					[
						"ga",
						"gasLight"
					],
					[
						"off",
						"offset"
					],
					[
						"Color",
						"colorCycle"
					],
					[
						"uint",
						"uint16_t"
					],
					[
						"NMe",
						"Adafruit_NeoMatrix"
					],
					[
						"S",
						"StackArray"
					],
					[
						"POR",
						"PORT_HIGH"
					],
					[
						"set",
						"setHigh"
					],
					[
						"board",
						"boards"
					],
					[
						"e",
						"endif"
					],
					[
						"DEF",
						"DEF_PWM"
					],
					[
						"be",
						"begin"
					],
					[
						"pri",
						"private"
					],
					[
						"chara",
						"character"
					],
					[
						"DE",
						"DEF_MAX_OUT"
					],
					[
						"THROTTLE_V_M",
						"THROTTLE_V_MAX"
					],
					[
						"OTA",
						"OTA_IP"
					],
					[
						"Up",
						"UPDATE_PIN"
					],
					[
						"ini",
						"initializeUs"
					],
					[
						"uin",
						"uint8_t"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino.orig/servuino/arduino.h",
					"settings":
					{
						"buffer_size": 16087,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino.orig/webuino/index.js",
					"settings":
					{
						"buffer_size": 311,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 249.0,
				"last_filter": "path",
				"selected_items":
				[
					[
						"path",
						"File: Copy Path"
					],
					[
						"plist",
						"Plist Binary: Toggle XML & Binary"
					],
					[
						"bina",
						"Plist Binary: Toggle XML & Binary"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"pat",
						"File: Copy Path"
					],
					[
						"name",
						"File: Copy Name"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"coff",
						"Set Syntax: CoffeeScript"
					],
					[
						"gith",
						"GitHub Flavored Markdown: Preview"
					],
					[
						"conf",
						"Set Syntax: Generic Config"
					],
					[
						"focu",
						"Focus File on Sidebar"
					],
					[
						"sshc",
						"Set Syntax: SSH Config"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"c++",
						"Set Syntax: C++"
					],
					[
						"move",
						"File: Move"
					],
					[
						"copy",
						"File: Copy Path"
					],
					[
						"focus",
						"Focus File on Sidebar"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"psth",
						"Permute Lines: Shuffle"
					],
					[
						"make",
						"Set Syntax: Makefile"
					],
					[
						"makef",
						"Set Syntax: Makefile"
					],
					[
						"refre",
						"Side Bar: Refresh"
					],
					[
						"refr",
						"Side Bar: Refresh"
					],
					[
						"pa",
						"Package Control: Install Package"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"syc+",
						"Set Syntax: C++"
					],
					[
						"",
						"Copy File Path"
					],
					[
						"focud",
						"Focus File on Sidebar"
					],
					[
						"syn",
						"Set Syntax: C++"
					],
					[
						"sublime",
						"Colorsublime: Install Theme"
					],
					[
						"foc",
						"Focus File on Sidebar"
					],
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"cop",
						"Copy File Path"
					],
					[
						"ref",
						"Side Bar: Refresh"
					],
					[
						"color",
						"Colorsublime: Install Theme"
					],
					[
						"read",
						"ReadmePlease"
					],
					[
						"package",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"instl",
						"Package Control: Install Package"
					]
				],
				"width": 539.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino.orig",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino.orig/servuino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino.orig/webuino"
			],
			"file_history":
			[
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino/.git/MERGE_MSG",
				"/Library/Preferences/com.apple.windowserver.plist",
				"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/IOKit/usb/IOUSBHostDevice.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/rsub/rsub.sublime-settings",
				"/sketch/libraries/ADC/doxygen/html/search/typedefs_73.html",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/sketch/libraries/Alexduino/src/Alexduino.cpp",
				"/sketch/libraries.off/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/PinGroup.h",
				"/sketch/libraries/Pin/src/Pin.h",
				"/sketch/libraries/Pin/src/Pin.cpp",
				"/sketch/libraries/OneButton/OneButton.cpp",
				"/sketch/libraries/OneButton/OneButton.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
				"/Volumes/5T/_dl/ShiftRegister.h",
				"/sketch/libraries/Talkie/talkie.cpp",
				"/sketch/libraries/Talkie/README.md",
				"/sketch/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/Arduino.h",
				"/sketch/libraries/Alexduino/src/Alexduino.h",
				"/sketch/My7Seg/My7Seg.ino",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.h",
				"/sketch/libraries/Adafruit_LED_Backpack/Adafruit_LEDBackpack.cpp",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde",
				"/sketch/libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino",
				"/sketch/libraries/SevenSegment/SevenSegment.h",
				"/sketch/libraries/SevenSegment/SevenSegment.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/My7Seg/My7Seg.ino",
				"/sketch/libraries/ICs/4511.h",
				"/sketch/libraries/ICs/example/AH_74HC4511/AH_74HC4511.ino",
				"/sketch/libraries/ICs/4511.cpp",
				"/sketch/libraries.off/BCDTo7Seg/examples/b4511_counter/b4511_counter.ino",
				"/sketch/libraries/BCDTo7Seg.virgin/BCDTo7Seg.h",
				"/sketch/libraries/Talkie/examples/_2_Voltmeter/_2_Voltmeter.ino",
				"/sketch/libraries/Talkie/talkie.h",
				"/sketch/libraries/Potentiometer/Potentiometer.h",
				"/sketch/libraries/Potentiometer/Potentiometer.cpp",
				"/sketch/libraries/ansiterm/readme.md",
				"/sketch/libraries/AsyncDelay/src/AsyncDelay.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/sketch/hardware/AlexAVR/avr/cores/arduino/WString.h",
				"/sketch/libraries.off/ArduinoJson/third-party/gtest-1.7.0/xcode/Config/FrameworkTarget.xcconfig",
				"/sketch/hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBoldOblique12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Fonts/FreeSansBold12pt7b.h",
				"/sketch/libraries/Adafruit_GFX_Library/Adafruit_GFX.cpp",
				"/sketch/libraries/LED/LED.cpp",
				"/sketch/libraries/Color/Color.h",
				"/sketch/libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h",
				"/sketch/libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/LUFA/Drivers/Board/Board.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/lufa/Projects/AVRISP-MKII/makefile",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/AlexAVR/avr/programmers.txt",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.no.h",
				"/sketch/hardware/AlexAVR/avr/variants/mega1284duino/pins_arduino.h",
				"/sketch/hardware/AlexAVR/avr/platform.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/SimpleThrottle/SimpleThrottle.ino",
				"/sketch/libraries/Handler/Handler.cpp",
				"/sketch/libraries/Handler/examples/CanYouHandleIt/CanYouHandleIt.ino",
				"/sketch/libraries/Handler/Handler.h",
				"/sketch/libraries/LED/LED.h",
				"/sketch/libraries/Throttle/examples/GoGoGoTiny/GoGoGoTiny.ino",
				"/sketch/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/examples/CanCompile/CanCompile.ino",
				"/sketch/libraries/Throttle/Throttle.cpp",
				"/sketch/libraries/GPIO/src/PinGroup.h",
				"/sketch/libraries/TimerLib/PinEffector.h",
				"/sketch/libraries/TimerLib/utility/FastDelegate.h",
				"/sketch/LEDme/LED.h",
				"/sketch/libraries/Segment7/Segment7.pdf",
				"/sketch/libraries/StackArray/StackArray.h",
				"/sketch/hardware/AlexAVR/avr/boards.txt",
				"/sketch/libraries/TimerLib/SimpleTimer.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/LED/library.properties",
				"/sketch/pinguino.bootloader.c",
				"/sketch/hardware/avr-openhardware/avr/avrdude.conf",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.cpp",
				"/sketch/hardware.off/megax4/hardware/avr/1.0.0/cores/megax4/new.h",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.cpp",
				"/sketch/hardware/AlexAVR/avr/cores/tiny/new.h",
				"/sketch/hardware/Cosa/avr/platform.txt",
				"/sketch/hardware/Cosa/avr/sub-modules",
				"/sketch/libraries/Adafruit_GFX_Library/gfxfont.h",
				"/sketch/libraries/Pin/src/boards/attinyX5.h",
				"/sketch/ACS712/xACS712/xACS712/Configurations/Adafruit Trinket 5V-16MHz.xcconfig",
				"/sketch/hardware/AlexAVR/avr/programmers.txt",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/sketch/libraries/GPIO/src/GPIO.h",
				"/sketch/libraries/Pin/library.properties",
				"/sketch/libraries/Pin/src/boards/others.h",
				"/sketch/libraries/GPIO/library.properties",
				"/sketch/libraries/GPIO/src/GPIO.cpp",
				"/sketch/hardware/google-tiny/avr/cores/tiny/WProgram.h",
				"/sketch/Classy/.pioenvs/nodemcu/FrameworkArduino/Arduino.h",
				"/sketch/hardware/google-tiny/avr/cores/tiny/Arduino.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/neomatrix-serial-input/neomatrixserial/neomatrixserial.ino",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/hardware/breadboard/avr/boards.txt",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Handler/Handler.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Alexduino.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle/Throttle.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Adafruit_GFX_Library/Adafruit_GFX.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/FastLED/FastLED.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Chrono/README.md",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Delegate.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/WiringFrameworkDependencies.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Interrupts.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Alexduino/src/Timer.h",
				"/opt/smi8ng",
				"/opt/sping",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/examples/GoGoGo/GoGoGo.ino",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/ArduinoLibraries/libraries/Throttle2016/Throttle2016.cpp",
				"/Users/localadmin/.macosz/modules/alex/functions/gzipit",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Libraries/Periodic/Periodic.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/UdpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/Network/TcpConnection.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/DriverPWM.h",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/LICENSE",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/Makefile-rboot.mk",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/.travis.yml",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/samples/Basic_Runloop/app/application.cpp",
				"/Volumes/5T/ServiceData/GoogleDrive/_IoT/Sming/Sming/SmingCore/SmingCore.h",
				"/Volumes/5T/ServiceData/localadmin/Library/Application Support/Sublime Text 3/Packages/Switch File Deluxe/README.md"
			],
			"find":
			{
				"height": 25.0
			},
			"find_in_files":
			{
				"height": 96.0,
				"where_history":
				[
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"if\\((p=.*\\))\\)",
					"while\\((p=.*\\))\\)",
					",-1",
					",-01",
					"while\\((p=.*\\))\\)",
					"if\\((p=.*\\))\\)",
					"\\(p=",
					"\\wp=",
					"\\bp=",
					"p=",
					"editor",
					"Quartz2DExtremeEnabled",
					"com.apple.windowserver.plist",
					"(",
					");",
					"inde",
					"DeviceRequest",
					"tty",
					"runtime",
					"runtim",
					"byte",
					"open",
					"UInt",
					"UInt ",
					"UInt",
					"inha",
					"unsigned int8_t",
					"UInt",
					"smile_bmp",
					"UInt",
					"my_4511",
					"on",
					",",
					"my_4511",
					"IC_4511",
					"&sp",
					"const uint8_t \\*(.*)\\s*PROGMEM",
					"const uint8_t (.*)\\[\\]",
					"(sp",
					"uint8_t s",
					";\nuint8_t ",
					"7129",
					"Button 2",
					"analog",
					"ANALOg_MAX",
					"PWM",
					"speed",
					"button2",
					"button",
					"button2",
					"button1",
					"0x.., \\/\\* (.).*",
					"0x5B, /* 2 */",
					"*/\n",
					"0x.., \\/\\* (.).*",
					"0x7C, /* b */",
					"cursor",
					"setTextColor",
					"expi",
					"handl",
					"test",
					"begin",
					"matrix.",
					"matr",
					"());",
					"fillScreen",
					"Adafruit_NeoMatrix",
					"avrdude",
					"USBKEY",
					"BOARD",
					"digital_pin_to_bit_mask_PGM",
					"m1284p",
					"uni",
					"m1284p",
					"ing",
					"PULSE",
					"LEDClass",
					"enum",
					"#",
					"0x05",
					"0x054",
					"0x06",
					"1284",
					"05",
					"sig",
					"__cxa_pure_virtual",
					"__AVR_ATTiny",
					"__AVR_ATmega32U4__",
					"recipe.preproc.macros",
					"__cxa_pure_virtual",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"pioenvs/",
					"UNICORN_PIN",
					"__cxa_pure_virtual",
					"GFX",
					"pure",
					"effe",
					"toggle\\(",
					"on\\(\\)",
					"on()",
					"on",
					"off",
					"#define.*PWM.*\\w[0-9]*",
					"#define.*ANALOG.*\\w[0-9]*",
					"#define.*255",
					"#define.*ANALOG.*255",
					"#define.*PWM.*255",
					"#define.*PWM.*",
					"PWM_RANGE",
					"PWM",
					"REGD",
					"DEF_",
					"DEF_THR",
					"FAST",
					"                           ",
					"FAST",
					"PWM",
					"sap",
					"line",
					"move",
					"up\"",
					"time",
					"className",
					"rightn",
					"Print",
					"print",
					"DEB"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
					"if(($1))",
					"while(($1))",
					"if(($1))",
					"if(($1)))",
					"",
					"uint8_t",
					"unsigned int",
					"int8_t",
					"unsigned int",
					"sp",
					"const PROGMEM uint8_t $1[]",
					"const uint8_t * $1",
					"(&sp",
					"const uint8_t s",
					",\n              ",
					"Button 2 (gas)",
					"brake",
					"gas",
					"\"$1\",",
					"",
					"LED"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino.orig"
				}
			],
			"groups":
			[
				{
					"selected": 1,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino.orig/servuino/arduino.h",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 16087,
								"regions":
								{
								},
								"selection":
								[
									[
										858,
										858
									]
								],
								"settings":
								{
									"sorttabs_lastactivated": 1458606698.98,
									"syntax": "Packages/C++/C++.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 411.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/Volumes/5T/ServiceData/GoogleDrive/_IoT/simuino.orig/webuino/index.js",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 311,
								"regions":
								{
								},
								"selection":
								[
									[
										259,
										259
									]
								],
								"settings":
								{
									"open_with_edit": true,
									"sorttabs_lastactivated": 1458609276.53,
									"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 25.0
			},
			"input":
			{
				"height": 36.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1360 741 0 0 1360 745 ",
			"project": "",
			"replace":
			{
				"height": 46.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"my",
						"My7Seg/My7Seg.ino"
					],
					[
						"my7",
						"libraries/ADC/doxygen/html/search/typedefs_73.html"
					],
					[
						"orig",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"4511",
						"libraries/ICs/4511.h"
					],
					[
						"my7se",
						"My7Seg/My7Seg.ino"
					],
					[
						"matrixt",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest.orig/matrixtest.orig.ino"
					],
					[
						"cancom",
						"libraries/Alexduino/examples/CanCompile/CanCompile.ino"
					],
					[
						"led",
						"libraries/LED/LED.h"
					],
					[
						"sim",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"simpl",
						"SimpleThrottle/SimpleThrottle.ino"
					],
					[
						"mys",
						"My7Seg/My7Seg.ino"
					],
					[
						"aledxdu",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"async",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"matrixtest",
						"libraries/Adafruit_NeoMatrix/examples/matrixtest/matrixtest.pde"
					],
					[
						"alexdui",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"wstrin",
						"hardware/AlexAVR/avr/cores/arduino/WString.h"
					],
					[
						"gfx",
						"libraries/Adafruit_GFX_Library/Adafruit_GFX.h"
					],
					[
						"gfxc",
						"hardware.off/esp/tools/xtensa-lx106-elf/lib/gcc/xtensa-lx106-elf/4.8.2/plugin/include/c-family/c-common.h"
					],
					[
						"color",
						"libraries/Color/Color.h"
					],
					[
						"matri",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"pixel",
						"libraries/NeoPixelBus_by_Makuna/src/NeoPixelAnimator.h"
					],
					[
						"adaf",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"asyn",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"neopix",
						"libraries/Adafruit_NeoPixel/Adafruit_NeoPixel.h"
					],
					[
						"matrix",
						"libraries/Adafruit_NeoMatrix/Adafruit_NeoMatrix.h"
					],
					[
						"alexd",
						"libraries/Alexduino/src/Alexduino.h"
					],
					[
						"pingro",
						"libraries/GPIO/src/PinGroup.h"
					],
					[
						"pin",
						"libraries/Pin/src/Pin.h"
					],
					[
						"",
						"libraries/LED/LED.h"
					],
					[
						"stack",
						"libraries/StackArray/StackArray.h"
					],
					[
						"stackarray",
						"libraries/StackArray/StackArray.h"
					],
					[
						"pin.h",
						"libraries/Pin/src/Pin.h"
					],
					[
						"asyncd",
						"libraries/AsyncDelay/src/AsyncDelay.h"
					],
					[
						"led.",
						"LEDme/LED.h"
					],
					[
						"wpro",
						"hardware/google-tiny/avr/cores/tiny/WProgram.h"
					],
					[
						"arduino.h",
						"hardware/google-tiny/avr/cores/tiny/Arduino.h"
					],
					[
						"gogo",
						"Throttle/examples/GoGoGo/GoGoGo.ino"
					],
					[
						"throttl",
						"Throttle/Throttle.cpp"
					],
					[
						"throttle2016",
						"Throttle2016.h"
					],
					[
						"throttle",
						"Throttle2016.h"
					],
					[
						"dele",
						"Sming/SmingCore/Delegate.h"
					],
					[
						"timer",
						"Sming/SmingCore/Timer.h"
					],
					[
						"smingco",
						"Sming/SmingCore/SmingCore.h"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": true,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 319.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 107,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
		]
	}
}
